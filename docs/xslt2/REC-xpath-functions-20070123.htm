<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0055)http://www.w3.org/TR/2007/REC-xpath-functions-20070123/ -->
<?xml version="1.0" encoding="utf-8"?><HTML lang=EN xml:lang="EN" 
xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>XQuery 1.0 and XPath 2.0 Functions and Operators</TITLE>
<META http-equiv=Content-Type content="text/html; charset=utf-8">
<META content="MSHTML 6.00.2900.3020" name=GENERATOR>
<STYLE type=text/css>CODE {
	FONT-FAMILY: monospace
}
DIV.constraint {
	MARGIN-LEFT: 2em
}
DIV.issue {
	MARGIN-LEFT: 2em
}
DIV.note {
	MARGIN-LEFT: 2em
}
DIV.notice {
	MARGIN-LEFT: 2em
}
DIV.issue P.title {
	MARGIN-LEFT: -2em
}
OL.enumar {
	LIST-STYLE-TYPE: decimal
}
OL.enumla {
	LIST-STYLE-TYPE: lower-alpha
}
OL.enumlr {
	LIST-STYLE-TYPE: lower-roman
}
OL.enumua {
	LIST-STYLE-TYPE: upper-alpha
}
OL.enumur {
	LIST-STYLE-TYPE: upper-roman
}
LI P {
	MARGIN-TOP: 0.3em; MARGIN-BOTTOM: 0.3em
}
SUP SMALL {
	COLOR: #8f8f8f; FONT-STYLE: italic
}
DIV.exampleInner PRE {
	MARGIN-TOP: 0em; MARGIN-BOTTOM: 0em; MARGIN-LEFT: 1em
}
DIV.exampleOuter {
	BORDER-RIGHT: gray 4px double; PADDING-RIGHT: 0em; BORDER-TOP: gray 4px double; PADDING-LEFT: 0em; PADDING-BOTTOM: 0em; MARGIN: 0em; BORDER-LEFT: gray 4px double; PADDING-TOP: 0em; BORDER-BOTTOM: gray 4px double
}
DIV.exampleInner {
	PADDING-RIGHT: 4px; BORDER-TOP: #d3d3d3 4px double; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; MARGIN: 0em; PADDING-TOP: 4px; BORDER-BOTTOM: #d3d3d3 4px double; BACKGROUND-COLOR: #d5dee3
}
DIV.exampleWrapper {
	MARGIN: 4px
}
DIV.exampleHeader {
	FONT-WEIGHT: bold; MARGIN: 4px
}
DIV.issue {
	MARGIN-BOTTOM: 20pt; BORDER-BOTTOM: black 1pt solid
}
TH.issue-toc-head {
	BORDER-BOTTOM: black 1pt solid
}
DIV.schemaComp {
	BORDER-RIGHT: gray 4px double; PADDING-RIGHT: 0em; BORDER-TOP: gray 4px double; PADDING-LEFT: 0em; PADDING-BOTTOM: 0em; MARGIN: 0em 1em; BORDER-LEFT: gray 4px double; PADDING-TOP: 0em; BORDER-BOTTOM: gray 4px double
}
DIV.compHeader {
	FONT-WEIGHT: bold; MARGIN: 4px
}
SPAN.schemaComp {
	COLOR: #a52a2a; BACKGROUND-COLOR: white
}
DIV.compBody {
	PADDING-RIGHT: 4px; BORDER-TOP: #d3d3d3 4px double; PADDING-LEFT: 4px; PADDING-BOTTOM: 4px; MARGIN: 0em; PADDING-TOP: 4px
}
DIV.exampleInner {
	PADDING-RIGHT: 4px; BORDER-TOP: #d3d3d3 4px double; PADDING-LEFT: 4px; MARGIN-BOTTOM: 4px; PADDING-BOTTOM: 4px; COLOR: black; PADDING-TOP: 4px; BORDER-BOTTOM: #d3d3d3 4px double; BACKGROUND-COLOR: #d5dee3
}
DIV.issueBody {
	MARGIN-LEFT: 0.25in
}
CODE.function {
	FONT-WEIGHT: bold
}
CODE.return-type {
	FONT-STYLE: italic
}
CODE.return-varies {
	FONT-WEIGHT: bold; FONT-STYLE: italic
}
CODE.type {
	FONT-STYLE: italic
}
CODE.as {
	FONT-STYLE: normal
}
CODE.arg {
	
}
CODE.strikeout {
	TEXT-DECORATION: line-through
}
P.footnote {
	FONT-SIZE: 8pt
}
TABLE.casting {
	FONT-SIZE: x-small
}
TABLE.hierarchy {
	FONT-SIZE: x-small
}
TD.castY {
	COLOR: black; BACKGROUND-COLOR: #7fff7f
}
TD.castN {
	COLOR: black; BACKGROUND-COLOR: #ff7f7f
}
TD.castM {
	COLOR: black; BACKGROUND-COLOR: white
}
TD.castOther {
	COLOR: black; BACKGROUND-COLOR: yellow
}
SPAN.cancast:hover {
	COLOR: black; BACKGROUND-COLOR: #ffa
}
DIV.protoref {
	MARGIN-LEFT: 0.5in; TEXT-INDENT: -0.5in
}
</STYLE>
<LINK href="REC-xpath-functions-20070123_files/W3C-REC.css" type=text/css 
rel=stylesheet></HEAD>
<BODY>
<DIV class=head>
<P><A href="http://www.w3.org/"><IMG height=48 alt=W3C 
src="REC-xpath-functions-20070123_files/w3c_home.png" width=72></A></P>
<H1><A id=title name=title></A>XQuery 1.0 and XPath 2.0 Functions and 
Operators</H1>
<H2><A id=w3c-doctype name=w3c-doctype></A>W3C Recommendation 23 January 
2007</H2>
<DL>
  <DT>This version: 
  <DD><A 
  href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/">http://www.w3.org/TR/2007/REC-xpath-functions-20070123/</A> 

  <DT>Latest version: 
  <DD><A 
  href="http://www.w3.org/TR/xpath-functions/">http://www.w3.org/TR/xpath-functions/</A> 

  <DT>Previous version: 
  <DD><A 
  href="http://www.w3.org/TR/2006/PR-xpath-functions-20061121/">http://www.w3.org/TR/2006/PR-xpath-functions-20061121/</A> 

  <DT>Editors: 
  <DD>Ashok Malhotra (XML Query and XSL WGs), Oracle Corporation <A 
  href="mailto:ashok.malhotra@alum.mit.edu">mailto:ashok.malhotra@alum.mit.edu</A> 

  <DD>Jim Melton (XML Query WG), Oracle Corporation <A 
  href="mailto:jim.melton@acm.org">mailto:jim.melton@acm.org</A> 
  <DD>Norman Walsh (XSL WG), Sun Microsystems <A 
  href="mailto:Norman.Walsh@Sun.COM">mailto:Norman.Walsh@Sun.COM</A> </DD></DL>
<P>Please refer to the <A 
href="http://www.w3.org/XML/2007/qt-errata/xpath-functions-errata.html"><STRONG>errata</STRONG></A> 
for this document, which may include some normative corrections.</P>
<P>See also <A 
href="http://www.w3.org/2003/03/Translations/byTechnology?technology=xpath-functions"><STRONG>translations</STRONG></A>.</P>
<P>This document is also available in these non-normative formats: <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/xpath-functions.xml">XML</A> 
and&nbsp;<A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/diff-from-20061121.html"> 
Recent revisions</A>.</P>
<P class=copyright><A 
href="http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright</A>&nbsp;©&nbsp;2007&nbsp;<A 
href="http://www.w3.org/"> <ACRONYM 
title="World Wide Web Consortium">W3C</ACRONYM></A><SUP>®</SUP> (<A 
href="http://www.csail.mit.edu/"><ACRONYM 
title="Massachusetts Institute of Technology">MIT</ACRONYM></A>, <A 
href="http://www.ercim.org/"><ACRONYM 
title="European Research Consortium for Informatics and Mathematics">ERCIM</ACRONYM></A>, 
<A href="http://www.keio.ac.jp/">Keio</A>), All Rights Reserved. W3C <A 
href="http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">liability</A>, 
<A 
href="http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">trademark</A> 
and <A href="http://www.w3.org/Consortium/Legal/copyright-documents">document 
use</A> rules apply.</P></DIV>
<HR>

<DIV>
<H2><A id=abstract name=abstract></A>Abstract</H2>
<P>This document defines constructor functions, operators and functions on the 
datatypes defined in <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> and the datatypes defined in <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A>. It also discusses functions and operators on 
nodes and node sequences as defined in the <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A>. These functions and operators are defined for 
use in <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/#xpath20">[XML Path 
Language (XPath) 2.0]</A>, <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A> and other related XML standards. The 
signatures and summaries of functions defined in this document are available at: 
<A 
href="http://www.w3.org/2005/xpath-functions">http://www.w3.org/2005/xpath-functions</A>.</P></DIV>
<DIV>
<H2><A id=status name=status></A>Status of this Document</H2>
<P><EM>This section describes the status of this document at the time of its 
publication. Other documents may supersede this document. A list of current W3C 
publications and the latest revision of this technical report can be found in 
the <A href="http://www.w3.org/TR/">W3C technical reports index</A> at 
http://www.w3.org/TR/.</EM></P>
<P>This is one document in a set of eight documents that have progressed to 
Recommendation together (XQuery 1.0, XQueryX 1.0, XSLT 2.0, Data Model, 
Functions and Operators, Formal Semantics, Serialization, XPath 2.0).</P>
<P>This is a <A 
href="http://www.w3.org/2004/02/Process-20040205/tr.html#RecsW3C">Recommendation</A> 
of the W3C. It has been jointly developed by the W3C <A 
href="http://www.w3.org/XML/Query">XML Query Working Group</A> and the W3C <A 
href="http://www.w3.org/Style/XSL">XSL Working Group</A>, each of which is part 
of the <A href="http://www.w3.org/XML/Activity">XML Activity</A>.</P>
<P>This document has been reviewed by W3C Members, by software developers, and 
by other W3C groups and interested parties, and is endorsed by the Director as a 
W3C Recommendation. It is a stable document and may be used as reference 
material or cited from another document. W3C's role in making the Recommendation 
is to draw attention to the specification and to promote its widespread 
deployment. This enhances the functionality and interoperability of the Web.</P>
<P>This document incorporates minor changes made against the <A 
href="http://www.w3.org/2004/02/Process-20040205/tr.html#RecsPR">Proposed 
Recommendation</A> of 21 November 2006; please see the public disposition of 
comments for details. Changes to this document since the <A 
href="http://www.w3.org/2004/02/Process-20040205/tr.html#RecsPR">Proposed 
Recommendation</A> are detailed in the <A 
href="http://www.w3.org/TR/2007/REC-xpath-functions-20070123/#changelog"><B>B 
Change Log for this Version of the Document</B></A>.</P>
<P>Please report errors in this document using W3C's <A 
href="http://www.w3.org/Bugs/Public/">public Bugzilla system</A> (instructions 
can be found at <A 
href="http://www.w3.org/XML/2005/04/qt-bugzilla">http://www.w3.org/XML/2005/04/qt-bugzilla</A>). 
If access to that system is not feasible, you may send your comments to the W3C 
XSLT/XPath/XQuery public comments mailing list, <A 
href="mailto:public-qt-comments@w3.org">public-qt-comments@w3.org</A>. It will 
be very helpful if you include the string “[FO]” in the subject line of your 
report, whether made in Bugzilla or in email. Each Bugzilla entry and email 
message should contain only one error report. Archives of the comments and 
responses are available at <A 
href="http://lists.w3.org/Archives/Public/public-qt-comments/">http://lists.w3.org/Archives/Public/public-qt-comments/</A>.</P>
<P>This document was produced by groups operating under the <A 
href="http://www.w3.org/Consortium/Patent-Policy-20040205/">5 February 2004 W3C 
Patent Policy</A>. W3C maintains a <A 
href="http://www.w3.org/2004/01/pp-impl/18797/status#disclosures">public list of 
any patent disclosures</A> made in connection with the deliverables of the XML 
Query Working Group and also maintains a <A 
href="http://www.w3.org/2004/01/pp-impl/19552/status#disclosures">public list of 
any patent disclosures</A> made in connection with the deliverables of the XSL 
Working Group; those pages also include instructions for disclosing a patent. An 
individual who has actual knowledge of a patent which the individual believes 
contains <A 
href="http://www.w3.org/Consortium/Patent-Policy-20040205/#def-essential">Essential 
Claim(s)</A> must disclose the information in accordance with <A 
href="http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure">section 
6 of the W3C Patent Policy</A>.</P></DIV>
<DIV class=toc>
<H2><A id=contents name=contents></A>Table of Contents</H2>
<P class=toc>1 <A 
href="REC-xpath-functions-20070123.htm#intro">Introduction</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;1.1 
<A 
href="REC-xpath-functions-20070123.htm#conformance">Conformance</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;1.2 
<A 
href="REC-xpath-functions-20070123.htm#namespace-prefixes">Namespaces 
and Prefixes</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;1.3 <A 
href="REC-xpath-functions-20070123.htm#func-overloading">Function 
Overloading</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;1.4 <A 
href="REC-xpath-functions-20070123.htm#func-signatures">Function 
Signatures and Descriptions</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;1.5 <A 
href="REC-xpath-functions-20070123.htm#namespace-terminology">Namespace 
Terminology</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;1.6 <A 
href="REC-xpath-functions-20070123.htm#datatypes">Type 
Hierarchy</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;1.7 <A 
href="REC-xpath-functions-20070123.htm#terminology">Terminology</A><BR>2 
<A 
href="REC-xpath-functions-20070123.htm#accessors">Accessors</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;2.1 
<A 
href="REC-xpath-functions-20070123.htm#func-node-name">fn:node-name</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;2.2 
<A 
href="REC-xpath-functions-20070123.htm#func-nilled">fn:nilled</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;2.3 
<A 
href="REC-xpath-functions-20070123.htm#func-string">fn:string</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;2.4 
<A 
href="REC-xpath-functions-20070123.htm#func-data">fn:data</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;2.5 
<A 
href="REC-xpath-functions-20070123.htm#func-base-uri">fn:base-uri</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;2.6 
<A 
href="REC-xpath-functions-20070123.htm#func-document-uri">fn:document-uri</A><BR>3 
<A href="REC-xpath-functions-20070123.htm#func-error">The 
Error Function</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;3.1 <A 
href="REC-xpath-functions-20070123.htm#func-error-examples">Examples</A><BR>4 
<A href="REC-xpath-functions-20070123.htm#func-trace">The 
Trace Function</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;4.1 <A 
href="REC-xpath-functions-20070123.htm#func-trace-examples">Examples</A><BR>5 
<A 
href="REC-xpath-functions-20070123.htm#constructor-functions">Constructor 
Functions</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;5.1 <A 
href="REC-xpath-functions-20070123.htm#constructor-functions-for-xsd-types">Constructor 
Functions for XML Schema Built-in Types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;5.2 <A 
href="REC-xpath-functions-20070123.htm#func-dateTime">A 
Special Constructor Function for 
xs:dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5.2.1 <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;5.3 
<A 
href="REC-xpath-functions-20070123.htm#constructor-qname-notation">Constructor 
Functions for xs:QName and xs:NOTATION</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;5.4 <A 
href="REC-xpath-functions-20070123.htm#constructor-functions-for-user-defined-types">Constructor 
Functions for User-Defined Types</A><BR>6 <A 
href="REC-xpath-functions-20070123.htm#numeric-functions">Functions 
and Operators on Numerics</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;6.1 <A 
href="REC-xpath-functions-20070123.htm#numeric-types">Numeric 
Types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;6.2 <A 
href="REC-xpath-functions-20070123.htm#op.numeric">Operators 
on Numeric Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.1 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-add">op:numeric-add</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.2 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-subtract">op:numeric-subtract</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.3 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-multiply">op:numeric-multiply</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.4 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-divide">op:numeric-divide</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.5 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-integer-divide">op:numeric-integer-divide</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.6 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-mod">op:numeric-mod</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.7 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-plus">op:numeric-unary-plus</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.2.8 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-minus">op:numeric-unary-minus</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;6.3 
<A 
href="REC-xpath-functions-20070123.htm#comp.numeric">Comparison 
Operators on Numeric 
Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.3.1 <A 
href="REC-xpath-functions-20070123.htm#func-numeric-equal">op:numeric-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.3.2 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-less-than">op:numeric-less-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.3.3 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-greater-than">op:numeric-greater-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;6.4 
<A 
href="REC-xpath-functions-20070123.htm#numeric-value-functions">Functions 
on Numeric Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.4.1 
<A 
href="REC-xpath-functions-20070123.htm#func-abs">fn:abs</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.4.2 
<A 
href="REC-xpath-functions-20070123.htm#func-ceiling">fn:ceiling</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.4.3 
<A 
href="REC-xpath-functions-20070123.htm#func-floor">fn:floor</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.4.4 
<A 
href="REC-xpath-functions-20070123.htm#func-round">fn:round</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6.4.5 
<A 
href="REC-xpath-functions-20070123.htm#func-round-half-to-even">fn:round-half-to-even</A><BR>7 
<A 
href="REC-xpath-functions-20070123.htm#string-functions">Functions 
on Strings</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;7.1 <A 
href="REC-xpath-functions-20070123.htm#string-types">String 
Types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;7.2 <A 
href="REC-xpath-functions-20070123.htm#func-assemble-disassemble-string">Functions 
to Assemble and Disassemble 
Strings</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.2.1 <A 
href="REC-xpath-functions-20070123.htm#func-codepoints-to-string">fn:codepoints-to-string</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.2.2 
<A 
href="REC-xpath-functions-20070123.htm#func-string-to-codepoints">fn:string-to-codepoints</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;7.3 
<A 
href="REC-xpath-functions-20070123.htm#string-compare">Equality 
and Comparison of 
Strings</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.3.1 <A 
href="REC-xpath-functions-20070123.htm#collations">Collations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.3.2 
<A 
href="REC-xpath-functions-20070123.htm#func-compare">fn:compare</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.3.3 
<A 
href="REC-xpath-functions-20070123.htm#func-codepoint-equal">fn:codepoint-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;7.4 
<A 
href="REC-xpath-functions-20070123.htm#string-value-functions">Functions 
on String Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.1 <A 
href="REC-xpath-functions-20070123.htm#func-concat">fn:concat</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.2 
<A 
href="REC-xpath-functions-20070123.htm#func-string-join">fn:string-join</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.3 
<A 
href="REC-xpath-functions-20070123.htm#func-substring">fn:substring</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.4 
<A 
href="REC-xpath-functions-20070123.htm#func-string-length">fn:string-length</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.5 
<A 
href="REC-xpath-functions-20070123.htm#func-normalize-space">fn:normalize-space</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.6 
<A 
href="REC-xpath-functions-20070123.htm#func-normalize-unicode">fn:normalize-unicode</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.7 
<A 
href="REC-xpath-functions-20070123.htm#func-upper-case">fn:upper-case</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.8 
<A 
href="REC-xpath-functions-20070123.htm#func-lower-case">fn:lower-case</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.9 
<A 
href="REC-xpath-functions-20070123.htm#func-translate">fn:translate</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.10 
<A 
href="REC-xpath-functions-20070123.htm#func-encode-for-uri">fn:encode-for-uri</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.11 
<A 
href="REC-xpath-functions-20070123.htm#func-iri-to-uri">fn:iri-to-uri</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.4.12 
<A 
href="REC-xpath-functions-20070123.htm#func-escape-html-uri">fn:escape-html-uri</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;7.5 
<A 
href="REC-xpath-functions-20070123.htm#substring.functions">Functions 
Based on Substring 
Matching</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.5.1 <A 
href="REC-xpath-functions-20070123.htm#func-contains">fn:contains</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.5.2 
<A 
href="REC-xpath-functions-20070123.htm#func-starts-with">fn:starts-with</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.5.3 
<A 
href="REC-xpath-functions-20070123.htm#func-ends-with">fn:ends-with</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.5.4 
<A 
href="REC-xpath-functions-20070123.htm#func-substring-before">fn:substring-before</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.5.5 
<A 
href="REC-xpath-functions-20070123.htm#func-substring-after">fn:substring-after</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;7.6 
<A 
href="REC-xpath-functions-20070123.htm#string.match">String 
Functions that Use Pattern 
Matching</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.6.1 <A 
href="REC-xpath-functions-20070123.htm#regex-syntax">Regular 
Expression Syntax</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.6.2 
<A 
href="REC-xpath-functions-20070123.htm#func-matches">fn:matches</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.6.3 
<A 
href="REC-xpath-functions-20070123.htm#func-replace">fn:replace</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7.6.4 
<A 
href="REC-xpath-functions-20070123.htm#func-tokenize">fn:tokenize</A><BR>8 
<A 
href="REC-xpath-functions-20070123.htm#anyURI-functions">Functions 
on anyURI</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;8.1 <A 
href="REC-xpath-functions-20070123.htm#func-resolve-uri">fn:resolve-uri</A><BR>9 
<A 
href="REC-xpath-functions-20070123.htm#boolean-functions">Functions 
and Operators on Boolean Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;9.1 <A 
href="REC-xpath-functions-20070123.htm#boolean-constructors">Additional 
Boolean Constructor 
Functions</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9.1.1 <A 
href="REC-xpath-functions-20070123.htm#func-true">fn:true</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9.1.2 
<A 
href="REC-xpath-functions-20070123.htm#func-false">fn:false</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;9.2 
<A 
href="REC-xpath-functions-20070123.htm#op.boolean">Operators 
on Boolean Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9.2.1 
<A 
href="REC-xpath-functions-20070123.htm#func-boolean-equal">op:boolean-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9.2.2 
<A 
href="REC-xpath-functions-20070123.htm#func-boolean-less-than">op:boolean-less-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9.2.3 
<A 
href="REC-xpath-functions-20070123.htm#func-boolean-greater-than">op:boolean-greater-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;9.3 
<A 
href="REC-xpath-functions-20070123.htm#boolean-value-functions">Functions 
on Boolean Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;9.3.1 
<A 
href="REC-xpath-functions-20070123.htm#func-not">fn:not</A><BR>10 
<A 
href="REC-xpath-functions-20070123.htm#durations-dates-times">Functions 
and Operators on Durations, Dates and Times</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.1 
<A 
href="REC-xpath-functions-20070123.htm#duration-date-time-types">Duration, 
Date and Time 
Types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.1.1 <A 
href="REC-xpath-functions-20070123.htm#date-time-duration-conformance">Limits 
and Precision</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.2 <A 
href="REC-xpath-functions-20070123.htm#date-time-values">Date/time 
datatype values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.2.1 <A 
href="REC-xpath-functions-20070123.htm#date-time-lexical-mapping">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.3 
<A 
href="REC-xpath-functions-20070123.htm#duration-subtypes">Two 
Totally Ordered Subtypes of 
Duration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.3.1 <A 
href="REC-xpath-functions-20070123.htm#dt-yearMonthDuration">xs:yearMonthDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.3.2 
<A 
href="REC-xpath-functions-20070123.htm#dt-dayTimeDuration">xs:dayTimeDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.4 
<A 
href="REC-xpath-functions-20070123.htm#comp.duration.datetime">Comparison 
Operators on Duration, Date and Time 
Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.1 <A 
href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-less-than">op:yearMonthDuration-less-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.2 
<A 
href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-greater-than">op:yearMonthDuration-greater-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.3 
<A 
href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-less-than">op:dayTimeDuration-less-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.4 
<A 
href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-greater-than">op:dayTimeDuration-greater-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.5 
<A 
href="REC-xpath-functions-20070123.htm#func-duration-equal">op:duration-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.6 
<A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal">op:dateTime-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.7 
<A 
href="REC-xpath-functions-20070123.htm#func-dateTime-less-than">op:dateTime-less-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.8 
<A 
href="REC-xpath-functions-20070123.htm#func-dateTime-greater-than">op:dateTime-greater-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.9 
<A 
href="REC-xpath-functions-20070123.htm#func-date-equal">op:date-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.10 
<A 
href="REC-xpath-functions-20070123.htm#func-date-less-than">op:date-less-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.11 
<A 
href="REC-xpath-functions-20070123.htm#func-date-greater-than">op:date-greater-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.12 
<A 
href="REC-xpath-functions-20070123.htm#func-time-equal">op:time-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.13 
<A 
href="REC-xpath-functions-20070123.htm#func-time-less-than">op:time-less-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.14 
<A 
href="REC-xpath-functions-20070123.htm#func-time-greater-than">op:time-greater-than</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.15 
<A 
href="REC-xpath-functions-20070123.htm#func-gYearMonth-equal">op:gYearMonth-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.16 
<A 
href="REC-xpath-functions-20070123.htm#func-gYear-equal">op:gYear-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.17 
<A 
href="REC-xpath-functions-20070123.htm#func-gMonthDay-equal">op:gMonthDay-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.18 
<A 
href="REC-xpath-functions-20070123.htm#func-gMonth-equal">op:gMonth-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.4.19 
<A 
href="REC-xpath-functions-20070123.htm#func-gDay-equal">op:gDay-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.5 
<A 
href="REC-xpath-functions-20070123.htm#component-extraction-functions">Component 
Extraction Functions on Durations, Dates and 
Times</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.1 <A 
href="REC-xpath-functions-20070123.htm#func-years-from-duration">fn:years-from-duration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.2 
<A 
href="REC-xpath-functions-20070123.htm#func-months-from-duration">fn:months-from-duration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.3 
<A 
href="REC-xpath-functions-20070123.htm#func-days-from-duration">fn:days-from-duration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.4 
<A 
href="REC-xpath-functions-20070123.htm#func-hours-from-duration">fn:hours-from-duration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.5 
<A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-duration">fn:minutes-from-duration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.6 
<A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-duration">fn:seconds-from-duration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.7 
<A 
href="REC-xpath-functions-20070123.htm#func-year-from-dateTime">fn:year-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.8 
<A 
href="REC-xpath-functions-20070123.htm#func-month-from-dateTime">fn:month-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.9 
<A 
href="REC-xpath-functions-20070123.htm#func-day-from-dateTime">fn:day-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.10 
<A 
href="REC-xpath-functions-20070123.htm#func-hours-from-dateTime">fn:hours-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.11 
<A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-dateTime">fn:minutes-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.12 
<A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-dateTime">fn:seconds-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.13 
<A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-dateTime">fn:timezone-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.14 
<A 
href="REC-xpath-functions-20070123.htm#func-year-from-date">fn:year-from-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.15 
<A 
href="REC-xpath-functions-20070123.htm#func-month-from-date">fn:month-from-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.16 
<A 
href="REC-xpath-functions-20070123.htm#func-day-from-date">fn:day-from-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.17 
<A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-date">fn:timezone-from-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.18 
<A 
href="REC-xpath-functions-20070123.htm#func-hours-from-time">fn:hours-from-time</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.19 
<A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-time">fn:minutes-from-time</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.20 
<A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-time">fn:seconds-from-time</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.5.21 
<A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-time">fn:timezone-from-time</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.6 
<A 
href="REC-xpath-functions-20070123.htm#duration-arithmetic">Arithmetic 
Operators on 
Durations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.1 <A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDurations">op:add-yearMonthDurations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.2 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDurations">op:subtract-yearMonthDurations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.3 
<A 
href="REC-xpath-functions-20070123.htm#func-multiply-yearMonthDuration">op:multiply-yearMonthDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.4 
<A 
href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration">op:divide-yearMonthDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.5 
<A 
href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration-by-yearMonthDuration">op:divide-yearMonthDuration-by-yearMonthDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.6 
<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDurations">op:add-dayTimeDurations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.7 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDurations">op:subtract-dayTimeDurations</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.8 
<A 
href="REC-xpath-functions-20070123.htm#func-multiply-dayTimeDuration">op:multiply-dayTimeDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.9 
<A 
href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration">op:divide-dayTimeDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.6.10 
<A 
href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration-by-dayTimeDuration">op:divide-dayTimeDuration-by-dayTimeDuration</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.7 
<A 
href="REC-xpath-functions-20070123.htm#timezone.functions">Timezone 
Adjustment Functions on Dates and Time 
Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.7.1 <A 
href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone">fn:adjust-dateTime-to-timezone</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.7.2 
<A 
href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone">fn:adjust-date-to-timezone</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.7.3 
<A 
href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone">fn:adjust-time-to-timezone</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;10.8 
<A 
href="REC-xpath-functions-20070123.htm#dateTime-arithmetic">Arithmetic 
Operators on Durations, Dates and 
Times</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.1 <A 
href="REC-xpath-functions-20070123.htm#func-subtract-dateTimes">op:subtract-dateTimes</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.2 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dates">op:subtract-dates</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.3 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-times">op:subtract-times</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.4 
<A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-dateTime">op:add-yearMonthDuration-to-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.5 
<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-dateTime">op:add-dayTimeDuration-to-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.6 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-dateTime">op:subtract-yearMonthDuration-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.7 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-dateTime">op:subtract-dayTimeDuration-from-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.8 
<A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-date">op:add-yearMonthDuration-to-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.9 
<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-date">op:add-dayTimeDuration-to-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.10 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-date">op:subtract-yearMonthDuration-from-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.11 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-date">op:subtract-dayTimeDuration-from-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.12 
<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-time">op:add-dayTimeDuration-to-time</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.8.13 
<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-time">op:subtract-dayTimeDuration-from-time</A><BR>11 
<A 
href="REC-xpath-functions-20070123.htm#QName-funcs">Functions 
Related to QNames</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;11.1 <A 
href="REC-xpath-functions-20070123.htm#QName-constructors">Additional 
Constructor Functions for 
QNames</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.1.1 <A 
href="REC-xpath-functions-20070123.htm#func-resolve-QName">fn:resolve-QName</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.1.2 
<A 
href="REC-xpath-functions-20070123.htm#func-QName">fn:QName</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;11.2 
<A 
href="REC-xpath-functions-20070123.htm#QName-functions">Functions 
and Operators Related to 
QNames</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.2.1 <A 
href="REC-xpath-functions-20070123.htm#func-QName-equal">op:QName-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.2.2 
<A 
href="REC-xpath-functions-20070123.htm#func-prefix-from-QName">fn:prefix-from-QName</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.2.3 
<A 
href="REC-xpath-functions-20070123.htm#func-local-name-from-QName">fn:local-name-from-QName</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.2.4 
<A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri-from-QName">fn:namespace-uri-from-QName</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.2.5 
<A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri-for-prefix">fn:namespace-uri-for-prefix</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11.2.6 
<A 
href="REC-xpath-functions-20070123.htm#func-in-scope-prefixes">fn:in-scope-prefixes</A><BR>12 
<A 
href="REC-xpath-functions-20070123.htm#binary-functions">Operators 
on base64Binary and hexBinary</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;12.1 <A 
href="REC-xpath-functions-20070123.htm#binary-value-comparisons">Comparisons 
of base64Binary and hexBinary 
Values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12.1.1 <A 
href="REC-xpath-functions-20070123.htm#func-hexBinary-equal">op:hexBinary-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12.1.2 
<A 
href="REC-xpath-functions-20070123.htm#func-base64Binary-equal">op:base64Binary-equal</A><BR>13 
<A 
href="REC-xpath-functions-20070123.htm#NOTATION-functions">Operators 
on NOTATION</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;13.1 <A 
href="REC-xpath-functions-20070123.htm#op.NOTATION">Operators 
on NOTATION</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13.1.1 <A 
href="REC-xpath-functions-20070123.htm#func-NOTATION-equal">op:NOTATION-equal</A><BR>14 
<A 
href="REC-xpath-functions-20070123.htm#node-functions">Functions 
and Operators on Nodes</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.1 <A 
href="REC-xpath-functions-20070123.htm#func-name">fn:name</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.2 
<A 
href="REC-xpath-functions-20070123.htm#func-local-name">fn:local-name</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.3 
<A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri">fn:namespace-uri</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.4 
<A 
href="REC-xpath-functions-20070123.htm#func-number">fn:number</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14.4.1 
<A 
href="REC-xpath-functions-20070123.htm#func-number-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.5 
<A 
href="REC-xpath-functions-20070123.htm#func-lang">fn:lang</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14.5.1 
<A 
href="REC-xpath-functions-20070123.htm#func-lang-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.6 
<A 
href="REC-xpath-functions-20070123.htm#func-is-same-node">op:is-same-node</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14.6.1 
<A 
href="REC-xpath-functions-20070123.htm#func-is-same-node-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.7 
<A 
href="REC-xpath-functions-20070123.htm#func-node-before">op:node-before</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14.7.1 
<A 
href="REC-xpath-functions-20070123.htm#func-node-before-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.8 
<A 
href="REC-xpath-functions-20070123.htm#func-node-after">op:node-after</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14.8.1 
<A 
href="REC-xpath-functions-20070123.htm#func-node-after-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;14.9 
<A 
href="REC-xpath-functions-20070123.htm#func-root">fn:root</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;14.9.1 
<A 
href="REC-xpath-functions-20070123.htm#func-root-examples">Examples</A><BR>15 
<A 
href="REC-xpath-functions-20070123.htm#sequence-functions">Functions 
and Operators on Sequences</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;15.1 <A 
href="REC-xpath-functions-20070123.htm#general-seq-funcs">General 
Functions and Operators on 
Sequences</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.1 <A 
href="REC-xpath-functions-20070123.htm#func-boolean">fn:boolean</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.2 
<A 
href="REC-xpath-functions-20070123.htm#func-concatenate">op:concatenate</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.3 
<A 
href="REC-xpath-functions-20070123.htm#func-index-of">fn:index-of</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.4 
<A 
href="REC-xpath-functions-20070123.htm#func-empty">fn:empty</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.5 
<A 
href="REC-xpath-functions-20070123.htm#func-exists">fn:exists</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.6 
<A 
href="REC-xpath-functions-20070123.htm#func-distinct-values">fn:distinct-values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.7 
<A 
href="REC-xpath-functions-20070123.htm#func-insert-before">fn:insert-before</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.8 
<A 
href="REC-xpath-functions-20070123.htm#func-remove">fn:remove</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.9 
<A 
href="REC-xpath-functions-20070123.htm#func-reverse">fn:reverse</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.10 
<A 
href="REC-xpath-functions-20070123.htm#func-subsequence">fn:subsequence</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.1.11 
<A 
href="REC-xpath-functions-20070123.htm#func-unordered">fn:unordered</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;15.2 
<A 
href="REC-xpath-functions-20070123.htm#cardinality-functions">Functions 
That Test the Cardinality of 
Sequences</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.2.1 <A 
href="REC-xpath-functions-20070123.htm#func-zero-or-one">fn:zero-or-one</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.2.2 
<A 
href="REC-xpath-functions-20070123.htm#func-one-or-more">fn:one-or-more</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.2.3 
<A 
href="REC-xpath-functions-20070123.htm#func-exactly-one">fn:exactly-one</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;15.3 
<A 
href="REC-xpath-functions-20070123.htm#union-intersection-except">Equals, 
Union, Intersection and 
Except</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.3.1 <A 
href="REC-xpath-functions-20070123.htm#func-deep-equal">fn:deep-equal</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.3.2 
<A 
href="REC-xpath-functions-20070123.htm#func-union">op:union</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.3.3 
<A 
href="REC-xpath-functions-20070123.htm#func-intersect">op:intersect</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.3.4 
<A 
href="REC-xpath-functions-20070123.htm#func-except">op:except</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;15.4 
<A 
href="REC-xpath-functions-20070123.htm#aggregate-functions">Aggregate 
Functions</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.4.1 <A 
href="REC-xpath-functions-20070123.htm#func-count">fn:count</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.4.2 
<A 
href="REC-xpath-functions-20070123.htm#func-avg">fn:avg</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.4.3 
<A 
href="REC-xpath-functions-20070123.htm#func-max">fn:max</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.4.4 
<A 
href="REC-xpath-functions-20070123.htm#func-min">fn:min</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.4.5 
<A 
href="REC-xpath-functions-20070123.htm#func-sum">fn:sum</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;15.5 
<A 
href="REC-xpath-functions-20070123.htm#fns-that-generate-sequences">Functions 
and Operators that Generate 
Sequences</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.5.1 <A 
href="REC-xpath-functions-20070123.htm#func-to">op:to</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.5.2 
<A 
href="REC-xpath-functions-20070123.htm#func-id">fn:id</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.5.3 
<A 
href="REC-xpath-functions-20070123.htm#func-idref">fn:idref</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.5.4 
<A 
href="REC-xpath-functions-20070123.htm#func-doc">fn:doc</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.5.5 
<A 
href="REC-xpath-functions-20070123.htm#func-doc-available">fn:doc-available</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;15.5.6 
<A 
href="REC-xpath-functions-20070123.htm#func-collection">fn:collection</A><BR>16 
<A 
href="REC-xpath-functions-20070123.htm#context">Context 
Functions</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.1 <A 
href="REC-xpath-functions-20070123.htm#func-position">fn:position</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.2 
<A 
href="REC-xpath-functions-20070123.htm#func-last">fn:last</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.3 
<A 
href="REC-xpath-functions-20070123.htm#func-current-dateTime">fn:current-dateTime</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16.3.1 
<A 
href="REC-xpath-functions-20070123.htm#func-current-dateTime-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.4 
<A 
href="REC-xpath-functions-20070123.htm#func-current-date">fn:current-date</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16.4.1 
<A 
href="REC-xpath-functions-20070123.htm#func-current-date-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.5 
<A 
href="REC-xpath-functions-20070123.htm#func-current-time">fn:current-time</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16.5.1 
<A 
href="REC-xpath-functions-20070123.htm#func-current-time-examples">Examples</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.6 
<A 
href="REC-xpath-functions-20070123.htm#func-implicit-timezone">fn:implicit-timezone</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.7 
<A 
href="REC-xpath-functions-20070123.htm#func-default-collation">fn:default-collation</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;16.8 
<A 
href="REC-xpath-functions-20070123.htm#func-static-base-uri">fn:static-base-uri</A><BR>17 
<A 
href="REC-xpath-functions-20070123.htm#casting">Casting</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;17.1 
<A 
href="REC-xpath-functions-20070123.htm#casting-from-primitive-to-primitive">Casting 
from primitive types to primitive 
types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.1 <A 
href="REC-xpath-functions-20070123.htm#casting-from-strings">Casting 
from xs:string and 
xs:untypedAtomic</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.2 
<A 
href="REC-xpath-functions-20070123.htm#casting-to-string">Casting 
to xs:string and 
xs:untypedAtomic</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.3 
<A 
href="REC-xpath-functions-20070123.htm#casting-to-numerics">Casting 
to numeric types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.4 
<A 
href="REC-xpath-functions-20070123.htm#casting-to-durations">Casting 
to duration types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.5 
<A 
href="REC-xpath-functions-20070123.htm#casting-to-datetimes">Casting 
to date and time 
types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.6 <A 
href="REC-xpath-functions-20070123.htm#casting-boolean">Casting 
to xs:boolean</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.7 <A 
href="REC-xpath-functions-20070123.htm#casting-to-binary">Casting 
to xs:base64Binary and 
xs:hexBinary</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.1.8 <A 
href="REC-xpath-functions-20070123.htm#casting-to-anyuri">Casting 
to xs:anyURI</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;17.2 <A 
href="REC-xpath-functions-20070123.htm#casting-to-derived-types">Casting 
to derived types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;17.3 <A 
href="REC-xpath-functions-20070123.htm#casting-from-derived-to-parent">Casting 
from derived types to parent types</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;17.4 <A 
href="REC-xpath-functions-20070123.htm#casting-within-branch">Casting 
within a branch of the type 
hierarchy</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17.4.1 <A 
href="REC-xpath-functions-20070123.htm#casting-to-ENTITY">Casting 
to xs:ENTITY</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;17.5 <A 
href="REC-xpath-functions-20070123.htm#casting-across-hierarchy">Casting 
across the type hierarchy</A><BR></P>
<H3><A id=appendices name=appendices></A>Appendices</H3>
<P class=toc>A <A 
href="REC-xpath-functions-20070123.htm#biblio">References</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;A.1 
<A 
href="REC-xpath-functions-20070123.htm#normative-biblio">Normative 
References</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;A.2 <A 
href="REC-xpath-functions-20070123.htm#non-normative-biblio">Non-normative 
References</A><BR>B <A 
href="REC-xpath-functions-20070123.htm#changelog">Change 
Log for this Version of the Document</A><BR>C <A 
href="REC-xpath-functions-20070123.htm#error-summary">Error 
Summary</A><BR>D <A 
href="REC-xpath-functions-20070123.htm#xpath1-compatibility">Compatibility 
with XPath 1.0</A> (Non-Normative)<BR>E <A 
href="REC-xpath-functions-20070123.htm#examples">Illustrative 
User-written Functions</A> (Non-Normative)<BR>&nbsp;&nbsp;&nbsp;&nbsp;E.1 <A 
href="REC-xpath-functions-20070123.htm#if-empty-if-absent">eg:if-empty 
and eg:if-absent</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E.1.1 <A 
href="REC-xpath-functions-20070123.htm#if-empty">eg:if-empty</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E.1.2 
<A 
href="REC-xpath-functions-20070123.htm#if-absent">eg:if-absent</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;E.2 
<A 
href="REC-xpath-functions-20070123.htm#union-intersect-except-on-values">union, 
intersect and except on sequences of 
values</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E.2.1 <A 
href="REC-xpath-functions-20070123.htm#value-union">eg:value-union</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E.2.2 
<A 
href="REC-xpath-functions-20070123.htm#value-intersect">eg:value-intersect</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;E.2.3 
<A 
href="REC-xpath-functions-20070123.htm#value-except">eg:value-except</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;E.3 
<A 
href="REC-xpath-functions-20070123.htm#index-of-node">eg:index-of-node</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;E.4 
<A 
href="REC-xpath-functions-20070123.htm#string-pad">eg:string-pad</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;E.5 
<A 
href="REC-xpath-functions-20070123.htm#func-distinct-nodes-stable">eg:distinct-nodes-stable</A><BR>F 
<A 
href="REC-xpath-functions-20070123.htm#impl-def">Checklist 
of Implementation-Defined Features</A> (Non-Normative)<BR>G <A 
href="REC-xpath-functions-20070123.htm#quickref">Function 
and Operator Quick Reference</A> (Non-Normative)<BR>&nbsp;&nbsp;&nbsp;&nbsp;G.1 
<A 
href="REC-xpath-functions-20070123.htm#quickref-section">Functions 
and Operators by Section</A><BR>&nbsp;&nbsp;&nbsp;&nbsp;G.2 <A 
href="REC-xpath-functions-20070123.htm#quickref-alpha">Functions 
and Operators Alphabetically</A><BR></P></DIV>
<HR>

<DIV class=body>
<DIV class=div1>
<H2><A id=intro name=intro></A>1 Introduction</H2>
<P>The purpose of this document is to catalog the functions and operators 
required for XPath 2.0, XML Query 1.0 and XSLT 2.0. The exact syntax used to 
invoke these functions and operators is specified in <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>, <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A>.</P>
<P>This document defines constructor functions and functions that take typed 
values as arguments. Some of the functions define the semantics of operators 
discussed in <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A>.</P>
<P><A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> defines a number of primitive and 
derived datatypes, collectively known as built-in datatypes. This document 
defines functions and operations on these datatypes as well as the datatypes 
defined in <A href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP> of the <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A>. These functions and operations are defined 
for use in <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>, <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A> and related XML standards. This document 
also discusses functions and operators on nodes and node sequences as defined in 
the <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A> for use in <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>, <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A> and other related XML standards.</P>
<P>References to specific sections of some of the above documents are indicated 
by cross-document links in this document. Each such link consists of a pointer 
to a specific section followed a superscript specifying the linked document. The 
superscripts have the following meanings: 'XQ' <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A>, 'XT' <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A>, 'XP' <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>, 'DM' <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A> and 'FS' <A 
href="REC-xpath-functions-20070123.htm#xquery-semantics">[XQuery 
1.0 and XPath 2.0 Formal Semantics]</A>.</P>
<DIV class=div2>
<H3><A id=conformance name=conformance></A>1.1 Conformance</H3>
<P>The Functions and Operators specification is intended primarily as a 
component that can be used by other specifications. Therefore, Functions and 
Operators relies on specifications that use it (such as <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>, <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A> and <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A>) to specify conformance criteria for their 
respective environments.</P>
<P>Authors of conformance criteria for the use of the Functions and Operators 
should pay particular attention to the following features:</P>
<UL>
  <LI>
  <P>It is <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> which 
  version of Unicode is supported, but it is recommended that the most recent 
  version of Unicode be used.</P>
  <LI>
  <P>Support for XML 1.0 and XML 1.1 by the datatypes used in Functions and 
  Operators.</P></LI></UL>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>At the time of writing there is no published version of XML Schema that 
references the XML 1.1 specifications. This means that datatypes such as 
<CODE>xs:NCName</CODE> and <CODE>xs:ID</CODE> are constrained by the XML 1.0 
rules. Authors of conformance requirements for the use of Functions and 
Operators should state clearly the implications for conformance of any changes 
to the rules in later versions of XML Schema.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=namespace-prefixes name=namespace-prefixes></A>1.2 Namespaces and 
Prefixes</H3>
<P>The functions and operators discussed in this document are contained in one 
of three namespaces (see <A 
href="REC-xpath-functions-20070123.htm#REC-xml-names">[Namespaces 
in XML]</A>) and referenced using an <CODE>xs:QName</CODE>. The datatypes and 
constructor functions for the built-in datatypes defined in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> and in <A 
href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP> of <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A> and discussed in <A 
href="REC-xpath-functions-20070123.htm#constructor-functions"><B>5 
Constructor Functions</B></A> are in the XML Schema namespace, 
<CODE>http://www.w3.org/2001/XMLSchema</CODE>, and named in this document using 
the <CODE>xs</CODE> prefix. The namespace prefix used in this document for 
functions that are available to users is <CODE>fn</CODE>. Operator functions are 
named with the prefix <CODE>op</CODE>.</P>
<P>This document uses the prefix <CODE>err</CODE> to represent the namespace URI 
<CODE>http://www.w3.org/2005/xqt-errors</CODE>, which is the namespace for all 
XPath and XQuery error codes and messages. This namespace prefix is not 
predeclared and its use in this document is not normative.</P>
<P>The namespace prefix used for the functions, datatypes and errors can vary, 
as long as the prefix is bound to the correct URI.</P>
<P>The URIs of the namespaces and the default prefixes associated with them 
are:</P>
<UL>
  <LI>
  <P><CODE>http://www.w3.org/2001/XMLSchema</CODE> for constructors -- 
  associated with <CODE>xs</CODE>.</P>
  <LI>
  <P><CODE>http://www.w3.org/2005/xpath-functions</CODE> for functions -- 
  associated with <CODE>fn</CODE>.</P>
  <LI>
  <P><CODE>http://www.w3.org/2005/xqt-errors</CODE> -- associated with 
  <CODE>err</CODE>.</P></LI></UL>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The namespace URI associated with the <CODE>err</CODE> prefix is not expected 
to change from one version of this document to another. The contents of this 
namespace may be extended to allow additional errors to be returned.</P></DIV>
<P>The functions defined with an <CODE>fn</CODE> prefix are callable by the 
user. Functions defined with the <CODE>op</CODE> prefix are described here to 
underpin the definitions of the operators in <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>, <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A>. These functions are not available 
directly to users, and there is no requirement that implementations should 
actually provide these functions. For this reason, no namespace is associated 
with the <CODE>op</CODE> prefix. For example, multiplication is generally 
associated with the <CODE>*</CODE> operator, but it is described as a function 
in this document:</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-multiply</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>numeric</CODE></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=func-overloading name=func-overloading></A>1.3 Function 
Overloading</H3>
<P>In general, the specifications named above do not support function 
overloading in the sense that functions that have multiple signatures with the 
same name and the same number of parameters are not supported. Consequently, 
there are no such overloaded functions in this document except for legacy <A 
href="REC-xpath-functions-20070123.htm#xpath">[XML Path 
Language (XPath) Version 1.0]</A> functions such as <A 
href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string()</CODE></A>, 
which accepts a single parameter of a variety of types. In addition, it should 
be noted that the functions defined in <A 
href="REC-xpath-functions-20070123.htm#numeric-functions"><B>6 
Functions and Operators on Numerics</B></A> that accept <CODE>numeric</CODE> 
parameters accept arguments of type <CODE>xs:integer</CODE>, 
<CODE>xs:decimal</CODE>, <CODE>xs:float</CODE> or <CODE>xs:double</CODE>. See <A 
href="REC-xpath-functions-20070123.htm#func-signatures"><B>1.4 
Function Signatures and Descriptions</B></A>. Operators such as "+" may be 
overloaded. This document does define some functions with more than one 
signature with the same name and different number of parameters. User-defined 
functions with more than one signature with the same name and different number 
of parameters are also supported.</P></DIV>
<DIV class=div2>
<H3><A id=func-signatures name=func-signatures></A>1.4 Function Signatures and 
Descriptions</H3>
<P>Each function is defined by specifying its signature, a description of the 
return type and each of the parameters and its semantics. For many functions, 
examples are included to illustrate their use.</P>
<P>Each function's signature is presented in a form like this:</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:function-name</CODE>(<CODE 
class=arg>$parameter-name</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>parameter-type</CODE>, <SPAN class=varargs>...</SPAN>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>return-type</CODE></DIV></DIV>
<P>In this notation, <B>function-name</B>, in bold-face, is the name of the 
function whose signature is being specified. If the function takes no 
parameters, then the name is followed by an empty parameter list: 
"<CODE>()</CODE>"; otherwise, the name is followed by a parenthesized list of 
parameter declarations, each declaration specifies the static type of the 
parameter, in italics, and a descriptive, but non-normative, name. If there are 
two or more parameter declarations, they are separated by a comma. The 
<EM><CODE>return-type</CODE></EM> , also in italics, specifies the static type 
of the value returned by the function. The dynamic type returned by the function 
is the same as its static type or derived from the static type. All parameter 
types and return types are specified using the SequenceType notation defined in 
<A href="http://www.w3.org/TR/xpath20/#id-sequencetype-syntax">Section 2.5.3 
SequenceType Syntax</A><SUP><SMALL>XP</SMALL></SUP>.</P>
<P>In some cases the word " <CODE>numeric</CODE> " is used in function 
signatures as a shorthand to indicate the four numeric types: 
<CODE>xs:integer</CODE>, <CODE>xs:decimal</CODE>, <CODE>xs:float</CODE> and 
<CODE>xs:double</CODE>. For example, a function with the signature</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:numeric-function</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>...</CODE></DIV></DIV>represents the following four function 
signatures: 
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:numeric-function</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:integer</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>...</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:numeric-function</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:decimal</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>...</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:numeric-function</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:float</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>...</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:numeric-function</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>...</CODE></DIV></DIV>
<P>For most functions there is an initial paragraph describing what the function 
does followed by semantic rules. These rules are meant to be followed in the 
order that they appear in this document.</P>
<P>In some cases, the static type returned by a function depends on the type(s) 
of its argument(s). These special functions are indicated by using <EM><B>bold 
italics</B></EM> for the return type. The semantic rules specifying the type of 
the value returned are documented in the function definition. The rules are 
described more formally in <A 
href="http://www.w3.org/TR/xquery-semantics/#function_rules">Section 7.2 
Standard functions with specific static typing 
rules</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<P>The function name is a <CODE>QName</CODE> as defined in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> and must adhere to its syntactic 
conventions. Following <A 
href="REC-xpath-functions-20070123.htm#xpath">[XML Path 
Language (XPath) Version 1.0]</A>, function names are composed of English words 
separated by hyphens,"-". If a function name contains a <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> datatype name, it may have 
intercapitalized spelling and is used in the function name as such. For example, 
<A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-dateTime"><CODE>fn:timezone-from-dateTime</CODE></A>.</P>
<P>Rules for passing parameters to operators are described in the relevant 
sections of <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>. For example, the rules for passing parameters to 
arithmetic operators are described in <A 
href="http://www.w3.org/TR/xpath20/#id-arithmetic">Section 3.4 Arithmetic 
Expressions</A><SUP><SMALL>XP</SMALL></SUP>. Specifically, rules for parameters 
of type <CODE>xs:untypedAtomic</CODE> and the empty sequence are specified in 
this section.</P>
<P>As is customary, the parameter type name indicates that the function or 
operator accepts arguments of that type, or types derived from it, in that 
position. This is called <EM>subtype substitution</EM> (See <A 
href="http://www.w3.org/TR/xpath20/#id-sequencetype-matching">Section 2.5.4 
SequenceType Matching</A><SUP><SMALL>XP</SMALL></SUP>). In addition, numeric 
type instances and instances of type <CODE>xs:anyURI</CODE> can be promoted to 
produce an argument of the required type. (See <A 
href="http://www.w3.org/TR/xpath20/#promotion">Section B.1 Type 
Promotion</A><SUP><SMALL>XP</SMALL></SUP>).</P>
<OL class=enumar>
  <LI>
  <P><EM>Subtype Substitution</EM>: A derived type may substitute for its base 
  type. In particular, <CODE>xs:integer</CODE> may be used where 
  <CODE>xs:decimal</CODE> is expected.</P>
  <LI>
  <P><EM>Numeric Type Promotion</EM>: <CODE>xs:decimal</CODE> may be promoted to 
  <CODE>xs:float</CODE> or <CODE>xs:double</CODE>. Promotion to 
  <CODE>xs:double</CODE> should be done directly, not via <CODE>xs:float</CODE>, 
  to avoid loss of precision.</P>
  <LI>
  <P><EM>anyURI Type Promotion</EM>: A value of type <CODE>xs:anyURI</CODE> can 
  be promoted to the type <CODE>xs:string</CODE>.</P></LI></OL>
<P>Some functions accept a single value or the empty sequence as an argument and 
some may return a single value or the empty sequence. This is indicated in the 
function signature by following the parameter or return type name with a 
question mark: "<CODE>?</CODE>", indicating that either a single value or the 
empty sequence must appear. See below.</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:function-name</CODE>(<CODE 
class=arg>$parameter-name</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>parameter-type?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>return-type?</CODE></DIV></DIV>
<P>Note that this function signature is different from a signature in which the 
parameter is omitted. See, for example, the two signatures for <A 
href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string()</CODE></A>. 
In the first signature, the parameter is omitted and the argument defaults to 
the context item, referred to as ".". In the second signature, the argument must 
be present but may be the empty sequence, referred to as "()."</P>
<P>Some functions accept a sequence of zero or more values as an argument. This 
is indicated by following the name of type of the items in the sequence with 
<CODE>*</CODE>. The sequence may contain zero or more items of the named type. 
For example, the function below accepts a sequence of <CODE>xs:double</CODE> and 
returns a <CODE>xs:double</CODE> or the empty sequence.</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:median</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:double*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:double?</CODE></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=namespace-terminology name=namespace-terminology></A>1.5 Namespace 
Terminology</H3>
<P>This document uses the phrase "namespace URI" to identify the concept 
identified in <A 
href="REC-xpath-functions-20070123.htm#REC-xml-names">[Namespaces 
in XML]</A> as "namespace name", and the phrase "local name" to identify the 
concept identified in <A 
href="REC-xpath-functions-20070123.htm#REC-xml-names">[Namespaces 
in XML]</A> as "local part".</P>
<P>It also uses the term "expanded-QName" defined below.</P>
<DL>
  <DT class=label><SPAN class=termdef><A id=expanded-Qname 
  name=expanded-Qname></A>[Definition] <B>Expanded-QName</B></SPAN> 
  <DD>
  <P>An expanded-QName is a pair of values consisting of a namespace URI and a 
  local name. They belong to the value space of the <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> datatype <CODE>xs:QName</CODE>. 
  When this document refers to <CODE>xs:QName</CODE> we always mean the value 
  space, i.e. a namespace URI, local name pair (and not the lexical space 
  referring to constructs of the form prefix:local-name).</P></DD></DL></DIV>
<DIV class=div2>
<H3><A id=datatypes name=datatypes></A>1.6 Type Hierarchy</H3>
<P>The diagram below shows the types for which functions are defined in this 
document. These include the built-in types defined by <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> (shown on the right) as well as 
types defined in <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A> (shown on the left). Solid lines connect a 
base datatype above to a derived datatype.<CODE>xs:IDREFS</CODE>, 
<CODE>xs:NMTOKENS</CODE>, <CODE>xs:ENTITIES</CODE> and <CODE>user-defined list 
and union types</CODE> are special types in that these types are lists or unions 
rather than true subtypes. Dashed lines connect a union type above with its 
component types below.</P><IMG alt="Type hierarchy graphic" 
src="REC-xpath-functions-20070123_files/XPathTypeHierarchy.gif"> 
<P>The information in the above diagram is reproduced below in tabular form. For 
ease of presentation the information is divided into three tables. The first 
table shows the top three layers of the hierarchy starting at 
<CODE>xs:anyType</CODE>. The second table shows the types derived from 
<CODE>xs:anyAtomicType</CODE>. The third table shows the types defined in <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A></P>
<P>Each type whose name is indented is derived from the type whose name appears 
nearest above it with one less level of indentation.</P>
<TABLE class=hierarchy summary="Type summary" border=0>
  <TBODY>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:anyType</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>user-defined complex 
  types</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:untyped</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:anySimpleType</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>user-defined list and union 
      types</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:IDREFS</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:NMTOKENS</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:ENTITIES</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center 
align=left>xs:anyAtomicType</TD></TR></TBODY></TABLE>
<P>The table below shows the datatypes derived from 
<CODE>xs:anyAtomicType</CODE>. This includes all the <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> built-in datatypes as well as the 
two totally ordered subtypes of duration defined in <A 
href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP>.</P>
<P>Each type whose name is indented is derived from the type whose name appears 
nearest above it with one less level of indentation.</P>
<TABLE class=hierarchy summary="Type summary" border=0>
  <TBODY>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:untypedAtomic</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:dateTime</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:date</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:time</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:duration</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:yearMonthDuration</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:dayTimeDuration</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:float</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:double</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:decimal</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:integer</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:nonPositiveInteger</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:negativeInteger</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:long</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:int</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:short</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:byte</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:nonNegativeInteger</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:unsignedLong</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:unsignedInt</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:unsignedShort</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:unsignedByte</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:positiveInteger</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:gYearMonth</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:gYear</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:gMonthDay</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:gDay</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:gMonth</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:string</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:normalizedString</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:token</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:language</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:NMTOKEN</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:Name</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:NCName</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:ID</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:IDREF</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:ENTITY</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:boolean</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:base64Binary</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:hexBinary</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:anyURI</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:QName</TD></TR>
  <TR>
    <TD class=castOther vAlign=center 
align=left>xs:NOTATION</TD></TR></TBODY></TABLE>
<P>The table below shows the type hierarchy for the types introduced in <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A>. For these types, each type whose name is 
indented is a component of the union type whose name appears nearest above with 
one less level of indentation.</P>
<TABLE class=hierarchy summary="Type summary" border=0>
  <TBODY>
  <TR>
    <TD class=castOther vAlign=center align=left>item</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:anyAtomicType</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>node</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>attribute</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>user-defined attribute 
    types</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>comment</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>document</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>user-defined document 
  types</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>element</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>user-defined element 
  types</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>processing-instruction</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center 
align=left>text</TD></TR></TBODY></TABLE></DIV>
<DIV class=div2>
<H3><A id=terminology name=terminology></A>1.7 Terminology</H3>
<P>The terminology used to describe the functions and operators on <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> is defined in the body of this 
specification. The terms defined in the following list are used in building 
those definitions:</P>
<DL>
  <DT class=label><SPAN class=termdef><A id=compatibility 
  name=compatibility></A>[Definition] <B>for compatibility</B></SPAN> 
  <DD>
  <P>A feature of this specification included to ensure that implementations 
  that use this feature remain compatible with <A 
  href="REC-xpath-functions-20070123.htm#xpath">[XML Path 
  Language (XPath) Version 1.0]</A></P>
  <DT class=label><SPAN class=termdef><A id=may name=may></A>[Definition] 
  <B>may</B></SPAN> 
  <DD>
  <P>Conforming documents and processors are permitted to, but need not, behave 
  as described.</P>
  <DT class=label><SPAN class=termdef><A id=must name=must></A>[Definition] 
  <B>must</B></SPAN> 
  <DD>
  <P>Conforming documents and processors are required to behave as described; 
  otherwise, they are either non-conformant or else in error.</P>
  <DT class=label><SPAN class=termdef><A id=implementation-defined 
  name=implementation-defined></A>[Definition] 
  <B>implementation-defined</B></SPAN> 
  <DD>
  <P>Possibly differing between implementations, but specified and documented by 
  the implementor for each particular implementation.</P>
  <DT class=label><SPAN class=termdef><A id=implementation-dependent 
  name=implementation-dependent></A>[Definition] 
  <B>implementation-dependent</B></SPAN> 
  <DD>
  <P>Possibly differing between implementations, but not specified by this or 
  other W3C specification, and not required to be specified by the implementor 
  for any particular implementation.</P>
  <DT class=label><SPAN class=termdef><A id=execution-scope 
  name=execution-scope></A>[Definition] <B>execution scope</B></SPAN> 
  <DD>
  <P>The scope over which any two calls on a function would be executed. In 
  XSLT, it applies to any two calls on the function executed during the same 
  transformation. In XQuery, it applies to any two calls executed during the 
  evaluation of a top-level expression i.e. an expression not contained in any 
  other expression. In other contexts, the scope is specified by the host 
  environment that invokes the function library.</P>
  <DT class=label><SPAN class=termdef><A id=stable name=stable></A>[Definition] 
  <B>stable</B></SPAN> 
  <DD>
  <P>Most of the functions in the core library have the property that calling 
  the same function twice within an <A class=termref title="execution scope" 
  href="REC-xpath-functions-20070123.htm#execution-scope"><SPAN 
  class=arrow>·</SPAN>execution scope<SPAN class=arrow>·</SPAN></A> with the 
  same arguments returns the same result: these functions are said to be 
  <B>stable</B>. This category includes a number of functions such as <A 
  href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc()</CODE></A>, 
  <A 
  href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection()</CODE></A>, 
  <A 
  href="REC-xpath-functions-20070123.htm#func-current-dateTime"><CODE>fn:current-dateTime()</CODE></A>, 
  <A 
  href="REC-xpath-functions-20070123.htm#func-current-date"><CODE>fn:current-date</CODE></A> 
  and <A 
  href="REC-xpath-functions-20070123.htm#func-current-time"><CODE>fn:current-time()</CODE></A> 
  whose result depends on the external environment. Where the function returns 
  nodes, stability means that the returned nodes are identical, not merely equal 
  and are returned in the same order.</P>
  <DIV class=note>
  <P class=prefix><B>Note:</B></P>
  <P>in the case of <A 
  href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection()</CODE></A> 
  and <A 
  href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc()</CODE></A>, 
  the requirement for stability may be relaxed: see the function definitions for 
  details.</P></DIV>
  <P>Some other functions, for example <A 
  href="REC-xpath-functions-20070123.htm#func-position"><CODE>fn:position()</CODE></A> 
  and <A 
  href="REC-xpath-functions-20070123.htm#func-last"><CODE>fn:last()</CODE></A>, 
  depend on the dynamic context and may, therefore, produce different results 
  each time they are called. These functions are said to be 
  <B>contextual</B>.</P>
  <DT class=label><SPAN class=termdef><A id=uri name=uri></A>[Definition] <B>URI 
  and URI reference</B></SPAN> 
  <DD>
  <P>Within this specification, the term "URI" refers to Universal Resource 
  Identifiers as defined in <A 
  href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
  3986]</A> and extended in <A 
  href="REC-xpath-functions-20070123.htm#rfc3987">[RFC 
  3987]</A> with a new name "IRI". The term "URI Reference", unless otherwise 
  stated, refers to a string in the lexical space of the <CODE>xs:anyURI</CODE> 
  datatype as defined in <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A>. Note that this means, in 
  practice, that where this specification requires a "URI Reference", an IRI as 
  defined in <A 
  href="REC-xpath-functions-20070123.htm#rfc3987">[RFC 
  3987]</A> will be accepted, provided that other relevant specifications also 
  permit an IRI. The term URI has been retained in preference to IRI to avoid 
  introducing new names for concepts such as "Base URI" that are defined or 
  referenced across the whole family of XML specifications. Note also that the 
  definition of <CODE>xs:anyURI</CODE> is a wider definition than the definition 
  in <A 
  href="REC-xpath-functions-20070123.htm#rfc3987">[RFC 
  3987]</A>; for example it does not require non-ASCII characters to be 
  escaped.</P></DD></DL></DIV></DIV>
<DIV class=div1>
<H2><A id=accessors name=accessors></A>2 Accessors</H2>
<P>Accessors and their semantics are described in <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A>. Some of these accessors are exposed to the 
user through the functions described below.</P>
<TABLE width="80%" summary="Function summary" border=1>
  <COLGROUP>
  <COL width="25%">
  <COL width="25%">
  <COL width="25%">
  <COL width="25%">
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Accessor</TH>
    <TH>Accepts</TH>
    <TH>Returns</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-node-name"><CODE>fn:node-name</CODE></A></TD>
    <TD><CODE>node-name</CODE></TD>
    <TD>an optional node</TD>
    <TD>zero or one <CODE>xs:QName</CODE></TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-nilled"><CODE>fn:nilled</CODE></A></TD>
    <TD><CODE>nilled</CODE></TD>
    <TD>a node</TD>
    <TD>an optional <CODE>xs:boolean</CODE></TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string</CODE></A></TD>
    <TD><CODE>string-value</CODE></TD>
    <TD>an optional item or no argument</TD>
    <TD><CODE>xs:string</CODE></TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-data"><CODE>fn:data</CODE></A></TD>
    <TD><CODE>typed-value</CODE></TD>
    <TD>zero or more items</TD>
    <TD>a sequence of atomic values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-base-uri"><CODE>fn:base-uri</CODE></A></TD>
    <TD><CODE>base-uri</CODE></TD>
    <TD>an optional node or no argument</TD>
    <TD>zero or one <CODE>xs:anyURI</CODE></TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-document-uri"><CODE>fn:document-uri</CODE></A></TD>
    <TD><CODE>document-uri</CODE></TD>
    <TD>an optional node</TD>
    <TD>zero or one <CODE>xs:anyURI</CODE></TD></TR></TBODY></TABLE>
<DIV class=div2>
<H3><A id=func-node-name name=func-node-name></A>2.1 fn:node-name</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:node-name</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:QName?</CODE></DIV></DIV>
<P>Summary: Returns an expanded-QName for node kinds that can have names. For 
other kinds of nodes it returns the empty sequence. If <CODE>$arg</CODE> is the 
empty sequence, the empty sequence is returned.</P></DIV>
<DIV class=div2>
<H3><A id=func-nilled name=func-nilled></A>2.2 fn:nilled</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:nilled</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:boolean</CODE> indicating whether the argument 
node is "nilled". If the argument is not an element node, returns the empty 
sequence. If the argument is the empty sequence, returns the empty 
sequence.</P></DIV>
<DIV class=div2>
<H3><A id=func-string name=func-string></A>2.3 fn:string</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:string</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:string</CODE></DIV>
<DIV class=proto><CODE class=function>fn:string</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns the value of <CODE>$arg</CODE> represented as a 
<CODE>xs:string</CODE>. If no argument is supplied, the context item 
(<CODE>.</CODE>) is used as the default argument. The behavior of the function 
if the argument is omitted is exactly the same as if the context item had been 
passed as the argument.</P>
<P>If the context item is undefined, error [<A title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP> 
is raised.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, the zero-length string is 
returned.</P>
<P>If <CODE>$arg</CODE> is a node, the function returns the string-value of the 
node, as obtained using the <CODE>dm:string-value</CODE> accessor defined in the 
<A href="http://www.w3.org/TR/xpath-datamodel/#dm-string-value">Section 5.13 
string-value Accessor</A><SUP><SMALL>DM</SMALL></SUP>.</P>
<P>If <CODE>$arg</CODE> is an atomic value, then the function returns the same 
string as is returned by the expression " <CODE>$arg</CODE> cast as 
<CODE>xs:string</CODE> " (see <A 
href="REC-xpath-functions-20070123.htm#casting"><B>17 
Casting</B></A>).</P></DIV>
<DIV class=div2>
<H3><A id=func-data name=func-data></A>2.4 fn:data</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:data</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType*</CODE></DIV></DIV>
<P>Summary: <CODE>fn:data</CODE> takes a sequence of items and returns a 
sequence of atomic values.</P>
<P>The result of <CODE>fn:data</CODE> is the sequence of atomic values produced 
by applying the following rules to each item in <CODE>$arg</CODE>:</P>
<UL>
  <LI>
  <P>If the item is an atomic value, it is returned.</P>
  <LI>
  <P>If the item is a node:</P>
  <UL>
    <LI>
    <P>If the node does not have a typed value an error is raised [<A 
    title=err:FOTY0012 
    href="REC-xpath-functions-20070123.htm#ERRFOTY0012">err:FOTY0012</A>].</P>
    <LI>
    <P>Otherwise, <CODE>fn:data()</CODE> returns the typed value of the node as 
    defined by the accessor function <CODE>dm:typed-value</CODE> in <A 
    href="http://www.w3.org/TR/xpath-datamodel/#dm-typed-value">Section 5.15 
    typed-value 
Accessor</A><SUP><SMALL>DM</SMALL></SUP>.</P></LI></UL></LI></UL></DIV>
<DIV class=div2>
<H3><A id=func-base-uri name=func-base-uri></A>2.5 fn:base-uri</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:base-uri</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI?</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:base-uri</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI?</CODE></DIV></DIV>
<P>Summary: Returns the value of the base-uri URI property for <CODE>$arg</CODE> 
as defined by the accessor function <CODE>dm:base-uri()</CODE> for that kind of 
node in <A href="http://www.w3.org/TR/xpath-datamodel/#dm-base-uri">Section 5.2 
base-uri Accessor</A><SUP><SMALL>DM</SMALL></SUP>. If <CODE>$arg</CODE> is not 
specified, the behavior is identical to calling the function with the context 
item (<CODE>.</CODE>) as argument. The following errors may be raised: if the 
context item is undefined [<A title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
if the context item is not a node [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, the empty sequence is 
returned.</P>
<P>Document, element and processing-instruction nodes have a base-uri property 
which may be empty. The base-uri property of all other node types is the empty 
sequence. The value of the base-uri property is returned if it exists and is not 
empty. Otherwise, if the node has a parent, the value of 
<CODE>dm:base-uri()</CODE> applied to its parent is returned, recursively. If 
the node does not have a parent, or if the recursive ascent up the ancestor 
chain encounters a node whose base-uri property is empty and it does not have a 
parent, the empty sequence is returned.</P>
<P>See also <A 
href="REC-xpath-functions-20070123.htm#func-static-base-uri"><CODE>fn:static-base-uri</CODE></A>.</P></DIV>
<DIV class=div2>
<H3><A id=func-document-uri name=func-document-uri></A>2.6 fn:document-uri</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:document-uri</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI?</CODE></DIV></DIV>
<P>Summary: Returns the value of the document-uri property for <CODE>$arg</CODE> 
as defined by the <CODE>dm:document-uri</CODE> accessor function defined in <A 
href="http://www.w3.org/TR/xpath-datamodel/#DocumentNodeAccessors">Section 6.1.2 
Accessors</A><SUP><SMALL>DM</SMALL></SUP>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, the empty sequence is 
returned.</P>
<P>Returns the empty sequence if the node is not a document node. Otherwise, 
returns the value of the <CODE>dm:document-uri</CODE> accessor of the document 
node.</P>
<P>In the case of a document node <CODE>$D</CODE> returned by the <A 
href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc</CODE></A> 
function, or a document node at the root of a tree containing a node returned by 
the <A 
href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection</CODE></A> 
function, it will always be true that either <CODE>fn:document-uri($D)</CODE> 
returns the empty sequence, or that the following expression is true: <A 
href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc(fn:document-uri($D))</CODE></A> 
is <CODE>$D</CODE>. It is implementation-defined whether this guarantee also 
holds for document nodes obtained by other means, for example a document node 
passed as the initial context node of a query or transformation.</P></DIV></DIV>
<DIV class=div1>
<H2><A id=func-error name=func-error></A>3 The Error Function</H2>
<P>In this document, as well as in <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A>, <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>, and <A 
href="REC-xpath-functions-20070123.htm#xquery-semantics">[XQuery 
1.0 and XPath 2.0 Formal Semantics]</A>, the phrase "an error is raised" is 
used. Raising an error is equivalent to invoking the <CODE>fn:error</CODE> 
function defined in this section with the provided error code.</P>
<P>The above phrase is normally accompanied by specification of a specific 
error, to wit: "an error is raised [<EM>error code</EM>]". Each error defined in 
this document is identified by an <CODE>xs:QName</CODE> that is in the 
<CODE>http://www.w3.org/2005/xqt-errors</CODE> namespace, represented in this 
document by the <CODE>err</CODE> prefix. It is this <CODE>xs:QName</CODE> that 
is actually passed as an argument to the <CODE>fn:error</CODE> function 
invocation. Invocation of this function raises an error. For a more detailed 
treatment of error handing, see <A 
href="http://www.w3.org/TR/xpath20/#id-handling-dynamic">Section 2.3.3 Handling 
Dynamic Errors</A><SUP><SMALL>XP</SMALL></SUP> and <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fnerror">Section 7.2.9 The 
fn:error function</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<P>The <CODE>fn:error</CODE> function is a general function that may be invoked 
as above but may also be invoked from <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> or <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A> applications with, for example, an 
<CODE>xs:QName</CODE> argument.</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:error</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>none</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:error</CODE>(<CODE 
class=arg>$error</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:QName</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>none</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:error</CODE>(<CODE 
class=arg>$error</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:QName?</CODE>, <CODE class=arg>$description</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>none</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:error</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$error</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:QName?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$description</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$error-object</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>none</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: The <CODE>fn:error</CODE> function raises an error. While this 
function never returns a value, an error is returned to the external processing 
environment as an <CODE>xs:anyURI</CODE> or an <CODE>xs:QName</CODE>. The error 
<CODE>xs:anyURI</CODE> is derived from the error <CODE>xs:QName</CODE>. An error 
<CODE>xs:QName</CODE> with namespace URI NS and local part LP will be returned 
as the <CODE>xs:anyURI</CODE> NS#LP. The method by which the 
<CODE>xs:anyURI</CODE> or <CODE>xs:QName</CODE> is returned to the external 
processing environment is <A class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<P>If an invocation provides <CODE>$description</CODE> and 
<CODE>$error-object</CODE>, then these values may also be returned to the 
external processing environment. The method by which these values are provided 
to the external environment is <A class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The value of the <CODE>$description</CODE> parameter may need to be 
localized.</P></DIV>
<P>Note that "none" is a special type defined in <A 
href="REC-xpath-functions-20070123.htm#xquery-semantics">[XQuery 
1.0 and XPath 2.0 Formal Semantics]</A> and is not available to the user. It 
indicates that the function never returns and ensures that it has the correct 
static type.</P>
<P>If <CODE>fn:error</CODE> is invoked with no arguments, then its behavior is 
the same as the invocation of the following expression:</P>
<DIV class=exampleInner><PRE> fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) 
</PRE></DIV>
<P>If the first argument in the third or fourth signature is the empty sequence 
it is assumed to be the <CODE>xs:QName</CODE> constructed by:</P>
<DIV class=exampleInner><PRE> fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')
</PRE></DIV>
<DIV class=div2>
<H3><A id=func-error-examples name=func-error-examples></A>3.1 Examples</H3>
<UL>
  <LI>
  <P><CODE>fn:error()</CODE> returns 
  <CODE>http://www.w3.org/2005/xqt-errors#FOER0000</CODE> (or the corresponding 
  <CODE>xs:QName</CODE>) to the external processing environment.</P>
  <LI>
  <P><CODE>fn:error(fn:QName('http://www.example.com/HR', 'myerr:toohighsal'), 
  'Does not apply because salary is too high')</CODE> returns 
  <CODE>http://www.example.com/HR#toohighsal</CODE> and the 
  <CODE>xs:string</CODE> <CODE>"Does not apply because salary is too 
  high"</CODE> (or the corresponding <CODE>xs:QName</CODE>) to the external 
  processing environment.</P></LI></UL></DIV></DIV>
<DIV class=div1>
<H2><A id=func-trace name=func-trace></A>4 The Trace Function</H2>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:trace</CODE>(<CODE 
class=arg>$value</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>, <CODE class=arg>$label</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()*</CODE></DIV></DIV>
<P>Summary: Provides an execution trace intended to be used in debugging 
queries.</P>
<P>The input <CODE>$value</CODE> is returned, unchanged, as the result of the 
function. In addition, the inputs <CODE>$value</CODE>, converted to an 
<CODE>xs:string</CODE>, and <CODE>$label</CODE> may be directed to a trace data 
set. The destination of the trace output is <A class=termref 
title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. The 
format of the trace output is <A class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>. The 
ordering of output from invocations of the <CODE>fn:trace()</CODE> function is 
<A class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<DIV class=div2>
<H3><A id=func-trace-examples name=func-trace-examples></A>4.1 Examples</H3>
<UL>
  <LI>
  <P>Consider a situation in which a user wants to investigate the actual value 
  passed to a function. Assume that in a particular execution, <CODE>$v</CODE> 
  is an <CODE>xs:decimal</CODE> with value <CODE>124.84</CODE>. Writing 
  <CODE>fn:trace($v, 'the value of $v is:')</CODE> will put the strings 
  <CODE>"124.84"</CODE> and <CODE>"the value of $v is:"</CODE> in the trace data 
  set in implementation dependent order.</P></LI></UL></DIV></DIV>
<DIV class=div1>
<H2><A id=constructor-functions name=constructor-functions></A>5 Constructor 
Functions</H2>
<DIV class=div2>
<H3><A id=constructor-functions-for-xsd-types 
name=constructor-functions-for-xsd-types></A>5.1 Constructor Functions for XML 
Schema Built-in Types</H3>
<P>Every built-in atomic type that is defined in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>, except 
<CODE>xs:anyAtomicType</CODE> and <CODE>xs:NOTATION</CODE>, has an associated 
constructor function. <CODE>xs:untypedAtomic</CODE>, defined in <A 
href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP> and the two derived types 
<CODE>xs:yearMonthDuration</CODE> and <CODE>xs:dayTimeDuration</CODE> defined in 
<A href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP> also have associated constructor 
functions.</P>
<P>A constructor function is not defined for <CODE>xs:anyAtomicType</CODE> as 
there are no atomic values with type annotation <CODE>xs:anyAtomicType</CODE> at 
runtime, although this can be a statically inferred type. A constructor function 
is not defined for <CODE>xs:NOTATION</CODE> since it is defined as an abstract 
type in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>. If the static context (See <A 
href="http://www.w3.org/TR/xpath20/#static_context">Section 2.1.1 Static 
Context</A><SUP><SMALL>XP</SMALL></SUP>) contains a type derived from 
<CODE>xs:NOTATION</CODE> then a constructor function is defined for it. See <A 
href="REC-xpath-functions-20070123.htm#constructor-functions-for-user-defined-types"><B>5.4 
Constructor Functions for User-Defined Types</B></A>.</P>
<P>The form of the constructor function for a type <EM>prefix:TYPE</EM> is:</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>prefix:TYPE</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>prefix:TYPE?</CODE></DIV></DIV>
<P>If <CODE>$arg</CODE> is the empty sequence, the empty sequence is returned. 
For example, the signature of the constructor function corresponding to the 
<CODE>xs:unsignedInt</CODE> type defined in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> is:</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>xs:unsignedInt</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:unsignedInt?</CODE></DIV></DIV>
<P>Invoking the constructor function <CODE>xs:unsignedInt(12)</CODE> returns the 
<CODE>xs:unsignedInt</CODE> value 12. Another invocation of that constructor 
function that returns the same <CODE>xs:unsignedInt</CODE> value is 
<CODE>xs:unsignedInt("12")</CODE>. The same result would also be returned if the 
constructor function were to be invoked with a node that had a typed value equal 
to the <CODE>xs:unsignedInt</CODE> 12. The standard features described in <A 
href="http://www.w3.org/TR/xpath20/#id-atomization">Section 2.4.2 
Atomization</A><SUP><SMALL>XP</SMALL></SUP> would 'atomize' the node to extract 
its typed value and then call the constructor with that value. If the value 
passed to a constructor is illegal for the datatype to be constructed, an error 
is raised [<A title=err:FORG0001 
href="REC-xpath-functions-20070123.htm#ERRFORG0001">err:FORG0001</A>].</P>
<P>The semantics of the constructor function " <CODE>xs:TYPE(arg)</CODE> " are 
identical to the semantics of " <CODE>arg</CODE> cast as <CODE>xs:TYPE?</CODE> 
". See <A 
href="REC-xpath-functions-20070123.htm#casting"><B>17 
Casting</B></A>.</P>
<P>If the argument to a constructor function is a literal, the result of the 
function may be evaluated statically; if an error is found during such 
evaluation, it may be reported as a static error.</P>
<P>Special rules apply to constructor functions for <CODE>xs:QName</CODE> and 
types derived from <CODE>xs:QName</CODE> and <CODE>xs:NOTATION</CODE>. See <A 
href="REC-xpath-functions-20070123.htm#constructor-qname-notation"><B>5.3 
Constructor Functions for xs:QName and xs:NOTATION</B></A>.</P>
<P>The following constructor functions for the built-in types are supported:</P>
<UL>
  <LI>
  <DIV class=proto><CODE class=function>xs:string</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:string?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:boolean</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:boolean?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:decimal</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:decimal?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:float</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:float?</CODE></DIV>
  <P>Implementations <A class=termref title=may 
  href="REC-xpath-functions-20070123.htm#may"><SPAN 
  class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> return negative zero for 
  <CODE>xs:float("-0.0E0")</CODE>. <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> does not distinguish between the 
  values positive zero and negative zero.</P>
  <LI>
  <DIV class=proto><CODE class=function>xs:double</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:double?</CODE></DIV>
  <P>Implementations <A class=termref title=may 
  href="REC-xpath-functions-20070123.htm#may"><SPAN 
  class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> return negative zero for 
  <CODE>xs:double("-0.0E0").</CODE> <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> does not distinguish between the 
  values positive zero and negative zero.</P>
  <LI>
  <DIV class=proto><CODE class=function>xs:duration</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:duration?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:dateTime</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:dateTime?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:time</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:time?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:date</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:date?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:gYearMonth</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:gYearMonth?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:gYear</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:gYear?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:gMonthDay</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:gMonthDay?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:gDay</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:gDay?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:gMonth</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:gMonth?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:hexBinary</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:hexBinary?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:base64Binary</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:base64Binary?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:anyURI</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:anyURI?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:QName</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:QName?</CODE></DIV>
  <P>See <A 
  href="REC-xpath-functions-20070123.htm#constructor-qname-notation"><B>5.3 
  Constructor Functions for xs:QName and xs:NOTATION</B></A> for special 
  rules.</P></LI></UL>
<UL>
  <LI>
  <DIV class=proto><CODE class=function>xs:normalizedString</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:normalizedString?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:token</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:token?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:language</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:language?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:NMTOKEN</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:NMTOKEN?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:Name</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:Name?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:NCName</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:NCName?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:ID</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:ID?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:IDREF</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:IDREF?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:ENTITY</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:ENTITY?</CODE></DIV>
  <P>See <A 
  href="REC-xpath-functions-20070123.htm#casting-to-ENTITY"><B>17.4.1 
  Casting to xs:ENTITY</B></A> for rules related to constructing values of type 
  <CODE>xs:ENTITY</CODE> and types derived from it.</P>
  <LI>
  <DIV class=proto><CODE class=function>xs:integer</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:integer?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:nonPositiveInteger</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:nonPositiveInteger?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:negativeInteger</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:negativeInteger?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:long</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:long?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:int</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:int?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:short</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:short?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:byte</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:byte?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:nonNegativeInteger</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:nonNegativeInteger?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:unsignedLong</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:unsignedLong?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:unsignedInt</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:unsignedInt?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:unsignedShort</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:unsignedShort?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:unsignedByte</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:unsignedByte?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:positiveInteger</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:positiveInteger?</CODE></DIV></LI></UL>
<UL>
  <LI>
  <DIV class=proto><CODE class=function>xs:yearMonthDuration</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:yearMonthDuration?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:dayTimeDuration</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:dayTimeDuration?</CODE></DIV>
  <LI>
  <DIV class=proto><CODE class=function>xs:untypedAtomic</CODE>(<CODE 
  class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:untypedAtomic?</CODE></DIV></LI></UL></DIV>
<DIV class=div2>
<H3><A id=func-dateTime name=func-dateTime></A>5.2 A Special Constructor 
Function for xs:dateTime</H3>
<P>A special constructor function is provided for constructing a 
<CODE>xs:dateTime</CODE> value from a <CODE>xs:date</CODE> value and a 
<CODE>xs:time</CODE> value.</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:dateTime</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:time?</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dateTime?</CODE></DIV></DIV>
<P>The result <CODE>xs:dateTime</CODE> has a date component whose value is equal 
to <CODE>$arg1</CODE> and a time component whose value is equal to 
<CODE>$arg2</CODE>. The result is the empty sequence if either of the parameters 
is the empty sequence.</P>
<P>The timezone of the result is computed as follows:</P>
<UL>
  <LI>
  <P>If neither argument has a timezone, the result has no timezone.</P>
  <LI>
  <P>If exactly one of the arguments has a timezone, or if both arguments have 
  the same timezone, the result has this timezone.</P>
  <LI>
  <P>If the two arguments have different timezones, an error is raised:[<A 
  title=err:FORG0008 
  href="REC-xpath-functions-20070123.htm#ERRFORG0008">err:FORG0008</A>]</P></LI></UL>
<DIV class=div3>
<H4><A id=func-dateTime-examples name=func-dateTime-examples></A>5.2.1 
Examples</H4>
<UL>
  <LI>
  <P><CODE>fn:dateTime(xs:date("1999-12-31"), xs:time("12:00:00"))</CODE> 
  returns <CODE>xs:dateTime("1999-12-31T12:00:00").</CODE></P>
  <LI>
  <P><CODE>fn:dateTime(xs:date("1999-12-31"), xs:time("24:00:00"))</CODE> 
  returns <CODE>xs:dateTime("1999-12-31T00:00:00")</CODE> because 
  <CODE>"24:00:00"</CODE> is an alternate lexical form for 
  <CODE>"00:00:00".</CODE></P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=constructor-qname-notation name=constructor-qname-notation></A>5.3 
Constructor Functions for xs:QName and xs:NOTATION</H3>
<P>Special rules apply to constructor functions for the types 
<CODE>xs:QName</CODE> and <CODE>xs:NOTATION</CODE>, for two reasons:</P>
<UL>
  <LI>
  <P>The lexical representation of these types uses namespace prefixes, whose 
  meaning is context-dependent.</P>
  <LI>
  <P>Values cannot belong directly to the type <CODE>xs:NOTATION</CODE>, only to 
  its subtypes.</P></LI></UL>
<P>These constraints result in the following restrictions:</P>
<UL>
  <LI>
  <P>Conversion from an <CODE>xs:string</CODE> to a value of type 
  <CODE>xs:QName</CODE>, a type derived from <CODE>xs:QName</CODE> or a type 
  derived from <CODE>xs:NOTATION</CODE> is permitted only if the 
  <CODE>xs:string</CODE> is written as a string literal. This applies whether 
  the conversion is expressed using a constructor function or using the "cast 
  as" syntax. Such a conversion can be regarded as a pseudo-function, which is 
  always evaluated statically. It is also permitted for these constructors and 
  casts to take a dynamically-supplied argument in the normal manner, but as the 
  casting table (see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-primitive-to-primitive"><B>17.1 
  Casting from primitive types to primitive types</B></A>) indicates, the only 
  arguments that are supported in this case are values of type 
  <CODE>xs:QName</CODE> or <CODE>xs:NOTATION</CODE> respectively.</P>
  <LI>
  <P>There is no constructor function for <CODE>xs:NOTATION</CODE>. Constructors 
  are defined, however, for <CODE>xs:QName</CODE>, for types derived from 
  <CODE>xs:QName</CODE>, and for types derived from 
  <CODE>xs:NOTATION</CODE>.</P></LI></UL>
<P>When converting from an <CODE>xs:string</CODE>, the prefix within the lexical 
<CODE>xs:QName</CODE> supplied as the argument is resolved to a namespace URI 
using the statically known namespaces from the static context. If the lexical 
<CODE>xs:QName</CODE> has no prefix, the namespace URI of the resulting 
expanded-QName is the default element/type namespace from the static context. 
Components of the static context are discussed in <A 
href="http://www.w3.org/TR/xpath20/#static_context">Section 2.1.1 Static 
Context</A><SUP><SMALL>XP</SMALL></SUP>. A static error is raised [<A 
title=err:FONS0004 
href="REC-xpath-functions-20070123.htm#ERRFONS0004">err:FONS0004</A>] 
if the prefix is not bound in the static context. As described in <A 
href="http://www.w3.org/TR/xpath-datamodel/#terminology">Section 2.1 
Terminology</A><SUP><SMALL>DM</SMALL></SUP>, the supplied prefix is retained as 
part of the expanded-QName value.</P></DIV>
<DIV class=div2>
<H3><A id=constructor-functions-for-user-defined-types 
name=constructor-functions-for-user-defined-types></A>5.4 Constructor Functions 
for User-Defined Types</H3>
<P>For every atomic type in the static context (See <A 
href="http://www.w3.org/TR/xpath20/#static_context">Section 2.1.1 Static 
Context</A><SUP><SMALL>XP</SMALL></SUP>) that is derived from a primitive type, 
there is a constructor function (whose name is the same as the name of the type) 
whose effect is to create a value of that type from the supplied argument. The 
rules for constructing user-defined types are defined in the same way as the 
rules for constructing built-in derived types discussed in <A 
href="REC-xpath-functions-20070123.htm#constructor-functions-for-xsd-types"><B>5.1 
Constructor Functions for XML Schema Built-in Types</B></A>.</P>
<P>Special rules apply to constructor functions for types derived from 
<CODE>xs:QName</CODE> and <CODE>xs:NOTATION</CODE>. See <A 
href="REC-xpath-functions-20070123.htm#constructor-qname-notation"><B>5.3 
Constructor Functions for xs:QName and xs:NOTATION</B></A>.</P>
<P>Consider a situation where the static context contains a type called 
<CODE>hatSize</CODE> defined in a schema whose target namespace is bound to the 
prefix <CODE>my</CODE>. In such a case the constructor function:</P>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>my:hatSize</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>my:hatSize?</CODE></DIV></DIV>
<P>is available to users.</P>
<P>To construct an instance of an atomic type that is not in a namespace, it is 
necessary to use a cast expression or undeclare the default function namespace. 
For example, if the user-defined type <CODE>apple</CODE> is derived from 
<CODE>xs:integer</CODE> but is not in a namespace, an instance of this type can 
be constructed as follows using a cast expression (this requires that the 
default element/type namespace is no namespace):</P>
<DIV class=exampleInner><PRE>17 cast as apple
</PRE></DIV>
<P>The following shows the use of the constructor function:</P>
<DIV class=exampleInner><PRE>declare default function namespace ""; apple(17)
</PRE></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=numeric-functions name=numeric-functions></A>6 Functions and Operators 
on Numerics</H2>
<P>This section discusses arithmetic operators on the numeric datatypes defined 
in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>. It uses an approach that permits 
lightweight implementation whenever possible.</P>
<DIV class=div2>
<H3><A id=numeric-types name=numeric-types></A>6.1 Numeric Types</H3>
<P>The operators described in this section are defined on the following numeric 
types. Each type whose name is indented is derived from the type whose name 
appears nearest above with one less level of indentation.</P>
<TABLE class=hierarchy width=288 summary="Numeric types" border=0>
  <TBODY>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:decimal</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:integer</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:float</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:double</TD></TR></TBODY></TABLE>
<P>They also apply to types derived by restriction from the above types.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>This specification uses <A 
href="REC-xpath-functions-20070123.htm#ieee754">[IEEE 
754-1985]</A> arithmetic for <CODE>xs:float</CODE> and <CODE>xs:double</CODE> 
values. This differs from <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> which defines <CODE>NaN</CODE> as 
being equal to itself and defines only a single zero in the value space while <A 
href="REC-xpath-functions-20070123.htm#ieee754">[IEEE 
754-1985]</A> arithmetic treats <CODE>NaN</CODE> as unequal to all other values 
including itself and can produce distinct results of positive zero and negative 
zero. (These are two different machine representations for the same <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> value.) The text accompanying 
several functions discusses behaviour for both positive and negative zero inputs 
and outputs in the interest of alignment with <A 
href="REC-xpath-functions-20070123.htm#ieee754">[IEEE 
754-1985]</A>.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=op.numeric name=op.numeric></A>6.2 Operators on Numeric Values</H3>
<P>The following functions define the semantics of operators defined in <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A> on these numeric types.</P>
<TABLE summary="Operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Operators</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-add"><CODE>op:numeric-add</CODE></A></TD>
    <TD>Addition</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-subtract"><CODE>op:numeric-subtract</CODE></A></TD>
    <TD>Subtraction</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-multiply"><CODE>op:numeric-multiply</CODE></A></TD>
    <TD>Multiplication</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide</CODE></A></TD>
    <TD>Division</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-integer-divide"><CODE>op:numeric-integer-divide</CODE></A></TD>
    <TD>Integer division</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-mod"><CODE>op:numeric-mod</CODE></A></TD>
    <TD>Modulus</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-unary-plus"><CODE>op:numeric-unary-plus</CODE></A></TD>
    <TD>Unary plus</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-unary-minus"><CODE>op:numeric-unary-minus</CODE></A></TD>
    <TD>Unary minus (negation)</TD></TR></TBODY></TABLE>
<P>The parameters and return types for the above operators are the basic numeric 
types: <CODE>xs:integer</CODE>, <CODE>xs:decimal</CODE>, <CODE>xs:float</CODE> 
and <CODE>xs:double</CODE>, and types derived from them. The word 
"<CODE>numeric</CODE>" in function signatures signifies these four types. For 
simplicity, each operator is defined to operate on operands of the same type and 
return the same type. The exceptions are <A 
href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide</CODE></A>, 
which returns an <CODE>xs:decimal</CODE> if called with two 
<CODE>xs:integer</CODE> operands and <A 
href="REC-xpath-functions-20070123.htm#func-numeric-integer-divide"><CODE>op:numeric-integer-divide</CODE></A> 
which always returns an <CODE>xs:integer</CODE>.</P>
<P>If the two operands are not of the same type, <EM>subtype substitution</EM> 
and <EM>numeric type promotion</EM> are used to obtain two operands of the same 
type. <A href="http://www.w3.org/TR/xpath20/#promotion">Section B.1 Type 
Promotion</A><SUP><SMALL>XP</SMALL></SUP> and <A 
href="http://www.w3.org/TR/xpath20/#mapping">Section B.2 Operator 
Mapping</A><SUP><SMALL>XP</SMALL></SUP> describe the semantics of these 
operations in detail.</P>
<P>The result type of operations depends on their argument datatypes and is 
defined in the following table:</P>
<TABLE summary="Function/operator summary" border=1>
  <COLGROUP>
  <COL width="50%">
  <COL width="50%">
  <THEAD>
  <TR>
    <TH>Operator</TH>
    <TH>Returns</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><CODE>op:operation(xs:integer, xs:integer)</CODE></TD>
    <TD><CODE>xs:integer</CODE> (except for <A 
      href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide(integer, 
      integer)</CODE></A>, which returns <CODE>xs:decimal</CODE>)</TD></TR>
  <TR>
    <TD><CODE>op:operation(xs:decimal, xs:decimal)</CODE></TD>
    <TD><CODE>xs:decimal</CODE></TD></TR>
  <TR>
    <TD><CODE>op:operation(xs:float, xs:float)</CODE></TD>
    <TD><CODE>xs:float</CODE></TD></TR>
  <TR>
    <TD><CODE>op:operation(xs:double, xs:double)</CODE></TD>
    <TD><CODE>xs:double</CODE></TD></TR>
  <TR>
    <TD><CODE>op:operation(xs:integer)</CODE></TD>
    <TD><CODE>xs:integer</CODE></TD></TR>
  <TR>
    <TD><CODE>op:operation(xs:decimal)</CODE></TD>
    <TD><CODE>xs:decimal</CODE></TD></TR>
  <TR>
    <TD><CODE>op:operation(xs:float)</CODE></TD>
    <TD><CODE>xs:float</CODE></TD></TR>
  <TR>
    <TD><CODE>op:operation(xs:double)</CODE></TD>
    <TD><CODE>xs:double</CODE></TD></TR></TBODY></TABLE>
<P>These rules define any operation on any pair of arithmetic types. Consider 
the following example:</P>
<DIV class=exampleInner><PRE>op:operation(xs:int, xs:double) =&gt; op:operation(xs:double, xs:double)
</PRE></DIV>
<P>For this operation, <CODE>xs:int</CODE> must be converted to 
<CODE>xs:double</CODE>. This can be done, since by the rules above: 
<CODE>xs:int</CODE> can be substituted for <CODE>xs:integer</CODE>, 
<CODE>xs:integer</CODE> can be substituted for <CODE>xs:decimal</CODE>, 
<CODE>xs:decimal</CODE> can be promoted to <CODE>xs:double</CODE>. As far as 
possible, the promotions should be done in a single step. Specifically, when an 
<CODE>xs:decimal</CODE> is promoted to an <CODE>xs:double</CODE>, it should not 
be converted to an <CODE>xs:float</CODE> and then to <CODE>xs:double</CODE>, as 
this risks loss of precision.</P>
<P>As another example, a user may define <CODE>height</CODE> as a derived type 
of <CODE>xs:integer</CODE> with a minimum value of 20 and a maximum value of 
100. He may then derive <CODE>fenceHeight</CODE> using an enumeration to 
restrict the permitted set of values to, say, 36, 48 and 60.</P>
<DIV class=exampleInner><PRE>op:operation(fenceHeight, xs:integer) =&gt; op:operation(xs:integer, xs:integer)
</PRE></DIV>
<P><CODE>fenceHeight</CODE> can be substituted for its base type 
<CODE>height</CODE> and <CODE>height</CODE> can be substituted for its base type 
<CODE>xs:integer</CODE>.</P>
<P>On overflow and underflow situations during arithmetic operations conforming 
implementations <A class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> behave as follows:</P>
<UL>
  <LI>
  <P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> operations, overflow 
  behavior <A class=termref title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> be conformant with <A 
  href="REC-xpath-functions-20070123.htm#ieee754">[IEEE 
  754-1985]</A>. This specification allows the following options:</P>
  <UL>
    <LI>
    <P>Raising an error [<A title=err:FOAR0002 
    href="REC-xpath-functions-20070123.htm#ERRFOAR0002">err:FOAR0002</A>] 
    via an overflow trap.</P>
    <LI>
    <P>Returning <CODE>INF</CODE> or <CODE>-INF</CODE>.</P>
    <LI>
    <P>Returning the largest (positive or negative) non-infinite 
  number.</P></LI></UL>
  <LI>
  <P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> operations, underflow 
  behavior <A class=termref title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> be conformant with <A 
  href="REC-xpath-functions-20070123.htm#ieee754">[IEEE 
  754-1985]</A>. This specification allows the following options:</P>
  <UL>
    <LI>
    <P>Raising an error [<A title=err:FOAR0002 
    href="REC-xpath-functions-20070123.htm#ERRFOAR0002">err:FOAR0002</A>] 
    via an underflow trap.</P>
    <LI>
    <P>Returning <CODE>0.0E0</CODE> or <CODE>+/- 2**Emin</CODE> or a 
    denormalized value; where <CODE>Emin</CODE> is the smallest possible 
    <CODE>xs:float</CODE> or <CODE>xs:double</CODE> exponent.</P></LI></UL>
  <LI>
  <P>For <CODE>xs:decimal</CODE> operations, overflow behavior <A class=termref 
  title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> raise an error [<A 
  title=err:FOAR0002 
  href="REC-xpath-functions-20070123.htm#ERRFOAR0002">err:FOAR0002</A>]. 
  On underflow, <CODE>0.0</CODE> must be returned.</P>
  <LI>
  <P>For <CODE>xs:integer</CODE> operations, implementations that support 
  limited-precision integer operations <A class=termref title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> select from the 
  following options:</P>
  <UL>
    <LI>
    <P>They <A class=termref title=may 
    href="REC-xpath-functions-20070123.htm#may"><SPAN 
    class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> choose to always raise 
    an error [<A title=err:FOAR0002 
    href="REC-xpath-functions-20070123.htm#ERRFOAR0002">err:FOAR0002</A>].</P>
    <LI>
    <P>They <A class=termref title=may 
    href="REC-xpath-functions-20070123.htm#may"><SPAN 
    class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> provide an <A 
    class=termref title=implementation-defined 
    href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
    class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
    mechanism that allows users to choose between raising an error and returning 
    a result that is modulo the largest representable integer value. See <A 
    href="REC-xpath-functions-20070123.htm#ISO10967">[ISO 
    10967]</A>.</P></LI></UL></LI></UL>
<P>The functions <A 
href="REC-xpath-functions-20070123.htm#func-numeric-add"><CODE>op:numeric-add</CODE></A>, 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-subtract"><CODE>op:numeric-subtract</CODE></A>, 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-multiply"><CODE>op:numeric-multiply</CODE></A>, 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide</CODE></A>, 
<A 
href="REC-xpath-functions-20070123.htm#func-numeric-integer-divide"><CODE>op:numeric-integer-divide</CODE></A> 
and <A 
href="REC-xpath-functions-20070123.htm#func-numeric-mod"><CODE>op:numeric-mod</CODE></A> 
are each defined for pairs of numeric operands, each of which has the same 
type:<CODE>xs:integer</CODE>, <CODE>xs:decimal</CODE>, <CODE>xs:float</CODE>, or 
<CODE>xs:double</CODE>. The functions <A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-plus"><CODE>op:numeric-unary-plus</CODE></A> 
and <A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-minus"><CODE>op:numeric-unary-minus</CODE></A> 
are defined for a single operand whose type is one of those same numeric 
types.</P>
<P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> arguments, if either 
argument is <CODE>NaN</CODE>, the result is <CODE>NaN</CODE>.</P>
<P>For <CODE>xs:decimal</CODE> values the number of digits of precision returned 
by the numeric operators is <A class=termref title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. If the 
number of digits in the result exceeds the number of digits that the 
implementation supports, the result is truncated or rounded in an <A 
class=termref title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
manner.</P>
<DIV class=div3>
<H4><A id=func-numeric-add name=func-numeric-add></A>6.2.1 op:numeric-add</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-add</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric</CODE></DIV></DIV>
<P>Summary: Backs up the "+" operator and returns the arithmetic sum of its 
operands: (<CODE>$arg1 + $arg2</CODE>).</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>For <CODE>xs:float</CODE> or <CODE>xs:double</CODE> values, if one of the 
operands is a zero or a finite number and the other is <CODE>INF</CODE> or 
<CODE>-INF</CODE>, <CODE>INF</CODE> or <CODE>-INF</CODE> is returned. If both 
operands are <CODE>INF</CODE>, <CODE>INF</CODE> is returned. If both operands 
are <CODE>-INF</CODE>, <CODE>-INF</CODE> is returned. If one of the operands is 
<CODE>INF</CODE> and the other is <CODE>-INF</CODE>, <CODE>NaN</CODE> is 
returned.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=func-numeric-subtract name=func-numeric-subtract></A>6.2.2 
op:numeric-subtract</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-subtract</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric</CODE></DIV></DIV>
<P>Summary: Backs up the "-" operator and returns the arithmetic difference of 
its operands: (<CODE>$arg1 - $arg2</CODE>).</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>For <CODE>xs:float</CODE> or <CODE>xs:double</CODE> values, if one of the 
operands is a zero or a finite number and the other is <CODE>INF</CODE> or 
<CODE>-INF</CODE>, an infinity of the appropriate sign is returned. If both 
operands are <CODE>INF</CODE> or <CODE>-INF</CODE>, <CODE>NaN</CODE> is 
returned. If one of the operands is <CODE>INF</CODE> and the other is 
<CODE>-INF</CODE>, an infinity of the appropriate sign is 
returned.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=func-numeric-multiply name=func-numeric-multiply></A>6.2.3 
op:numeric-multiply</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-multiply</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric</CODE></DIV></DIV>
<P>Summary: Backs up the "*" operator and returns the arithmetic product of its 
operands: (<CODE>$arg1 * $arg2</CODE>).</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>For <CODE>xs:float</CODE> or <CODE>xs:double</CODE> values, if one of the 
operands is a zero and the other is an infinity, <CODE>NaN</CODE> is returned. 
If one of the operands is a non-zero number and the other is an infinity, an 
infinity with the appropriate sign is returned.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=func-numeric-divide name=func-numeric-divide></A>6.2.4 
op:numeric-divide</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-divide</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric</CODE></DIV></DIV>
<P>Summary: Backs up the "div" operator and returns the arithmetic quotient of 
its operands: (<CODE>$arg1 div $arg2</CODE>).</P>
<P>As a special case, if the types of both <CODE>$arg1</CODE> and 
<CODE>$arg2</CODE> are <CODE>xs:integer</CODE>, then the return type is 
<CODE>xs:decimal</CODE>.</P>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>For <CODE>xs:decimal</CODE> and <CODE>xs:integer</CODE> operands, if the 
divisor is (positive or negative) zero, an error is raised [<A 
title=err:FOAR0001 
href="REC-xpath-functions-20070123.htm#ERRFOAR0001">err:FOAR0001</A>]. 
For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> operands, floating point 
division is performed as specified in <A 
href="REC-xpath-functions-20070123.htm#ieee754">[IEEE 
754-1985]</A>.</P>
<P>For <CODE>xs:float</CODE> or <CODE>xs:double</CODE> values, a positive number 
divided by positive zero returns <CODE>INF</CODE>. A negative number divided by 
positive zero returns <CODE>-INF</CODE>. Division by negative zero returns 
<CODE>-INF</CODE> and <CODE>INF</CODE>, respectively. Positive or negative zero 
divided by positive or negative zero returns <CODE>NaN</CODE>. Also, 
<CODE>INF</CODE> or <CODE>-INF</CODE> divided by <CODE>INF</CODE> or 
<CODE>-INF</CODE> returns <CODE>NaN</CODE>.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=func-numeric-integer-divide name=func-numeric-integer-divide></A>6.2.5 
op:numeric-integer-divide</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-integer-divide</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer</CODE></DIV></DIV>
<P>Summary: This function backs up the "idiv" operator and performs an integer 
division: that is, it divides the first argument by the second, and returns the 
integer obtained by truncating the fractional part of the result. The division 
is performed so that the sign of the fractional part is the same as the sign of 
the dividend.</P>
<P>If the dividend, <CODE>$arg1</CODE>, is not evenly divided by the divisor, 
<CODE>$arg2</CODE>, then the quotient is the <CODE>xs:integer</CODE> value 
obtained, ignoring (truncating) any remainder that results from the division 
(that is, no rounding is performed). Thus, the semantics " <CODE>$a idiv 
$b</CODE> " are equivalent to " <CODE>($a div $b) cast as xs:integer</CODE> " 
except for error situations.</P>
<P>If the divisor is (positive or negative) zero, then an error is raised [<A 
title=err:FOAR0001 
href="REC-xpath-functions-20070123.htm#ERRFOAR0001">err:FOAR0001</A>]. 
If either operand is <CODE>NaN</CODE> or if <CODE>$arg1</CODE> is 
<CODE>INF</CODE> or <CODE>-INF</CODE> then an error is raised [<A 
title=err:FOAR0002 
href="REC-xpath-functions-20070123.htm#ERRFOAR0002">err:FOAR0002</A>].</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The semantics of this function are different from integer division as defined 
in programming languages such as Java and C++.</P></DIV>
<DIV class=div4>
<H5><A id=func-numeric-integer-divide-examples 
name=func-numeric-integer-divide-examples></A>6.2.5.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:numeric-integer-divide(10,3)</CODE> returns <CODE>3</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(3,-2)</CODE> returns <CODE>-1</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(-3,2)</CODE> returns <CODE>-1</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(-3,-2)</CODE> returns <CODE>1</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(9.0,3)</CODE> returns <CODE>3</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(-3.5,3)</CODE> returns <CODE>-1</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(3.0,4)</CODE> returns <CODE>0</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(3.1E1,6)</CODE> returns <CODE>5</CODE></P>
  <LI>
  <P><CODE>op:numeric-integer-divide(3.1E1,7)</CODE> returns 
  <CODE>4</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-numeric-mod name=func-numeric-mod></A>6.2.6 op:numeric-mod</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-mod</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric</CODE></DIV></DIV>
<P>Summary: Backs up the "mod" operator. Informally, this function returns the 
remainder resulting from dividing <CODE>$arg1</CODE>, the dividend, by 
<CODE>$arg2</CODE>, the divisor. The operation <CODE>a mod b</CODE> for operands 
that are <CODE>xs:integer</CODE> or <CODE>xs:decimal</CODE>, or types derived 
from them, produces a result such that <CODE>(a idiv b)*b+(a mod b)</CODE> is 
equal to <CODE>a</CODE> and the magnitude of the result is always less than the 
magnitude of <CODE>b</CODE>. This identity holds even in the special case that 
the dividend is the negative integer of largest possible magnitude for its type 
and the divisor is -1 (the remainder is 0). It follows from this rule that the 
sign of the result is the sign of the dividend.</P>
<P>For <CODE>xs:integer</CODE> and <CODE>xs:decimal</CODE> operands, if 
<CODE>$arg2</CODE> is zero, then an error is raised [<A title=err:FOAR0001 
href="REC-xpath-functions-20070123.htm#ERRFOAR0001">err:FOAR0001</A>].</P>
<P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> operands the following 
rules apply:</P>
<UL>
  <LI>
  <P>If either operand is <CODE>NaN</CODE>, the result is <CODE>NaN</CODE>.</P>
  <LI>
  <P>If the dividend is positive or negative infinity, or the divisor is 
  positive or negative zero (0), or both, the result is <CODE>NaN</CODE>.</P>
  <LI>
  <P>If the dividend is finite and the divisor is an infinity, the result equals 
  the dividend.</P>
  <LI>
  <P>If the dividend is positive or negative zero and the divisor is finite, the 
  result is the same as the dividend.</P>
  <LI>
  <P>In the remaining cases, where neither positive or negative infinity, nor 
  positive or negative zero, nor <CODE>NaN</CODE> is involved, the result obeys 
  <CODE>(a idiv b)*b+(a mod b)</CODE> = <CODE>a</CODE>. Division is truncating 
  division, analogous to integer division, not <A 
  href="REC-xpath-functions-20070123.htm#ieee754">[IEEE 
  754-1985]</A> rounding division i.e. additional digits are truncated, not 
  rounded to the required precision.</P></LI></UL>
<DIV class=div4>
<H5><A id=func-numeric-mod-examples name=func-numeric-mod-examples></A>6.2.6.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:numeric-mod(10,3)</CODE> returns <CODE>1</CODE>.</P>
  <LI>
  <P><CODE>op:numeric-mod(6,-2)</CODE> returns <CODE>0</CODE>.</P>
  <LI>
  <P><CODE>op:numeric-mod(4.5,1.2)</CODE> returns <CODE>0.9</CODE>.</P>
  <LI>
  <P><CODE>op:numeric-mod(1.23E2, 0.6E1)</CODE> returns 
  <CODE>3.0E0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-numeric-unary-plus name=func-numeric-unary-plus></A>6.2.7 
op:numeric-unary-plus</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-unary-plus</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric</CODE></DIV></DIV>
<P>Summary: Backs up the unary "+" operator and returns its operand with the 
sign unchanged: (+ <CODE>$arg</CODE>). Semantically, this operation performs no 
operation.</P></DIV>
<DIV class=div3>
<H4><A id=func-numeric-unary-minus name=func-numeric-unary-minus></A>6.2.8 
op:numeric-unary-minus</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-unary-minus</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric</CODE></DIV></DIV>
<P>Summary: Backs up the unary "-" operator and returns its operand with the 
sign reversed: (- <CODE>$arg</CODE>). If <CODE>$arg</CODE> is positive, its 
negative is returned; if it is negative, its positive is returned.</P>
<P>For <CODE>xs:integer</CODE> and <CODE>xs:decimal</CODE> arguments, 
<CODE>0</CODE> and <CODE>0.0</CODE> return <CODE>0</CODE> and <CODE>0.0</CODE>, 
respectively. For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> arguments, 
<CODE>NaN</CODE> returns <CODE>NaN</CODE>, <CODE>0.0E0</CODE> returns 
<CODE>-0.0E0</CODE> and vice versa. <CODE>INF</CODE> returns <CODE>-INF</CODE>. 
<CODE>-INF</CODE> returns <CODE>INF</CODE>.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=comp.numeric name=comp.numeric></A>6.3 Comparison Operators on Numeric 
Values</H3>
<P>This specification defines the following comparison operators on numeric 
values. Comparisons take two arguments of the same type. If the arguments are of 
different types, one argument is promoted to the type of the other as described 
above in <A 
href="REC-xpath-functions-20070123.htm#op.numeric"><B>6.2 
Operators on Numeric Values</B></A>. Each comparison operator returns a boolean 
value. If either, or both, operands are <CODE>NaN</CODE>, <CODE>false</CODE> is 
returned.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Operator</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-equal"><CODE>op:numeric-equal</CODE></A></TD>
    <TD>Equality comparison</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-less-than"><CODE>op:numeric-less-than</CODE></A></TD>
    <TD>Less-than comparison</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-numeric-greater-than"><CODE>op:numeric-greater-than</CODE></A></TD>
    <TD>Greater-than comparison</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-numeric-equal name=func-numeric-equal></A>6.3.1 
op:numeric-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns true if and only if the value of <CODE>$arg1</CODE> is equal 
to the value of <CODE>$arg2</CODE>. For <CODE>xs:float</CODE> and 
<CODE>xs:double</CODE> values, positive zero and negative zero compare equal. 
<CODE>INF</CODE> equals <CODE>INF</CODE> and <CODE>-INF</CODE> equals 
<CODE>-INF</CODE>. <CODE>NaN</CODE> does not equal itself.</P>
<P>This function backs up the "eq", "ne", "le" and "ge" operators on numeric 
values.</P></DIV>
<DIV class=div3>
<H4><A id=func-numeric-less-than name=func-numeric-less-than></A>6.3.2 
op:numeric-less-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-less-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if <CODE>$arg1</CODE> is less 
than <CODE>$arg2</CODE>. For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> 
values, positive infinity is greater than all other non-<CODE>NaN</CODE> values; 
negative infinity is less than all other non-<CODE>NaN</CODE> values. If 
<CODE>$arg1</CODE> or <CODE>$arg2</CODE> is <CODE>NaN</CODE>, the function 
returns <CODE>false</CODE>.</P>
<P>This function backs up the "lt" and "le" operators on numeric 
values.</P></DIV>
<DIV class=div3>
<H4><A id=func-numeric-greater-than name=func-numeric-greater-than></A>6.3.3 
op:numeric-greater-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:numeric-greater-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>numeric</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if <CODE>$arg1</CODE> is 
greater than <CODE>$arg2</CODE>. For <CODE>xs:float</CODE> and 
<CODE>xs:double</CODE> values, positive infinity is greater than all other 
non-<CODE>NaN</CODE> values; negative infinity is less than all other 
non-<CODE>NaN</CODE> values. If <CODE>$arg1</CODE> or <CODE>$arg2</CODE> is 
<CODE>NaN</CODE>, the function returns <CODE>false</CODE>.</P>
<P>This function backs up the "gt" and "ge" operators on numeric 
values.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=numeric-value-functions name=numeric-value-functions></A>6.4 Functions 
on Numeric Values</H3>
<P>The following functions are defined on numeric types. Each function returns a 
value of the same type as the type of its argument.</P>
<UL>
  <LI>
  <P>If the argument is the empty sequence, the empty sequence is returned.</P>
  <LI>
  <P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> arguments, if the 
  argument is "NaN", "NaN" is returned.</P>
  <LI>
  <P>Except for <A 
  href="REC-xpath-functions-20070123.htm#func-abs"><CODE>fn:abs()</CODE></A>, 
  for <CODE>xs:float</CODE> and <CODE>xs:double</CODE> arguments, if the 
  argument is positive or negative infinity, positive or negative infinity is 
  returned.</P></LI></UL>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-abs"><CODE>fn:abs</CODE></A></TD>
    <TD>Returns the absolute value of the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-ceiling"><CODE>fn:ceiling</CODE></A></TD>
    <TD>Returns the smallest number with no fractional part that is greater 
      than or equal to the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-floor"><CODE>fn:floor</CODE></A></TD>
    <TD>Returns the largest number with no fractional part that is less than 
      or equal to the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-round"><CODE>fn:round</CODE></A></TD>
    <TD>Rounds to the nearest number with no fractional part.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-round-half-to-even"><CODE>fn:round-half-to-even</CODE></A></TD>
    <TD>Takes a number and a precision and returns a number rounded to the 
      given precision. If the fractional part is exactly half, the result is the 
      number whose least significant digit is even.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-abs name=func-abs></A>6.4.1 fn:abs</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:abs</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric?</CODE></DIV></DIV>
<P>Summary: Returns the absolute value of <CODE>$arg</CODE>. If 
<CODE>$arg</CODE> is negative returns <CODE>-$arg</CODE> otherwise returns 
<CODE>$arg</CODE>. If type of <CODE>$arg</CODE> is one of the four numeric types 
<CODE>xs:float</CODE>, <CODE>xs:double</CODE>, <CODE>xs:decimal</CODE> or 
<CODE>xs:integer</CODE> the type of the result is the same as the type of 
<CODE>$arg</CODE>. If the type of <CODE>$arg</CODE> is a type derived from one 
of the numeric types, the result is an instance of the base numeric type.</P>
<P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> arguments, if the 
argument is positive zero or negative zero, then positive zero is returned. If 
the argument is positive or negative infinity, positive infinity is 
returned.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_abs_ceil_floor_round">Section 
7.2.3 The fn:abs, fn:ceiling, fn:floor, fn:round, and fn:round-half-to-even 
functions</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=div4>
<H5><A id=func-abs-examples name=func-abs-examples></A>6.4.1.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:abs(10.5)</CODE> returns <CODE>10.5</CODE>.</P>
  <LI>
  <P><CODE>fn:abs(-10.5)</CODE> returns 
<CODE>10.5</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-ceiling name=func-ceiling></A>6.4.2 fn:ceiling</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:ceiling</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric?</CODE></DIV></DIV>
<P>Summary: Returns the smallest (closest to negative infinity) number with no 
fractional part that is not less than the value of <CODE>$arg</CODE>. If type of 
<CODE>$arg</CODE> is one of the four numeric types <CODE>xs:float</CODE>, 
<CODE>xs:double</CODE>, <CODE>xs:decimal</CODE> or <CODE>xs:integer</CODE> the 
type of the result is the same as the type of <CODE>$arg</CODE>. If the type of 
<CODE>$arg</CODE> is a type derived from one of the numeric types, the result is 
an instance of the base numeric type.</P>
<P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> arguments, if the 
argument is positive zero, then positive zero is returned. If the argument is 
negative zero, then negative zero is returned. If the argument is less than zero 
and greater than -1, negative zero is returned.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_abs_ceil_floor_round">Section 
7.2.3 The fn:abs, fn:ceiling, fn:floor, fn:round, and fn:round-half-to-even 
functions</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=div4>
<H5><A id=func-ceiling-examples name=func-ceiling-examples></A>6.4.2.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:ceiling(10.5)</CODE> returns <CODE>11</CODE>.</P>
  <LI>
  <P><CODE>fn:ceiling(-10.5)</CODE> returns 
<CODE>-10</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-floor name=func-floor></A>6.4.3 fn:floor</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:floor</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric?</CODE></DIV></DIV>
<P>Summary: Returns the largest (closest to positive infinity) number with no 
fractional part that is not greater than the value of <CODE>$arg</CODE>. If type 
of <CODE>$arg</CODE> is one of the four numeric types <CODE>xs:float</CODE>, 
<CODE>xs:double</CODE>, <CODE>xs:decimal</CODE> or <CODE>xs:integer</CODE> the 
type of the result is the same as the type of <CODE>$arg</CODE>. If the type of 
<CODE>$arg</CODE> is a type derived from one of the numeric types, the result is 
an instance of the base numeric type.</P>
<P>For <CODE>float</CODE> and <CODE>double</CODE> arguments, if the argument is 
positive zero, then positive zero is returned. If the argument is negative zero, 
then negative zero is returned.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_abs_ceil_floor_round">Section 
7.2.3 The fn:abs, fn:ceiling, fn:floor, fn:round, and fn:round-half-to-even 
functions</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=div4>
<H5><A id=func-floor-examples name=func-floor-examples></A>6.4.3.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:floor(10.5)</CODE> returns <CODE>10</CODE>.</P>
  <LI>
  <P><CODE>fn:floor(-10.5)</CODE> returns 
<CODE>-11</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-round name=func-round></A>6.4.4 fn:round</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:round</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric?</CODE></DIV></DIV>
<P>Summary: Returns the number with no fractional part that is closest to the 
argument. If there are two such numbers, then the one that is closest to 
positive infinity is returned. If type of <CODE>$arg</CODE> is one of the four 
numeric types <CODE>xs:float</CODE>, <CODE>xs:double</CODE>, 
<CODE>xs:decimal</CODE> or <CODE>xs:integer</CODE> the type of the result is the 
same as the type of <CODE>$arg</CODE>. If the type of <CODE>$arg</CODE> is a 
type derived from one of the numeric types, the result is an instance of the 
base numeric type.</P>
<P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> arguments, if the 
argument is positive infinity, then positive infinity is returned. If the 
argument is negative infinity, then negative infinity is returned. If the 
argument is positive zero, then positive zero is returned. If the argument is 
negative zero, then negative zero is returned. If the argument is less than 
zero, but greater than or equal to -0.5, then negative zero is returned. In the 
cases where positive zero or negative zero is returned, negative zero or 
positive zero may be returned as <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> does not distinguish between the 
values positive zero and negative zero.</P>
<P>For the last two cases, note that the result is not the same as <A 
href="REC-xpath-functions-20070123.htm#func-floor"><CODE>fn:floor(x+0.5)</CODE></A>.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_abs_ceil_floor_round">Section 
7.2.3 The fn:abs, fn:ceiling, fn:floor, fn:round, and fn:round-half-to-even 
functions</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=div4>
<H5><A id=func-round-examples name=func-round-examples></A>6.4.4.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:round(2.5)</CODE> returns <CODE>3.</CODE></P>
  <LI>
  <P><CODE>fn:round(2.4999)</CODE> returns <CODE>2</CODE>.</P>
  <LI>
  <P><CODE>fn:round(-2.5)</CODE> returns <CODE>-2</CODE> (not the possible 
  alternative, <CODE>-3</CODE>).</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-round-half-to-even name=func-round-half-to-even></A>6.4.5 
fn:round-half-to-even</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:round-half-to-even</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric?</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:round-half-to-even</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>numeric?</CODE>, <CODE class=arg>$precision</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:integer</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>numeric?</CODE></DIV></DIV>
<P>Summary: The value returned is the nearest (that is, numerically closest) 
value to <CODE>$arg</CODE> that is a multiple of ten to the power of minus 
<CODE>$precision</CODE>. If two such values are equally near (e.g. if the 
fractional part in <CODE>$arg</CODE> is exactly .500...), the function returns 
the one whose least significant digit is even.</P>
<P>If the type of <CODE>$arg</CODE> is one of the four numeric types 
<CODE>xs:float</CODE>, <CODE>xs:double</CODE>, <CODE>xs:decimal</CODE> or 
<CODE>xs:integer</CODE> the type of the result is the same as the type of 
<CODE>$arg</CODE>. If the type of <CODE>$arg</CODE> is a type derived from one 
of the numeric types, the result is an instance of the base numeric type.</P>
<P>The first signature of this function produces the same result as the second 
signature with <CODE>$precision=0</CODE>.</P>
<P>For arguments of type <CODE>xs:float</CODE> and <CODE>xs:double</CODE>, if 
the argument is <CODE>NaN</CODE>, positive or negative zero, or positive or 
negative infinity, then the result is the same as the argument. In all other 
cases, the argument is cast to <CODE>xs:decimal</CODE>, the function is applied 
to this <CODE>xs:decimal</CODE> value, and the resulting <CODE>xs:decimal</CODE> 
is cast back to <CODE>xs:float</CODE> or <CODE>xs:double</CODE> as appropriate 
to form the function result. If the resulting <CODE>xs:decimal</CODE> value is 
zero, then positive or negative zero is returned according to the sign of the 
original argument.</P>
<P>Note that the process of casting to <CODE>xs:decimal</CODE> may result in an 
error [<A title=err:FOCA0001 
href="REC-xpath-functions-20070123.htm#ERRFOCA0001">err:FOCA0001</A>].</P>
<P>If <CODE>$arg</CODE> is of type <CODE>xs:float</CODE> or 
<CODE>xs:double</CODE>, rounding occurs on the value of the mantissa computed 
with exponent = 0.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_abs_ceil_floor_round">Section 
7.2.3 The fn:abs, fn:ceiling, fn:floor, fn:round, and fn:round-half-to-even 
functions</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>This function is typically used in financial applications where the argument 
is of type <CODE>xs:decimal</CODE>. For arguments of type <CODE>xs:float</CODE> 
and <CODE>xs:double</CODE> the results may be counterintuitive. For example, 
consider <CODE>round-half-to-even(xs:float(150.0150), 2)</CODE>.</P>
<P>An implementation that supports 18 digits for <CODE>xs:decimal</CODE> will 
convert the argument to the <CODE>xs:decimal</CODE> 150.014999389... which will 
then be rounded to the <CODE>xs:decimal</CODE> 150.01 which will be converted 
back to the <CODE>xs:float</CODE> whose exact value is 150.0099945068... whereas 
<CODE>round-half-to-even(xs:decimal(150.0150), 2)</CODE> will result in the 
<CODE>xs:decimal</CODE> whose exact value is 150.02.</P></DIV>
<DIV class=div4>
<H5><A id=func-round-half-to-even-examples 
name=func-round-half-to-even-examples></A>6.4.5.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:round-half-to-even(0.5)</CODE> returns <CODE>0</CODE>.</P>
  <LI>
  <P><CODE>fn:round-half-to-even(1.5)</CODE> returns <CODE>2</CODE>.</P>
  <LI>
  <P><CODE>fn:round-half-to-even(2.5)</CODE> returns <CODE>2</CODE>.</P>
  <LI>
  <P><CODE>fn:round-half-to-even(3.567812E+3, 2)</CODE> returns 
  <CODE>3567.81E0</CODE>.</P>
  <LI>
  <P><CODE>fn:round-half-to-even(4.7564E-3, 2)</CODE> returns 
  <CODE>0.0E0</CODE>.</P>
  <LI>
  <P><CODE>fn:round-half-to-even(35612.25, -2)</CODE> returns 
  <CODE>35600</CODE>.</P></LI></UL></DIV></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=string-functions name=string-functions></A>7 Functions on Strings</H2>
<P>This section discusses functions and operators on the <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> <CODE>xs:string</CODE> datatype and 
the datatypes derived from it.</P>
<DIV class=div2>
<H3><A id=string-types name=string-types></A>7.1 String Types</H3>
<P>The operators described in this section are defined on the following types. 
Each type whose name is indented is derived from the type whose name appears 
nearest above with one less level of indentation.</P>
<TABLE class=hierarchy summary="Type summary" border=0>
  <TBODY>
  <TR>
    <TD class=castOther vAlign=center align=left>xs:string</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:normalizedString</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:token</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:language</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:NMTOKEN</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:Name</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:NCName</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:ID</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:IDREF</TD></TR>
  <TR>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left></TD>
    <TD class=castOther vAlign=center align=left>xs:ENTITY</TD></TR></TBODY></TABLE>
<P>They also apply to user-defined types derived by restriction from the above 
types.</P>
<P>It is <A class=termref title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> which 
version of <A 
href="REC-xpath-functions-20070123.htm#Unicode4">[The 
Unicode Standard]</A> is supported, but it is recommended that the most recent 
version of Unicode be used.</P>
<P>Unless explicitly stated, the <CODE>xs:string</CODE> values returned by the 
functions in this document are not normalized in the sense of <A 
href="REC-xpath-functions-20070123.htm#charmod">[Character 
Model for the World Wide Web 1.0: Fundamentals]</A>.</P>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>This document uses the term "code point", sometimes spelt "codepoint" (also 
known as "character number" or "code position") to mean a non-negative integer 
that represents a character in some encoding. See <A 
href="REC-xpath-functions-20070123.htm#charmod">[Character 
Model for the World Wide Web 1.0: Fundamentals]</A>. The use of the word 
"character" in this document is in the sense of production [2] of <A 
href="REC-xpath-functions-20070123.htm#REC-xml">[Extensible 
Markup Language (XML) 1.0 Recommendation (Third Edition)]</A>. <A 
href="REC-xpath-functions-20070123.htm#Unicode4">[The 
Unicode Standard]</A>, defines code points that range from #x0000 to #x10FFFF 
inclusive and may include code points that have not yet been assigned to 
characters.</P>
<P>In functions that involve character counting such as <A 
href="REC-xpath-functions-20070123.htm#func-substring"><CODE>fn:substring</CODE></A>, 
<A 
href="REC-xpath-functions-20070123.htm#func-string-length"><CODE>fn:string-length</CODE></A> 
and <A 
href="REC-xpath-functions-20070123.htm#func-translate"><CODE>fn:translate</CODE></A>, 
what is counted is the number of XML characters in the string (or equivalently, 
the number of Unicode code points). Some implementations may represent a code 
point above xFFFF using two 16-bit values known as a surrogate. A surrogate 
counts as one character, not two.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=func-assemble-disassemble-string 
name=func-assemble-disassemble-string></A>7.2 Functions to Assemble and 
Disassemble Strings</H3>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-codepoints-to-string"><CODE>fn:codepoints-to-string</CODE></A></TD>
    <TD>Creates an <CODE>xs:string</CODE> from a sequence of Unicode code 
      points.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-string-to-codepoints"><CODE>fn:string-to-codepoints</CODE></A></TD>
    <TD>Returns the sequence of Unicode code points that constitute an 
      <CODE>xs:string</CODE>.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-codepoints-to-string name=func-codepoints-to-string></A>7.2.1 
fn:codepoints-to-string</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:codepoints-to-string</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:integer*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Creates an <CODE>xs:string</CODE> from a sequence of <A 
href="REC-xpath-functions-20070123.htm#Unicode4">[The 
Unicode Standard]</A> code points. Returns the zero-length string if 
<CODE>$arg</CODE> is the empty sequence. If any of the code points in 
<CODE>$arg</CODE> is not a legal XML character, an error is raised [<A 
title=err:FOCH0001 
href="REC-xpath-functions-20070123.htm#ERRFOCH0001">err:FOCH0001</A>].</P>
<DIV class=div4>
<H5><A id=func-codepoints-to-string-examples 
name=func-codepoints-to-string-examples></A>7.2.1.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:codepoints-to-string((2309, 2358, 2378, 2325))</CODE> returns 
  "अशॊक"</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-string-to-codepoints name=func-string-to-codepoints></A>7.2.2 
fn:string-to-codepoints</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:string-to-codepoints</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer*</CODE></DIV></DIV>
<P>Summary: Returns the sequence of <A 
href="REC-xpath-functions-20070123.htm#Unicode4">[The 
Unicode Standard]</A> code points that constitute an <CODE>xs:string</CODE>. If 
<CODE>$arg</CODE> is a zero-length string or the empty sequence, the empty 
sequence is returned.</P>
<DIV class=div4>
<H5><A id=func-string-to-codepoints-examples 
name=func-string-to-codepoints-examples></A>7.2.2.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:string-to-codepoints("Thérèse")</CODE> returns the sequence (84, 
  104, 233, 114, 232, 115, 101)</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=string-compare name=string-compare></A>7.3 Equality and Comparison of 
Strings</H3>
<DIV class=div3>
<H4><A id=collations name=collations></A>7.3.1 Collations</H4>
<P>A collation is a specification of the manner in which character strings are 
compared and, by extension, ordered. When values whose type is 
<CODE>xs:string</CODE> or a type derived from <CODE>xs:string</CODE> are 
compared (or, equivalently, sorted), the comparisons are inherently performed 
according to some collation (even if that collation is defined entirely on code 
point values). The <A 
href="REC-xpath-functions-20070123.htm#charmod">[Character 
Model for the World Wide Web 1.0: Fundamentals]</A> observes that some 
applications may require different comparison and ordering behaviors than other 
applications. Similarly, some users having particular linguistic expectations 
may require different behaviors than other users. Consequently, the collation 
must be taken into account when comparing strings in any context. Several 
functions in this and the following section make use of a collation.</P>
<P>Collations can indicate that two different code points are, in fact, equal 
for comparison purposes (e.g., "v" and "w" are considered equivalent in 
Swedish). Strings can be compared codepoint-by-codepoint or in a linguistically 
appropriate manner, as defined by the collation.</P>
<P>Some collations, especially those based on the <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A> can be "tailored" for various purposes. This document 
does not discuss such tailoring, nor does it provide a mechanism to perform 
tailoring. Instead, it assumes that the collation argument to the various 
functions below is a tailored and named collation. A specific collation with a 
distinguished name, 
<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>, 
provides the ability to compare strings based on code point values. Every 
implementation of XQuery/XPath must support the collation based on code point 
values.</P>
<P>In the ideal case, a collation should treat two strings as equal if the two 
strings are identical after Unicode normalization. Thus, the <A 
href="REC-xpath-functions-20070123.htm#charmod-normalization">[Character 
Model for the World Wide Web 1.0: Normalization]</A> recommends that all strings 
be subjected to early Unicode normalization and some collations will raise 
runtime errors if they encounter strings that are not properly normalized. 
However, it is not possible to guarantee that all strings in all XML documents 
are, in fact, normalized, or that they are normalized in the same manner. In 
order to maximize interoperability of operations on XML documents in general, 
there may be collations that operate on unnormalized strings and other 
collations that implicitly normalize strings before comparing them. Applications 
may choose the kind of collation best suited for their needs. Note that 
collations based on the Unicode collation algorithm implicitly normalize strings 
before comparison and produce equivalent results regardless of a string's 
normalization.</P>
<P>This specification assumes that collations are named and that the collation 
name may be provided as an argument to string functions. Functions that allow 
specification of a collation do so with an argument whose type is 
<CODE>xs:string</CODE> but whose lexical form must conform to an 
<CODE>xs:anyURI</CODE>. If the collation is specified using a relative URI, it 
is assumed to be relative to the value of the base-uri property in the static 
context. This specification also defines the manner in which a default collation 
is determined if the collation argument is not specified in invocations of 
functions that use a collation but allow it to be omitted.</P>
<P>This specification does not define whether or not the collation URI is 
dereferenced. The collation URI may be an abstract identifier, or it may refer 
to an actual resource describing the collation. If it refers to a resource, this 
specification does not define the nature of that resource. One possible 
candidate is that the resource is a locale description expressed using the 
Locale Data Markup Language: see <A 
href="REC-xpath-functions-20070123.htm#LDML">[Locale Data 
Markup Language]</A>.</P>
<P>Functions such as <A 
href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare</CODE></A> 
and <A 
href="REC-xpath-functions-20070123.htm#func-max"><CODE>fn:max</CODE></A> 
that compare <CODE>xs:string</CODE> values use a single collation URI to 
identify all aspects of the collation rules. This means that any parameters such 
as the strength of the collation must be specified as part of the collation URI. 
For example, suppose there is a collation " 
<CODE>http://www.example.com/collations/French</CODE> " that refers to a French 
collation that compares on the basis of base characters. Collations that use the 
same basic rules, but with higher strengths, for example, base characters and 
accents, or base characters, accents and case, would need to be given different 
names, say " <CODE>http://www.example.com/collations/French1</CODE> " and " 
<CODE>http://www.example.com/collations/French2</CODE> ". Note that some 
specifications use the term collation to refer to an algorithm that can be 
parameterized, but in this specification, each possible parameterization is 
considered to be a distinct collation.</P>
<P>The XQuery/XPath static context includes a provision for a default collation 
that can be used for string comparisons and ordering operations. See the 
description of the static context in <A 
href="http://www.w3.org/TR/xpath20/#static_context">Section 2.1.1 Static 
Context</A><SUP><SMALL>XP</SMALL></SUP>. If the default collation is not 
specified by the user or the system, the default collation is the Unicode code 
point collation 
(<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>).</P>
<P>The decision of which collation to use for a given comparison or ordering 
function is determined by the following algorithm:</P>
<OL class=enumar>
  <LI>
  <P>If the function specifies an explicit collation, CollationA (e.g., if the 
  optional collation argument is specified in an invocation of the <A 
  href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare()</CODE></A> 
  function), then:</P>
  <UL>
    <LI>
    <P>If CollationA is supported by the implementation, then CollationA is 
    used.</P>
    <LI>
    <P>Otherwise, an error is raised [<A title=err:FOCH0002 
    href="REC-xpath-functions-20070123.htm#ERRFOCH0002">err:FOCH0002</A>].</P></LI></UL>
  <LI>
  <P>If no collation is explicitly specified for the function and the default 
  collation in the XQuery/XPath static context is CollationB, then:</P>
  <UL>
    <LI>
    <P>If CollationB is supported by the implementation, then CollationB is 
    used.</P>
    <LI>
    <P>Otherwise, an error is raised [<A title=err:FOCH0002 
    href="REC-xpath-functions-20070123.htm#ERRFOCH0002">err:FOCH0002</A>].</P></LI></UL></LI></OL>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>XML allows elements to specify the <CODE>xml:lang</CODE> attribute to 
indicate the language associated with the content of such an element. This 
specification does not use <CODE>xml:lang</CODE> to identify the default 
collation because using <CODE>xml:lang</CODE> does not produce desired effects 
when the two strings to be compared have different <CODE>xml:lang</CODE> values 
or when a string is multilingual.</P></DIV>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare</CODE></A></TD>
    <TD>Returns -1, 0, or 1, depending on whether the value of the first 
      argument is respectively less than, equal to, or greater than the value of 
      the second argument, according to the rules of the collation that is 
    used.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-codepoint-equal"><CODE>fn:codepoint-equal</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if the two arguments are equal using the 
      Unicode code point collation.</TD>
    <TD></TD></TR></TBODY></TABLE></DIV>
<DIV class=div3>
<H4><A id=func-compare name=func-compare></A>7.3.2 fn:compare</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:compare</CODE>(<CODE 
class=arg>$comparand1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$comparand2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:integer?</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:compare</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$comparand1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$comparand2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:integer?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns -1, 0, or 1, depending on whether the value of the 
<CODE>$comparand1</CODE> is respectively less than, equal to, or greater than 
the value of <CODE>$comparand2</CODE>, according to the rules of the collation 
that is used.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>.</P>
<P>If either argument is the empty sequence, the result is the empty 
sequence.</P>
<P>This function, invoked with the first signature, backs up the "eq", "ne", 
"gt", "lt", "le" and "ge" operators on string values.</P>
<DIV class=div4>
<H5><A id=func-compare-examples name=func-compare-examples></A>7.3.2.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:compare('abc', 'abc')</CODE> returns 0.</P>
  <LI>
  <P><CODE>fn:compare('Strasse', 'Straße')</CODE> returns 0 if and only if the 
  default collation includes provisions that equate "ss" and the (German) 
  character "ß" ("sharp-s"). (Otherwise, the returned value depends on the 
  semantics of the default collation.)</P>
  <LI>
  <P><CODE>fn:compare('Strasse', 'Straße', 'deutsch')</CODE> returns 0 if the 
  collation identified by the relative URI constructed from the 
  <CODE>string</CODE> value "deutsch" includes provisions that equate "ss" and 
  the (German) character "ß" ("sharp-s"). (Otherwise, the returned value depends 
  on the semantics of that collation.)</P>
  <LI>
  <P><CODE>fn:compare('Strassen', 'Straße')</CODE> returns 1 if the default 
  collation includes provisions that treat differences between "ss" and the 
  (German) character "ß" ("sharp-s") with less strength than the differences 
  between the base characters, such as the final "n".</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-codepoint-equal name=func-codepoint-equal></A>7.3.3 
fn:codepoint-equal</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>fn:codepoint-equal</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$comparand1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$comparand2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> or <CODE>false</CODE> depending on whether 
the value of <CODE>$comparand1</CODE> is equal to the value of 
<CODE>$comparand2</CODE>, according to the Unicode code point collation 
(<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>).</P>
<P>If either argument is the empty sequence, the result is the empty 
sequence.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>This function allows <CODE>xs:anyURI</CODE> values to be compared without 
having to specify the Unicode code point collation.</P></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=string-value-functions name=string-value-functions></A>7.4 Functions 
on String Values</H3>
<P>The following functions are defined on values of type <CODE>xs:string</CODE> 
and types derived from it.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A></TD>
    <TD>Concatenates two or more <CODE>xs:anyAtomicType</CODE> arguments cast 
      to <CODE>xs:string</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-string-join"><CODE>fn:string-join</CODE></A></TD>
    <TD>Returns the <CODE>xs:string</CODE> produced by concatenating a 
      sequence of <CODE>xs:string</CODE>s using an optional separator.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-substring"><CODE>fn:substring</CODE></A></TD>
    <TD>Returns the <CODE>xs:string</CODE> located at a specified place within 
      an argument <CODE>xs:string</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-string-length"><CODE>fn:string-length</CODE></A></TD>
    <TD>Returns the length of the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-normalize-space"><CODE>fn:normalize-space</CODE></A></TD>
    <TD>Returns the whitespace-normalized value of the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-normalize-unicode"><CODE>fn:normalize-unicode</CODE></A></TD>
    <TD>Returns the normalized value of the first argument in the 
      normalization form specified by the second argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-upper-case"><CODE>fn:upper-case</CODE></A></TD>
    <TD>Returns the upper-cased value of the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-lower-case"><CODE>fn:lower-case</CODE></A></TD>
    <TD>Returns the lower-cased value of the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-translate"><CODE>fn:translate</CODE></A></TD>
    <TD>Returns the first <CODE>xs:string</CODE> argument with occurrences of 
      characters contained in the second argument replaced by the character at 
      the corresponding position in the third argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-encode-for-uri"><CODE>fn:encode-for-uri</CODE></A></TD>
    <TD>Returns the <CODE>xs:string</CODE> argument with certain characters 
      escaped to enable the resulting string to be used as a path segment in a 
      URI.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-iri-to-uri"><CODE>fn:iri-to-uri</CODE></A></TD>
    <TD>Returns the <CODE>xs:string</CODE> argument with certain characters 
      escaped to enable the resulting string to be used as (part of) a 
URI.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-escape-html-uri"><CODE>fn:escape-html-uri</CODE></A></TD>
    <TD>Returns the <CODE>xs:string</CODE> argument with certain characters 
      escaped in the manner that html user agents handle attribute values that 
      expect URIs.</TD></TR></TBODY></TABLE>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>When the above operators and functions are applied to datatypes derived from 
<CODE>xs:string</CODE>, they are guaranteed to return legal 
<CODE>xs:string</CODE>s, but they might not return a legal value for the 
particular subtype to which they were applied.</P>
<P>The strings returned by <A 
href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A> 
and <A 
href="REC-xpath-functions-20070123.htm#func-string-join"><CODE>fn:string-join</CODE></A> 
are not guaranteed to be normalized. But see note in <A 
href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A>.</P></DIV>
<DIV class=div3>
<H4><A id=func-concat name=func-concat></A>7.4.1 fn:concat</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:concat</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><SPAN class=varargs>...</SPAN></TD>
    <TD vAlign=baseline>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Accepts two or more <CODE>xs:anyAtomicType</CODE> arguments and 
casts them to <CODE>xs:string</CODE>. Returns the <CODE>xs:string</CODE> that is 
the concatenation of the values of its arguments after conversion. If any of the 
arguments is the empty sequence, the argument is treated as the zero-length 
string.</P>
<P>The <CODE>fn:concat</CODE> function is specified to allow an two or more 
arguments that are concatenated together. This is the only function specified in 
this document that allows a variable number of arguments. This capability is 
retained for compatibility with <A 
href="REC-xpath-functions-20070123.htm#xpath">[XML Path 
Language (XPath) Version 1.0]</A>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>As mentioned in <A 
href="REC-xpath-functions-20070123.htm#string-types"><B>7.1 
String Types</B></A> Unicode normalization is not automatically applied to the 
result of <CODE>fn:concat</CODE>. If a normalized result is required, <A 
href="REC-xpath-functions-20070123.htm#func-normalize-unicode"><CODE>fn:normalize-unicode</CODE></A> 
can be applied to the <CODE>xs:string</CODE> returned by <CODE>fn:concat</CODE>. 
The following XQuery:</P>
<DIV class=exampleInner><PRE>let $v1 := "I plan to go to Mu"
let $v2 := "?nchen in September"
return concat($v1, $v2)
</PRE></DIV>
<P>where the "?" represents either the actual Unicode character COMBINING 
DIARESIS (Unicode codepoint U+0308) or "&amp;#x0308;", will return:</P>
<P>"I plan to go to Mu?nchen in September"</P>
<P>where the "?" represents either the actual Unicode character COMBINING 
DIARESIS (Unicode codepoint U+0308) or "&amp;#x0308;". It is worth noting that 
the returned value is not normalized in NFC; however, it is normalized in NFD. 
.</P>
<P>However, the following XQuery:</P>
<DIV class=exampleInner><PRE>let $v1 := "I plan to go to Mu"
let $v2 := "?nchen in September"
return normalize-unicode(concat($v1, $v2))
</PRE></DIV>
<P>where the "?" represents either the actual Unicode character COMBINING 
DIARESIS (Unicode codepoint U+0308) or "&amp;#x0308;", will return:</P>
<P>"I plan to go to München in September"</P>
<P>This returned result is normalized in NFC.</P></DIV>
<DIV class=div4>
<H5><A id=func-concat-examples name=func-concat-examples></A>7.4.1.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:concat('un', 'grateful')</CODE> returns " <CODE>ungrateful</CODE> 
  ".</P>
  <LI>
  <P><CODE>fn:concat('Thy ', (), 'old ', "groans", "", ' ring', ' yet', ' in', ' 
  my', ' ancient',' ears.')</CODE> returns " <CODE>Thy old groans ring yet in my 
  ancient ears.</CODE> ".</P>
  <LI>
  <P><CODE>fn:concat('Ciao!',())</CODE> returns " <CODE>Ciao!</CODE> ".</P>
  <LI>
  <P><CODE>fn:concat('Ingratitude, ', 'thou ', 'marble-hearted', ' 
  fiend!')</CODE> returns " <CODE>Ingratitude, thou marble-hearted fiend!</CODE> 
  ".</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-string-join name=func-string-join></A>7.4.2 fn:string-join</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:string-join</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string*</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns a <CODE>xs:string</CODE> created by concatenating the 
members of the <CODE>$arg1</CODE> sequence using <CODE>$arg2</CODE> as a 
separator. If the value of <CODE>$arg2</CODE> is the zero-length string, then 
the members of <CODE>$arg1</CODE> are concatenated without a separator.</P>
<P>If the value of <CODE>$arg1</CODE> is the empty sequence, the zero-length 
string is returned.</P>
<DIV class=div4>
<H5><A id=func-string-join-examples name=func-string-join-examples></A>7.4.2.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:string-join(('Now', 'is', 'the', 'time', '...'), ' ')</CODE> 
  returns " <CODE>Now is the time ...</CODE> ".</P>
  <LI>
  <P><CODE>fn:string-join(('Blow, ', 'blow, ', 'thou ', 'winter ', 'wind!'), 
  '')</CODE> returns " <CODE>Blow, blow, thou winter wind!</CODE> ".</P>
  <LI>
  <P><CODE>fn:string-join((), 'separator')</CODE> returns "".</P>
  <LI>
  <P>Assume a document:</P>
  <DIV class=exampleInner><PRE>&lt;doc&gt;
  &lt;chap&gt;
    &lt;section&gt;
    &lt;/section&gt;
  &lt;/chap&gt;
&lt;/doc&gt;
</PRE></DIV>
  <P>with the <CODE>&lt;section&gt;</CODE> as the context node, the <A 
  href="REC-xpath-functions-20070123.htm#xpath20">[XML 
  Path Language (XPath) 2.0]</A> expression:</P>
  <P><CODE>fn:string-join(for $n in ancestor-or-self::* return name($n), 
  '/')</CODE></P>
  <P>returns " <CODE>doc/chap/section</CODE> "</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-substring name=func-substring></A>7.4.3 fn:substring</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE class=function>fn:substring</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$sourceString</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$startingLoc</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:substring</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$sourceString</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$startingLoc</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$length</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the portion of the value of <CODE>$sourceString</CODE> 
beginning at the position indicated by the value of <CODE>$startingLoc</CODE> 
and continuing for the number of characters indicated by the value of 
<CODE>$length</CODE>. The characters returned do not extend beyond 
<CODE>$sourceString</CODE>. If <CODE>$startingLoc</CODE> is zero or negative, 
only those characters in positions greater than zero are returned.</P>
<P>More specifically, the three argument version of the function returns the 
characters in <CODE>$sourceString</CODE> whose position <CODE>$p</CODE> 
obeys:</P>
<P><A 
href="REC-xpath-functions-20070123.htm#func-round"><CODE>fn:round($startingLoc) 
&lt;= $p &lt; fn:round($startingLoc) + fn:round($length)</CODE></A></P>
<P>The two argument version of the function assumes that <CODE>$length</CODE> is 
infinite and returns the characters in <CODE>$sourceString</CODE> whose position 
<CODE>$p</CODE> obeys:</P>
<P><A 
href="REC-xpath-functions-20070123.htm#func-round"><CODE>fn:round($startingLoc) 
&lt;= $p &lt; fn:round(INF)</CODE></A></P>
<P>In the above computations, the rules for <A 
href="REC-xpath-functions-20070123.htm#func-numeric-less-than"><CODE>op:numeric-less-than()</CODE></A> 
and <A 
href="REC-xpath-functions-20070123.htm#func-numeric-greater-than"><CODE>op:numeric-greater-than()</CODE></A> 
apply.</P>
<P>If the value of <CODE>$sourceString</CODE> is the empty sequence, the 
zero-length string is returned.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The first character of a string is located at position 1, not position 
0.</P></DIV>
<DIV class=div4>
<H5><A id=func-substring-examples name=func-substring-examples></A>7.4.3.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:substring("motor car", 6)</CODE> returns <CODE>" car"</CODE>.</P>
  <P>Characters starting at position 6 to the end of <CODE>$sourceString</CODE> 
  are selected.</P>
  <LI>
  <P><CODE>fn:substring("metadata", 4, 3)</CODE> returns <CODE>"ada"</CODE>.</P>
  <P>Characters at positions greater than or equal to 4 and less than 7 are 
  selected.</P>
  <LI>
  <P><CODE>fn:substring("12345", 1.5, 2.6)</CODE> returns 
<CODE>"234"</CODE>.</P>
  <P>Characters at positions greater than or equal to 2 and less than 5 are 
  selected.</P>
  <LI>
  <P><CODE>fn:substring("12345", 0, 3)</CODE> returns <CODE>"12"</CODE>.</P>
  <P>Characters at positions greater than or equal to 0 and less than 3 are 
  selected. Since the first position is 1, these are the characters at positions 
  1 and 2.</P>
  <LI>
  <P><CODE>fn:substring("12345", 5, -3)</CODE> returns <CODE>""</CODE>.</P>
  <P>Characters at positions greater than or equal to 5 and less than 2 are 
  selected.</P>
  <LI>
  <P><CODE>fn:substring("12345", -3, 5)</CODE> returns <CODE>"1"</CODE>.</P>
  <P>Characters at positions greater than or equal to -3 and less than 2 are 
  selected. Since the first position is 1, this is the character at position 
  1.</P>
  <LI>
  <P><CODE>fn:substring("12345", 0 div 0E0, 3)</CODE> returns 
  <CODE>""</CODE>.</P>
  <P>Since <CODE>0 div 0E0</CODE> returns <CODE>NaN</CODE>, and <CODE>NaN</CODE> 
  compared to any other number returns <CODE>false</CODE>, no characters are 
  selected.</P>
  <LI>
  <P><CODE>fn:substring("12345", 1, 0 div 0E0)</CODE> returns 
  <CODE>""</CODE>.</P>
  <P>As above.</P>
  <LI>
  <P><CODE>fn:substring((), 1, 3)</CODE> returns <CODE>""</CODE>.</P>
  <LI>
  <P><CODE>fn:substring("12345", -42, 1 div 0E0)</CODE> returns 
  <CODE>"12345"</CODE>.</P>
  <P>Characters at positions greater than or equal to -42 and less than INF are 
  selected.</P>
  <LI>
  <P><CODE>fn:substring("12345", -1 div 0E0, 1 div 0E0)</CODE> returns 
  <CODE>""</CODE>.</P>
  <P>Since <CODE>-INF + INF</CODE> returns <CODE>NaN</CODE>, no characters are 
  selected.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-string-length name=func-string-length></A>7.4.4 
fn:string-length</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:string-length</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:string-length</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> equal to the length in characters 
of the value of <CODE>$arg</CODE>.</P>
<P>If the value of <CODE>$arg</CODE> is the empty sequence, the 
<CODE>xs:integer</CODE> 0 is returned.</P>
<P>If no argument is supplied, <CODE>$arg</CODE> defaults to the string value 
(calculated using <A 
href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string()</CODE></A>) 
of the context item (<CODE>.</CODE>). If no argument is supplied or if the 
argument is the context item and the context item is undefined an error is 
raised: [<A title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<DIV class=div4>
<H5><A id=func-string-length-examples 
name=func-string-length-examples></A>7.4.4.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:string-length("Harp not on that string, madam; that is 
  past.")</CODE> returns <CODE>45</CODE>.</P>
  <LI>
  <P><CODE>fn:string-length(())</CODE> returns 
<CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-normalize-space name=func-normalize-space></A>7.4.5 
fn:normalize-space</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:normalize-space</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:normalize-space</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns the value of <CODE>$arg</CODE> with whitespace normalized by 
stripping leading and trailing whitespace and replacing sequences of one or more 
than one whitespace character with a single space, <CODE>#x20</CODE>.</P>
<P>The whitespace characters are defined in the metasymbol S (Production 3) of 
<A 
href="REC-xpath-functions-20070123.htm#REC-xml">[Extensible 
Markup Language (XML) 1.0 Recommendation (Third Edition)]</A>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The definition of the metasymbol S (Production 3), is unchanged in <A 
href="REC-xpath-functions-20070123.htm#xml11">[Extensible 
Markup Language (XML) 1.1 Recommendation]</A>.</P></DIV>
<P>If the value of <CODE>$arg</CODE> is the empty sequence, returns the 
zero-length string.</P>
<P>If no argument is supplied, <CODE>$arg</CODE> defaults to the string value 
(calculated using <A 
href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string()</CODE></A>) 
of the context item (<CODE>.</CODE>). If no argument is supplied or if the 
argument is the context item and the context item is undefined an error is 
raised: [<A title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<DIV class=div4>
<H5><A id=func-normalize-space-examples 
name=func-normalize-space-examples></A>7.4.5.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:normalize-space(" The &nbsp;wealthy curled darlings of 
  &nbsp;&nbsp;our &nbsp;nation. ")</CODE> returns " <CODE>The wealthy curled 
  darlings of our nation.</CODE> ".</P>
  <LI>
  <P><CODE>fn:normalize-space(())</CODE> returns "".</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-normalize-unicode name=func-normalize-unicode></A>7.4.6 
fn:normalize-unicode</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:normalize-unicode</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>fn:normalize-unicode</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$normalizationForm</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the value of <CODE>$arg</CODE> normalized according to the 
normalization criteria for a normalization form identified by the value of 
<CODE>$normalizationForm</CODE>. The effective value of the 
<CODE>$normalizationForm</CODE> is computed by removing leading and trailing 
blanks, if present, and converting to upper case.</P>
<P>If the value of <CODE>$arg</CODE> is the empty sequence, returns the 
zero-length string.</P>
<P>See <A 
href="REC-xpath-functions-20070123.htm#charmod-normalization">[Character 
Model for the World Wide Web 1.0: Normalization]</A> for a description of the 
normalization forms.</P>
<P>If the <CODE>$normalizationForm</CODE> is absent, as in the first format 
above, it shall be assumed to be "NFC"</P>
<UL>
  <LI>
  <P>If the effective value of <CODE>$normalizationForm</CODE> is "NFC", then 
  the value returned by the function is the value of <CODE>$arg</CODE> in 
  Unicode Normalization Form C (NFC).</P>
  <LI>
  <P>If the effective value of <CODE>$normalizationForm</CODE> is "NFD", then 
  the value returned by the function is the value of <CODE>$arg</CODE> in 
  Unicode Normalization Form D (NFD).</P>
  <LI>
  <P>If the effective value of <CODE>$normalizationForm</CODE> is "NFKC", then 
  the value returned by the function is the value of <CODE>$arg</CODE> in 
  Unicode Normalization Form KC (NFKC).</P>
  <LI>
  <P>If the effective value of <CODE>$normalizationForm</CODE> is "NFKD", then 
  the value returned by the function is the value of <CODE>$arg</CODE> in 
  Unicode Normalization Form KD (NFKD).</P>
  <LI>
  <P>If the effective value of <CODE>$normalizationForm</CODE> is 
  "FULLY-NORMALIZED", then the value returned by the function is the value of 
  <CODE>$arg</CODE> in the fully normalized form.</P>
  <LI>
  <P>If the effective value of <CODE>$normalizationForm</CODE> is the 
  zero-length string, no normalization is performed and <CODE>$arg</CODE> is 
  returned.</P></LI></UL>
<P>Conforming implementations <A class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> support normalization 
form "NFC" and <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> support normalization 
forms "NFD", "NFKC", "NFKD", "FULLY-NORMALIZED". They <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> also support other 
normalization forms with <A class=termref title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
semantics. If the effective value of the <CODE>$normalizationForm</CODE> is 
other than one of the values supported by the implementation, then an error is 
raised [<A title=err:FOCH0003 
href="REC-xpath-functions-20070123.htm#ERRFOCH0003">err:FOCH0003</A>].</P></DIV>
<DIV class=div3>
<H4><A id=func-upper-case name=func-upper-case></A>7.4.7 fn:upper-case</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:upper-case</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns the value of <CODE>$arg</CODE> after translating every 
character to its upper-case correspondent as defined in the appropriate case 
mappings section in the Unicode standard <A 
href="REC-xpath-functions-20070123.htm#Unicode4">[The 
Unicode Standard]</A>. For versions of Unicode beginning with the 2.1.8 update, 
only locale-insensitive case mappings should be applied. Beginning with version 
3.2.0 (and likely future versions) of Unicode, precise mappings are described in 
default case operations, which are full case mappings in the absence of 
tailoring for particular languages and environments. Every lower-case character 
that does not have an upper-case correspondent, as well as every upper-case 
character, is included in the returned value in its original form.</P>
<P>If the value of <CODE>$arg</CODE> is the empty sequence, the zero-length 
string is returned.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>Case mappings may change the length of a string. In general, the two 
functions are not inverses of each other <A 
href="REC-xpath-functions-20070123.htm#func-lower-case"><CODE>fn:lower-case(fn:upper-case($arg))</CODE></A> 
is not guaranteed to return <CODE>$arg</CODE>, nor is 
<CODE>fn:upper-case(fn:lower-case($arg))</CODE>. The Latin small letter dotless 
i (as used in Turkish) is perhaps the most prominent lower-case letter which 
will not round-trip. The Latin capital letter i with dot above is the most 
prominent upper-case letter which will not round trip; there are others.</P>
<P>These functions may not always be linguistically appropriate (e.g. Turkish i 
without dot) or appropriate for the application (e.g. titlecase). In cases such 
as Turkish, a simple translation should be used first.</P>
<P>Results may violate user expectations (in Quebec, for example, the standard 
uppercase equivalent of "è" is "È", while in metropolitan France it is more 
commonly "E"; only one of these is supported by the functions as defined).</P>
<P>Many characters of class Ll lack uppercase equivalents in the Unicode case 
mapping tables; many characters of class Lu lack lowercase 
equivalents.</P></DIV>
<DIV class=div4>
<H5><A id=func-upper-case-examples name=func-upper-case-examples></A>7.4.7.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:upper-case("abCd0")</CODE> returns 
<CODE>"ABCD0"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-lower-case name=func-lower-case></A>7.4.8 fn:lower-case</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:lower-case</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns the value of <CODE>$arg</CODE> after translating every 
character to its lower-case correspondent as defined in the appropriate case 
mappings section in the Unicode standard <A 
href="REC-xpath-functions-20070123.htm#Unicode4">[The 
Unicode Standard]</A>. For versions of Unicode beginning with the 2.1.8 update, 
only locale-insensitive case mappings should be applied. Beginning with version 
3.2.0 (and likely future versions) of Unicode, precise mappings are described in 
default case operations, which are full case mappings in the absence of 
tailoring for particular languages and environments. Every upper-case character 
that does not have a lower-case correspondent, as well as every lower-case 
character, is included in the returned value in its original form.</P>
<P>If the value of <CODE>$arg</CODE> is the empty sequence, the zero-length 
string is returned.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>Case mappings may change the length of a string. In general, the two 
functions are not inverses of each other 
<CODE>fn:lower-case(fn:upper-case($arg))</CODE> is not guaranteed to return 
<CODE>$arg</CODE>, nor is <A 
href="REC-xpath-functions-20070123.htm#func-upper-case"><CODE>fn:upper-case(fn:lower-case($arg))</CODE></A>. 
The Latin small letter dotless i (as used in Turkish) is perhaps the most 
prominent lower-case letter which will not round-trip. The Latin capital letter 
i with dot above is the most prominent upper-case letter which will not round 
trip; there are others.</P>
<P>These functions may not always be linguistically appropriate (e.g. Turkish i 
without dot) or appropriate for the application (e.g. titlecase). In cases such 
as Turkish, a simple translation should be used first.</P>
<P>Results may violate user expectations (in Quebec, for example, the standard 
uppercase equivalent of "è" is "È", while in metropolitan France it is more 
commonly "E"; only one of these is supported by the functions as defined).</P>
<P>Many characters of class Ll lack uppercase equivalents in the Unicode case 
mapping tables; many characters of class Lu lack lowercase 
equivalents.</P></DIV>
<DIV class=div4>
<H5><A id=func-lower-case-examples name=func-lower-case-examples></A>7.4.8.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:lower-case("ABc!D")</CODE> returns 
<CODE>"abc!d"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-translate name=func-translate></A>7.4.9 fn:translate</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:translate</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$mapString</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$transString</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the value of <CODE>$arg</CODE> modified so that every 
character in the value of <CODE>$arg</CODE> that occurs at some position 
<EM>N</EM> in the value of <CODE>$mapString</CODE> has been replaced by the 
character that occurs at position <EM>N</EM> in the value of 
<CODE>$transString</CODE>.</P>
<P>If the value of <CODE>$arg</CODE> is the empty sequence, the zero-length 
string is returned.</P>
<P>Every character in the value of <CODE>$arg</CODE> that does not appear in the 
value of <CODE>$mapString</CODE> is unchanged.</P>
<P>Every character in the value of <CODE>$arg</CODE> that appears at some 
position <EM>M</EM> in the value of <CODE>$mapString</CODE>, where the value of 
<CODE>$transString</CODE> is less than <EM>M</EM> characters in length, is 
omitted from the returned value. If <CODE>$mapString</CODE> is the zero-length 
string <CODE>$arg</CODE> is returned.</P>
<P>If a character occurs more than once in <CODE>$mapString</CODE>, then the 
first occurrence determines the replacement character. If 
<CODE>$transString</CODE> is longer than <CODE>$mapString</CODE>, the excess 
characters are ignored.</P>
<DIV class=div4>
<H5><A id=func-translate-examples name=func-translate-examples></A>7.4.9.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:translate("bar","abc","ABC")</CODE> returns <CODE>"BAr"</CODE></P>
  <LI>
  <P><CODE>fn:translate("--aaa--","abc-","ABC")</CODE> returns 
  <CODE>"AAA"</CODE>.</P>
  <LI>
  <P><CODE>fn:translate("abcdabc", "abc", "AB")</CODE> returns 
  <CODE>"ABdAB"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-encode-for-uri name=func-encode-for-uri></A>7.4.10 
fn:encode-for-uri</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:encode-for-uri</CODE>(<CODE 
class=arg>$uri-part</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: This function encodes reserved characters in an 
<CODE>xs:string</CODE> that is intended to be used in the path segment of a URI. 
It is invertible but not idempotent. This function applies the URI escaping 
rules defined in section 2 of <A 
href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
3986]</A> to the <CODE>xs:string</CODE> supplied as <CODE>$uri-part</CODE>. The 
effect of the function is to escape reserved characters. Each such character in 
the string is replaced with its percent-encoded form as described in <A 
href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
3986]</A>.</P>
<P>If <CODE>$uri-part</CODE> is the empty sequence, returns the zero-length 
string.</P>
<P>All characters are escaped except those identified as "unreserved" by <A 
href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
3986]</A>, that is the upper- and lower-case letters A-Z, the digits 0-9, 
HYPHEN-MINUS ("-"), LOW LINE ("_"), FULL STOP ".", and TILDE "~".</P>
<P>Note that this function escapes URI delimiters and therefore cannot be used 
indiscriminately to encode "invalid" characters in a path segment.</P>
<P>Since <A 
href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
3986]</A> recommends that, for consistency, URI producers and normalizers should 
use uppercase hexadecimal digits for all percent-encodings, this function must 
always generate hexadecimal values using the upper-case letters A-F.</P>
<DIV class=div4>
<H5><A id=func-encode-for-uri-examples 
name=func-encode-for-uri-examples></A>7.4.10.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:encode-for-uri("http://www.example.com/00/Weather/CA/Los%20Angeles#ocean")</CODE> 
  returns 
  <CODE>"http%3A%2F%2Fwww.example.com%2F00%2FWeather%2FCA%2FLos%2520Angeles%23ocean"</CODE>. 
  This is probably not what the user intended because all of the delimiters have 
  been encoded.</P>
  <LI>
  <P><CODE>concat("http://www.example.com/", encode-for-uri("~bébé"))</CODE> 
  returns <CODE>"http://www.example.com/~b%C3%A9b%C3%A9"</CODE>.</P>
  <LI>
  <P><CODE>concat("http://www.example.com/", encode-for-uri("100% 
  organic"))</CODE> returns 
  <CODE>"http://www.example.com/100%25%20organic"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-iri-to-uri name=func-iri-to-uri></A>7.4.11 fn:iri-to-uri</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:iri-to-uri</CODE>(<CODE 
class=arg>$iri</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: This function converts an <CODE>xs:string</CODE> containing an IRI 
into a URI according to the rules spelled out in Section 3.1 of <A 
href="REC-xpath-functions-20070123.htm#rfc3987">[RFC 
3987]</A>. It is idempotent but not invertible.</P>
<P>If <CODE>$iri</CODE> contains a character that is invalid in an IRI, such as 
the space character (see note below), the invalid character is replaced by its 
percent-encoded form as described in <A 
href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
3986]</A> before the conversion is performed.</P>
<P>If <CODE>$iri</CODE> is the empty sequence, returns the zero-length 
string.</P>
<P>Since <A 
href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
3986]</A> recommends that, for consistency, URI producers and normalizers should 
use uppercase hexadecimal digits for all percent-encodings, this function must 
always generate hexadecimal values using the upper-case letters A-F.</P>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>This function does not check whether <CODE>$iri</CODE> is a legal IRI. It 
treats it as an <CODE>xs:string</CODE> and operates on the characters in the 
<CODE>xs:string</CODE>.</P>
<P>The following printable ASCII characters are invalid in an IRI: "&lt;", 
"&gt;", " " " (double quote), space, "{", "}", "|", "\", "^", and "`". Since 
these characters should not appear in an IRI, if they do appear in 
<CODE>$iri</CODE> they will be percent-encoded. In addition, characters outside 
the range x20-x126 will be percent-encoded because they are invalid in a 
URI.</P>
<P>Since this function does not escape the PERCENT SIGN "%" and this character 
is not allowed in data within a URI, users wishing to convert character strings, 
such as file names, that include "%" to a URI should manually escape "%" by 
replacing it with "%25".</P></DIV>
<DIV class=div4>
<H5><A id=func-iri-to-uri-examples name=func-iri-to-uri-examples></A>7.4.11.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:iri-to-uri 
  ("http://www.example.com/00/Weather/CA/Los%20Angeles#ocean")</CODE> returns 
  <CODE>"http://www.example.com/00/Weather/CA/Los%20Angeles#ocean"</CODE>.</P>
  <LI>
  <P><CODE>fn:iri-to-uri ("http://www.example.com/~bébé")</CODE> returns 
  <CODE>"http://www.example.com/~b%C3%A9b%C3%A9"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-escape-html-uri name=func-escape-html-uri></A>7.4.12 
fn:escape-html-uri</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:escape-html-uri</CODE>(<CODE 
class=arg>$uri</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: This function escapes all characters except printable characters of 
the US-ASCII coded character set, specifically the octets ranging from 32 to 126 
(decimal). The effect of the function is to escape a URI in the manner html user 
agents handle attribute values that expect URIs. Each character in 
<CODE>$uri</CODE> to be escaped is replaced by an escape sequence, which is 
formed by encoding the character as a sequence of octets in UTF-8, and then 
representing each of these octets in the form %HH, where HH is the hexadecimal 
representation of the octet. This function must always generate hexadecimal 
values using the upper-case letters A-F.</P>
<P>If <CODE>$uri</CODE> is the empty sequence, returns the zero-length 
string.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The behavior of this function corresponds to the recommended handling of 
non-ASCII characters in URI attribute values as described in <A 
href="REC-xpath-functions-20070123.htm#HTML40">[HTML 
4.0]</A> Appendix B.2.1.</P></DIV>
<DIV class=div4>
<H5><A id=func-escape-html-uri-examples 
name=func-escape-html-uri-examples></A>7.4.12.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:escape-html-uri ("http://www.example.com/00/Weather/CA/Los 
  Angeles#ocean")</CODE> returns <CODE>"http://www.example.com/00/Weather/CA/Los 
  Angeles#ocean"</CODE>.</P>
  <LI>
  <P><CODE>fn:escape-html-uri ("javascript:if (navigator.browserLanguage == 
  'fr') window.open('http://www.example.com/~bébé');") returns "javascript:if 
  (navigator.browserLanguage == 'fr') 
  window.open('http://www.example.com/~b%C3%A9b%C3%A9');"</CODE>.</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=substring.functions name=substring.functions></A>7.5 Functions Based 
on Substring Matching</H3>
<P>The functions described in the section examine a string <CODE>$arg1</CODE> to 
see whether it contains another string <CODE>$arg2</CODE> as a substring. The 
result depends on whether <CODE>$arg2</CODE> is a substring of 
<CODE>$arg1</CODE>, and if so, on the range of characters in <CODE>$arg1</CODE> 
which <CODE>$arg2</CODE> matches.</P>
<P>When the Unicode code point collation is used, this simply involves 
determining whether <CODE>$arg1</CODE> contains a contiguous sequence of 
characters whose code points are the same, one for one, with the code points of 
the characters in <CODE>$arg2</CODE>.</P>
<P>When a collation is specified, the rules are more complex.</P>
<P>All collations support the capability of deciding whether two strings are 
considered equal, and if not, which of the strings should be regarded as 
preceding the other. For functions such as <A 
href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare()</CODE></A>, 
this is all that is required. For other functions, such as <A 
href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains()</CODE></A>, 
the collation needs to support an additional property: it must be able to 
decompose the string into a sequence of collation units, each unit consisting of 
one or more characters, such that two strings can be compared by pairwise 
comparison of these units. ("collation unit" is equivalent to "collation 
element" as defined in <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.) The string <CODE>$arg1</CODE> is then considered to 
contain <CODE>$arg2</CODE> as a substring if the sequence of collation units 
corresponding to <CODE>$arg2</CODE> is a subsequence of the sequence of the 
collation units corresponding to <CODE>$arg1</CODE>. The characters in 
<CODE>$arg1</CODE> that match are the characters corresponding to these 
collation units.</P>
<P>This rule may occasionally lead to surprises. For example, consider a 
collation that treats "Jaeger" and "Jäger" as equal. It might do this by 
treating "ä" as representing two collation units, in which case the expression 
<A 
href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains("Jäger", 
"eg")</CODE></A> will return <CODE>true</CODE>. Alternatively, a collation might 
treat "ae" as a single collation unit, in which case the expression <A 
href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains("Jaeger", 
"eg")</CODE></A> will return <CODE>false</CODE>. The results of these functions 
thus depend strongly on the properties of the collation that is used. In 
addition, collations may specify that some collation units should be ignored 
during matching.</P>
<P>In the definitions below, we say that <CODE>$arg1</CODE> contains 
<CODE>$arg2</CODE> at positions <CODE>m</CODE> through <CODE>n</CODE> if the 
collation units corresponding to characters in positions <CODE>m</CODE> to 
<CODE>n</CODE> of <CODE>$arg1</CODE> are the same as the collation units 
corresponding to all the characters of <CODE>$arg2</CODE> modulo ignorable 
collation units. In the simple case of the Unicode code point collation, the 
collation units are the same as the characters of the string. See <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A> for a detailed discussion of substring matching.</P>
<P>It is possible to define collations that do not have the ability to decompose 
a string into units suitable for substring matching. An argument to a function 
defined in this section may be a URI that identifies a collation that is able to 
compare two strings, but that does not have the capability to split the string 
into collation units. Such a collation may cause the function to fail, or to 
give unexpected results or it may be rejected as an unsuitable argument. The 
ability to decompose strings into collation units is an <A class=termref 
title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
property of the collation.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains</CODE></A></TD>
    <TD>Indicates whether one <CODE>xs:string</CODE> contains another 
      <CODE>xs:string</CODE>. A collation may be specified.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-starts-with"><CODE>fn:starts-with</CODE></A></TD>
    <TD>Indicates whether the value of one <CODE>xs:string</CODE> begins with 
      the collation units of another <CODE>xs:string</CODE>. A collation may be 
      specified.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-ends-with"><CODE>fn:ends-with</CODE></A></TD>
    <TD>Indicates whether the value of one <CODE>xs:string</CODE> ends with 
      the collation units of another <CODE>xs:string</CODE>. A collation may be 
      specified.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-substring-before"><CODE>fn:substring-before</CODE></A></TD>
    <TD>Returns the collation units of one <CODE>xs:string</CODE> that precede 
      in that <CODE>xs:string</CODE> the collation units of another 
      <CODE>xs:string</CODE>. A collation may be specified.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-substring-after"><CODE>fn:substring-after</CODE></A></TD>
    <TD>Returns the collation units of <CODE>xs:string</CODE> that follow in 
      that <CODE>xs:string</CODE> the collation units of another 
      <CODE>xs:string</CODE>. A collation may be specified.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-contains name=func-contains></A>7.5.1 fn:contains</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:contains</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:boolean</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:contains</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:boolean</CODE> indicating whether or not the 
value of <CODE>$arg1</CODE> contains (at the beginning, at the end, or anywhere 
within) at least one sequence of collation units that provides a minimal match 
to the collation units in the value of <CODE>$arg2</CODE>, according to the 
collation that is used.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Minimal match" is defined in <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<P>If the value of <CODE>$arg1</CODE> or <CODE>$arg2</CODE> is the empty 
sequence, or contains only ignorable collation units, it is interpreted as the 
zero-length string.</P>
<P>If the value of <CODE>$arg2</CODE> is the zero-length string, then the 
function returns <CODE>true</CODE>.</P>
<P>If the value of <CODE>$arg1</CODE> is the zero-length string, the function 
returns <CODE>false</CODE>.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>. If the specified collation does not support collation units 
an error <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> be raised [<A 
title=err:FOCH0004 
href="REC-xpath-functions-20070123.htm#ERRFOCH0004">err:FOCH0004</A>].</P>
<DIV class=div4>
<H5><A id=func-contains-examples name=func-contains-examples></A>7.5.1.1 
Examples</H5>
<P>CollationA used in these examples is a collation in which both "-" and "*" 
are ignorable collation units.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Ignorable collation unit" is equivalent to "ignorable collation element" in 
<A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<UL>
  <LI>
  <P><CODE>fn:contains ( "tattoo", "t")</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:contains ( "tattoo", "ttt")</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>fn:contains ( "", ())</CODE> returns <CODE>true</CODE>. The first 
  rule is applied, followed by the second rule.</P>
  <LI>
  <P><CODE>fn:contains ( "abcdefghi", "-d-e-f-", "CollationA")</CODE> returns 
  <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:contains ( "a*b*c*d*e*f*g*h*i*", "d-ef-", "CollationA")</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:contains ( "abcd***e---f*--*ghi", "def", "CollationA")</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:contains ( (), "--***-*---", "CollationA")</CODE> returns 
  <CODE>true</CODE>. The second argument contains only ignorable collation units 
  and is equivalent to the zero-length string.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-starts-with name=func-starts-with></A>7.5.2 fn:starts-with</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:starts-with</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:boolean</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE 
    class=function>fn:starts-with</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:boolean</CODE> indicating whether or not the 
value of <CODE>$arg1</CODE> starts with a sequence of collation units that 
provides a minimal match to the collation units of <CODE>$arg2</CODE> according 
to the collation that is used.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Minimal match" is defined in <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<P>If the value of <CODE>$arg1</CODE> or <CODE>$arg2</CODE> is the empty 
sequence, or contains only ignorable collation units, it is interpreted as the 
zero-length string.</P>
<P>If the value of <CODE>$arg2</CODE> is the zero-length string, then the 
function returns <CODE>true</CODE>. If the value of <CODE>$arg1</CODE> is the 
zero-length string and the value of <CODE>$arg2</CODE> is not the zero-length 
string, then the function returns <CODE>false</CODE>.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>. If the specified collation does not support collation units 
an error <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> be raised [<A 
title=err:FOCH0004 
href="REC-xpath-functions-20070123.htm#ERRFOCH0004">err:FOCH0004</A>].</P>
<DIV class=div4>
<H5><A id=func-starts-with-examples name=func-starts-with-examples></A>7.5.2.1 
Examples</H5>
<P>CollationA used in these examples is a collation in which both "-" and "*" 
are ignorable collation units.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Ignorable collation unit" is equivalent to "ignorable collation element" in 
<A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<UL>
  <LI>
  <P><CODE>fn:starts-with("tattoo", "tat")</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:starts-with ( "tattoo", "att")</CODE> returns 
  <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>fn:starts-with ((), ())</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:starts-with ( "abcdefghi", "-a-b-c-", "CollationA")</CODE> returns 
  <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:starts-with ( "a*b*c*d*e*f*g*h*i*", "a-bc-", "CollationA")</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:starts-with ( "abcd***e---f*--*ghi", "abcdef", 
  "CollationA")</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:starts-with ( (), "--***-*---", "CollationA")</CODE> returns 
  <CODE>true</CODE>. The second argument contains only ignorable collation units 
  and is equivalent to the zero-length string.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-ends-with name=func-ends-with></A>7.5.3 fn:ends-with</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:ends-with</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:boolean</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:ends-with</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:boolean</CODE> indicating whether or not the 
value of <CODE>$arg1</CODE> ends with a sequence of collation units that 
provides a minimal match to the collation units of <CODE>$arg2</CODE> according 
to the collation that is used.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Minimal match" is defined in <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<P>If the value of <CODE>$arg1</CODE> or <CODE>$arg2</CODE> is the empty 
sequence, or contains only ignorable collation units, it is interpreted as the 
zero-length string.</P>
<P>If the value of <CODE>$arg2</CODE> is the zero-length string, then the 
function returns <CODE>true</CODE>. If the value of <CODE>$arg1</CODE> is the 
zero-length string and the value of <CODE>$arg2</CODE> is not the zero-length 
string, then the function returns <CODE>false</CODE>.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>. If the specified collation does not support collation units 
an error <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> be raised [<A 
title=err:FOCH0004 
href="REC-xpath-functions-20070123.htm#ERRFOCH0004">err:FOCH0004</A>].</P>
<DIV class=div4>
<H5><A id=func-ends-with-examples name=func-ends-with-examples></A>7.5.3.1 
Examples</H5>
<P>CollationA used in these examples is a collation in which both "-" and "*" 
are ignorable collation units.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Ignorable collation unit" is equivalent to "ignorable collation element" in 
<A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<UL>
  <LI>
  <P><CODE>fn:ends-with ( "tattoo", "tattoo")</CODE> returns 
  <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:ends-with ( "tattoo", "atto")</CODE> returns 
  <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>fn:ends-with ((), ())</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:ends-with ( "abcdefghi", "-g-h-i-", "CollationA")</CODE> returns 
  <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:ends-with ( "abcd***e---f*--*ghi", "defghi", "CollationA")</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:ends-with ( "abcd***e---f*--*ghi", "defghi", "CollationA")</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:ends-with ( (), "--***-*---", "CollationA")</CODE> returns 
  <CODE>true</CODE>. The second argument contains only ignorable collation units 
  and is equivalent to the zero-length string.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-substring-before name=func-substring-before></A>7.5.4 
fn:substring-before</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:substring-before</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:string</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE 
      class=function>fn:substring-before</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the substring of the value of <CODE>$arg1</CODE> that 
precedes in the value of <CODE>$arg1</CODE> the first occurrence of a sequence 
of collation units that provides a minimal match to the collation units of 
<CODE>$arg2</CODE> according to the collation that is used.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Minimal match" is defined in <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<P>If the value of <CODE>$arg1</CODE> or <CODE>$arg2</CODE> is the empty 
sequence, or contains only ignorable collation units, it is interpreted as the 
zero-length string.</P>
<P>If the value of <CODE>$arg2</CODE> is the zero-length string, then the 
function returns the zero-length string.</P>
<P>If the value of <CODE>$arg1</CODE> does not contain a string that is equal to 
the value of <CODE>$arg2</CODE>, then the function returns the zero-length 
string.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A> If the specified collation does not support collation units 
an error <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> be raised [<A 
title=err:FOCH0004 
href="REC-xpath-functions-20070123.htm#ERRFOCH0004">err:FOCH0004</A>].</P>
<DIV class=div4>
<H5><A id=func-substring-before-example 
name=func-substring-before-example></A>7.5.4.1 Examples</H5>
<P>CollationA used in these examples is a collation in which both "-" and "*" 
are ignorable collation units.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Ignorable collation unit" is equivalent to "ignorable collation element" in 
<A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<UL>
  <LI>
  <P><CODE>fn:substring-before ( "tattoo", "attoo")</CODE> returns 
  "<CODE>t</CODE>".</P>
  <LI>
  <P><CODE>fn:substring-before ( "tattoo", "tatto")</CODE> returns "".</P>
  <LI>
  <P><CODE>fn:substring-before ((), ())</CODE> returns "".</P>
  <LI>
  <P><CODE>fn:substring-before ( "abcdefghi", "--d-e-", "CollationA")</CODE> 
  returns "<CODE>abc</CODE>".</P>
  <LI>
  <P><CODE>fn:substring-before ( "abc--d-e-fghi", "--d-e-", "CollationA")</CODE> 
  returns "<CODE>abc--</CODE>".</P>
  <LI>
  <P><CODE>fn:substring-before ( "a*b*c*d*e*f*g*h*i*", "***cde", 
  "CollationA")</CODE> returns "<CODE>a*b*</CODE>".</P>
  <LI>
  <P><CODE>fn:substring-before ( "Eureka!", "--***-*---", "CollationA")</CODE> 
  returns "". The second argument contains only ignorable collation units and is 
  equivalent to the zero-length string.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-substring-after name=func-substring-after></A>7.5.5 
fn:substring-after</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:substring-after</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:string</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE 
      class=function>fn:substring-after</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the substring of the value of <CODE>$arg1</CODE> that 
follows in the value of <CODE>$arg1</CODE> the first occurrence of a sequence of 
collation units that provides a minimal match to the collation units of 
<CODE>$arg2</CODE> according to the collation that is used.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Minimal match" is defined in <A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<P>If the value of <CODE>$arg1</CODE> or <CODE>$arg2</CODE> is the empty 
sequence, or contains only ignorable collation units, it is interpreted as the 
zero-length string.</P>
<P>If the value of <CODE>$arg2</CODE> is the zero-length string, then the 
function returns the value of <CODE>$arg1</CODE>.</P>
<P>If the value of <CODE>$arg1</CODE> does not contain a string that is equal to 
the value of <CODE>$arg2</CODE>, then the function returns the zero-length 
string.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A> If the specified collation does not support collation units 
an error <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> be raised [<A 
title=err:FOCH0004 
href="REC-xpath-functions-20070123.htm#ERRFOCH0004">err:FOCH0004</A>].</P>
<DIV class=div4>
<H5><A id=func-substring-after-examples 
name=func-substring-after-examples></A>7.5.5.1 Examples</H5>
<P>CollationA used in these examples is a collation in which both "-" and "*" 
are ignorable collation units.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>"Ignorable collation unit" is equivalent to "ignorable collation element" in 
<A 
href="REC-xpath-functions-20070123.htm#Unicode-Collations">[Unicode 
Collation Algorithm]</A>.</P></DIV>
<UL>
  <LI>
  <P><CODE>fn:substring-after("tattoo", "tat")</CODE> returns 
  "<CODE>too</CODE>".</P>
  <LI>
  <P><CODE>fn:substring-after ( "tattoo", "tattoo")</CODE> returns "".</P>
  <LI>
  <P><CODE>fn:substring-after ((), ())</CODE> returns "".</P>
  <LI>
  <P><CODE>fn:substring-after ( "abcdefghi", "--d-e-", "CollationA")</CODE> 
  returns "<CODE>fghi</CODE>".</P>
  <LI>
  <P><CODE>fn:substring-after ( "abc--d-e-fghi", "--d-e-", "CollationA")</CODE> 
  returns "<CODE>-fghi</CODE> ".</P>
  <LI>
  <P><CODE>fn:substring-after ( "a*b*c*d*e*f*g*h*i*", "***cde***", 
  "CollationA")</CODE> returns "<CODE>*f*g*h*i*</CODE>".</P>
  <LI>
  <P><CODE>fn:substring-after ( "Eureka!", "--***-*---", "CollationA")</CODE> 
  returns "<CODE>Eureka!</CODE>". The second argument contains only ignorable 
  collation units and is equivalent to the zero-length 
string.</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=string.match name=string.match></A>7.6 String Functions that Use 
Pattern Matching</H3>
<P>The three functions described in this section make use of a regular 
expression syntax for pattern matching. This is described below.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches</CODE></A></TD>
    <TD>Returns an <CODE>xs:boolean</CODE> value that indicates whether the 
      value of the first argument is matched by the regular expression that is 
      the value of the second argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-replace"><CODE>fn:replace</CODE></A></TD>
    <TD>Returns the value of the first argument with every substring matched 
      by the regular expression that is the value of the second argument 
      replaced by the replacement string that is the value of the third 
    argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-tokenize"><CODE>fn:tokenize</CODE></A></TD>
    <TD>Returns a sequence of one or more <CODE>xs:string</CODE>s whose values 
      are substrings of the value of the first argument separated by substrings 
      that match the regular expression that is the value of the second 
    argument.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=regex-syntax name=regex-syntax></A>7.6.1 Regular Expression 
Syntax</H4>
<P>The regular expression syntax used by these functions is defined in terms of 
the regular expression syntax specified in XML Schema (see <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>), which in turn is based on the 
established conventions of languages such as Perl. However, because XML Schema 
uses regular expressions only for validity checking, it omits some facilities 
that are widely-used with languages such as Perl. This section, therefore, 
describes extensions to the XML Schema regular expressions syntax that reinstate 
these capabilities.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>It is recommended that implementers consult <A 
href="REC-xpath-functions-20070123.htm#Unicode-Regex">[Unicode 
Regular Expressions]</A> for information on using regular expression processing 
on Unicode characters.</P></DIV>
<P>The regular expression syntax and semantics are identical to those defined in 
<A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> with the following additions:</P>
<UL>
  <LI>
  <P>Two meta-characters, <CODE>^</CODE> and <CODE>$</CODE> are added. By 
  default, the meta-character <CODE>^</CODE> matches the start of the entire 
  string, while <CODE>$</CODE> matches the end of the entire string. In 
  multi-line mode, <CODE>^</CODE> matches the start of any line (that is, the 
  start of the entire string, and the position immediately after a newline 
  character), while <CODE>$</CODE> matches the end of any line (that is, the end 
  of the entire string, and the position immediately before a newline 
  character). Newline here means the character <CODE>#x0A</CODE> only.</P>
  <P>This means that the production in <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A>:</P>
  <P><CODE>[10] Char ::= [^.\?*+()|#x5B#x5D]</CODE></P>
  <P>is modified to read:</P>
  <P><CODE>[10] Char ::= [^.\?*+{}()|^$#x5B#x5D]</CODE></P>
  <P>The characters <CODE>#x5B</CODE> and <CODE>#x5D</CODE> correspond to 
  "<CODE>[</CODE>" and "<CODE>]</CODE>" respectively.</P>
  <DIV class=note>
  <P class=prefix><B>Note:</B></P>
  <P>The definition of Char (production [10]) in <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> has a known error in which it 
  omits the left brace ("{") and right brace ("}"). That error is corrected 
  here.</P></DIV>
  <P>The following production:</P>
  <P><CODE>[11] charClass ::= charClassEsc | charClassExpr | 
  WildCardEsc</CODE></P>
  <P>is modified to read:</P>
  <P><CODE>[11] charClass ::= charClassEsc | charClassExpr | WildCardEsc | "^" | 
  "$"</CODE></P>
  <LI>
  <P><EM>Reluctant quantifiers</EM> are supported. They are indicated by a " 
  <CODE>?</CODE> " following a quantifier. Specifically:</P>
  <UL>
    <LI>
    <P><CODE>X??</CODE> matches X, once or not at all</P>
    <LI>
    <P><CODE>X*?</CODE> matches X, zero or more times</P>
    <LI>
    <P><CODE>X+?</CODE> matches X, one or more times</P>
    <LI>
    <P><CODE>X{n}?</CODE> matches X, exactly n times</P>
    <LI>
    <P><CODE>X{n,}?</CODE> matches X, at least n times</P>
    <LI>
    <P><CODE>X{n,m}?</CODE> matches X, at least n times, but not more than m 
    times</P></LI></UL>
  <P>The effect of these quantifiers is that the regular expression matches the 
  <EM>shortest</EM> possible substring consistent with the match as a whole 
  succeeding. Without the " <CODE>?</CODE> ", the regular expression matches the 
  <EM>longest</EM> possible substring.</P>
  <P>To achieve this, the production in <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A>:</P>
  <P><CODE>[4] quantifier ::= [?*+] | ( '{' quantity '}' )</CODE></P>
  <P>is changed to:</P>
  <P><CODE>[4] quantifier ::= ( [?*+] | ( '{' quantity '}' ) ) '?'?</CODE></P>
  <DIV class=note>
  <P class=prefix><B>Note:</B></P>
  <P>Reluctant quantifiers have no effect on the results of the boolean <A 
  href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches</CODE></A> 
  function, since this function is only interested in discovering whether a 
  match exists, and not where it exists.</P></DIV>
  <LI>
  <P>Sub-expressions (groups) within the regular expression are recognized. The 
  regular expression syntax defined by <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> allows a regular expression to 
  contain parenthesized sub-expressions, but attaches no special significance to 
  them. The <A 
  href="REC-xpath-functions-20070123.htm#func-replace"><CODE>fn:replace()</CODE></A> 
  function described below allows access to the parts of the input string that 
  matched a sub-expression (called captured substrings). The sub-expressions are 
  numbered according to the position of the opening parenthesis in left-to-right 
  order within the top-level regular expression: the first opening parenthesis 
  identifies captured substring 1, the second identifies captured substring 2, 
  and so on. 0 identifies the substring captured by the entire regular 
  expression. If a sub-expression matches more than one substring (because it is 
  within a construct that allows repetition), then only the <EM>last</EM> 
  substring that it matched will be captured.</P>
  <LI>
  <P>Back-references are allowed. The construct <CODE>\n</CODE> where 
  <CODE>n</CODE> is a single digit is always recognized as a back-reference; if 
  this is followed by further digits, these digits are taken to be part of the 
  back-reference if and only if the back-reference is preceded by sufficiently 
  many capturing subexpressions. A back-reference matches the string that was 
  matched by the <CODE>n</CODE>th capturing subexpression within the regular 
  expression, that is, the parenthesized subexpression whose opening left 
  parenthesis is the <CODE>n</CODE>th unescaped left parenthesis within the 
  regular expression. The closing right parenthesis of this subexpression must 
  occur before the back-reference. For example, the regular expression 
  <CODE>('|").*\1</CODE> matches a sequence of characters delimited either by an 
  apostrophe at the start and end, or by a quotation mark at the start and 
  end.</P>
  <P>If no string is matched by the <CODE>n</CODE>th capturing subexpression, 
  the back-reference is interpreted as matching a zero-length string.</P>
  <P>Back-references change the following production:</P>
  <P><CODE>[23] charClassEsc ::= ( SingleCharEsc | MultiCharEsc | catEsc | 
  complEsc )</CODE></P>
  <P>to</P>
  <P><CODE>[23] charClassEsc ::= ( SingleCharEsc | MultiCharEsc | catEsc | 
  complEsc | backReference )</CODE></P>
  <P><CODE>[23a] backReference ::= "\" [1-9][0-9]*</CODE></P>
  <LI>
  <P>Single character escapes are extended to allow the <CODE>$</CODE> character 
  to be escaped. The following production is changed:</P>
  <P><CODE>[24]SingleCharEsc ::= '\' [nrt\|.?*+(){}#x2D#x5B#x5D#x5E]</CODE></P>
  <P>to</P>
  <P><CODE>[24]SingleCharEsc ::= '\' 
  [nrt\|.?*+(){}$#x2D#x5B#x5D#x5E]</CODE></P></LI></UL>
<DIV class=div4>
<H5><A id=flags name=flags></A>7.6.1.1 Flags</H5>
<P>All these functions provide an optional parameter, <CODE>$flags</CODE>, to 
set options for the interpretation of the regular expression. The parameter 
accepts a <CODE>xs:string</CODE>, in which individual letters are used to set 
options. The presence of a letter within the string indicates that the option is 
on; its absence indicates that the option is off. Letters may appear in any 
order and may be repeated. If there are characters present that are not defined 
here as flags, then an error is raised [<A title=err:FORX0001 
href="REC-xpath-functions-20070123.htm#ERRFORX0001">err:FORX0001</A>].</P>
<P>The following options are defined:</P>
<UL>
  <LI>
  <P><CODE>s</CODE>: If present, the match operates in "dot-all" mode. (Perl 
  calls this the single-line mode.) If the <CODE>s</CODE> flag is not specified, 
  the meta-character <CODE>.</CODE> matches any character except a newline 
  (<CODE>#x0A</CODE>) character. In dot-all mode, the meta-character 
  <CODE>.</CODE> matches any character whatsoever. Suppose the input contains 
  "hello" and "world" on two lines. This will not be matched by the regular 
  expression "hello.*world" unless dot-all mode is enabled.</P>
  <LI>
  <P><CODE>m</CODE>: If present, the match operates in multi-line mode. By 
  default, the meta-character <CODE>^</CODE> matches the start of the entire 
  string, while $ matches the end of the entire string. In multi-line mode, 
  <CODE>^</CODE> matches the start of any line (that is, the start of the entire 
  string, and the position immediately after a newline character), while 
  <CODE>$</CODE> matches the end of any line (that is, the end of the entire 
  string, and the position immediately before a newline character). Newline here 
  means the character <CODE>#x0A</CODE> only.</P>
  <LI>
  <P><CODE>i</CODE>: If present, the match operates in case-insensitive mode. 
  The detailed rules are as follows. In these rules, a character C2 is 
  considered to be a <EM>case-variant</EM> of another character C1 if the 
  following XPath expression returns <CODE>true</CODE> when the two characters 
  are considered as strings of length one, and the Unicode codepoint collation 
  is used:</P>
  <P><A 
  href="REC-xpath-functions-20070123.htm#func-lower-case"><CODE>fn:lower-case(C1) 
  eq fn:lower-case(C2)</CODE></A></P>
  <P>or</P>
  <P><A 
  href="REC-xpath-functions-20070123.htm#func-upper-case"><CODE>fn:upper-case(C1) 
  eq fn:upper-case(C2)</CODE></A></P>
  <P>Note that the case-variants of a character under this definition are always 
  single characters.</P>
  <OL class=enumar>
    <LI>
    <P>When a normal character (<CODE>Char</CODE>) is used as an atom, it 
    represents the set containing that character and all its case-variants. For 
    example, the regular expression "z" will match both "z" and "Z".</P>
    <LI>
    <P>A character range (<CODE>charRange</CODE>) represents the set containing 
    all the characters that it would match in the absence of the 
    "<CODE>i</CODE>" flag, together with their case-variants. For example, the 
    regular expression "[A-Z]" will match all the letters A-Z and all the 
    letters a-z. It will also match certain other characters such as 
    <CODE>#x212A</CODE> (KELVIN SIGN), since <A 
    href="REC-xpath-functions-20070123.htm#func-lower-case"><CODE>fn:lower-case("#x212A")</CODE></A> 
    is "k".</P>
    <P>This rule applies also to a character range used in a character class 
    subtraction (<CODE>charClassSub</CODE>): thus [A-Z-[IO]] will match 
    characters such as "A", "B", "a", and "b", but will not match "I", "O", "i", 
    or "o".</P>
    <P>The rule also applies to a character range used as part of a negative 
    character group: thus [^Q] will match every character except "Q" and "q" 
    (these being the only case-variants of "Q" in Unicode).</P>
    <LI>
    <P>A back-reference is compared using case-blind comparison: that is, each 
    character must either be the same as the corresponding character of the 
    previously matched string, or must be a case-variant of that character. For 
    example, the strings "Mum", "mom", "Dad", and "DUD" all match the regular 
    expression "([md])[aeiou]\1" when the "<CODE>i</CODE>" flag is used.</P>
    <LI>
    <P>All other constructs are unaffected by the "<CODE>i</CODE>" flag. For 
    example, "\p{Lu}" continues to match upper-case letters only.</P></LI></OL>
  <LI>
  <P><CODE>x</CODE>: If present, whitespace characters (#x9, #xA, #xD and #x20) 
  in the regular expression are removed prior to matching with one exception: 
  whitespace characters within character class expressions 
  (<CODE>charClassExpr</CODE>) are not removed. This flag can be used, for 
  example, to break up long regular expressions into readable lines.</P>
  <P>Examples:</P>
  <P><A 
  href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches("helloworld", 
  "hello world", "x")</CODE></A> returns <CODE>true</CODE></P>
  <P><A 
  href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches("helloworld", 
  "hello[ ]world", "x")</CODE></A> returns <CODE>false</CODE></P>
  <P><A 
  href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches("hello 
  world", "hello\ sworld", "x")</CODE></A> returns <CODE>true</CODE></P>
  <P><A 
  href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches("hello 
  world", "hello world", "x")</CODE></A> returns 
<CODE>false</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-matches name=func-matches></A>7.6.2 fn:matches</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:matches</CODE>(<CODE 
class=arg>$input</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$pattern</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:boolean</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:matches</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$input</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$pattern</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$flags</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: The function returns <CODE>true</CODE> if <CODE>$input</CODE> 
matches the regular expression supplied as <CODE>$pattern</CODE> as influenced 
by the value of <CODE>$flags</CODE>, if present; otherwise, it returns 
<CODE>false</CODE>.</P>
<P>The effect of calling the first version of this function (omitting the 
argument <CODE>$flags</CODE>) is the same as the effect of calling the second 
version with the <CODE>$flags</CODE> argument set to a zero-length string. Flags 
are defined in <A 
href="REC-xpath-functions-20070123.htm#flags"><B>7.6.1.1 
Flags</B></A>.</P>
<P>If <CODE>$input</CODE> is the empty sequence, it is interpreted as the 
zero-length string.</P>
<P>Unless the metacharacters <CODE>^</CODE> and <CODE>$</CODE> are used as 
anchors, the string is considered to match the pattern if any substring matches 
the pattern. But if anchors are used, the anchors must match the start/end of 
the string (in string mode), or the start/end of a line (in multiline mode).</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>This is different from the behavior of patterns in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>, where regular expressions are 
<EM>implicitly</EM> anchored.</P></DIV>
<P>An error is raised [<A title=err:FORX0002 
href="REC-xpath-functions-20070123.htm#ERRFORX0002">err:FORX0002</A>] 
if the value of <CODE>$pattern</CODE> is invalid according to the rules 
described in section <A 
href="REC-xpath-functions-20070123.htm#regex-syntax"><B>7.6.1 
Regular Expression Syntax</B></A>.</P>
<P>An error is raised [<A title=err:FORX0001 
href="REC-xpath-functions-20070123.htm#ERRFORX0001">err:FORX0001</A>] 
if the value of <CODE>$flags</CODE> is invalid according to the rules described 
in section <A 
href="REC-xpath-functions-20070123.htm#regex-syntax"><B>7.6.1 
Regular Expression Syntax</B></A>.</P>
<DIV class=div4>
<H5><A id=func-matches-examples name=func-matches-examples></A>7.6.2.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:matches("abracadabra", "bra")</CODE> returns true</P>
  <LI>
  <P><CODE>fn:matches("abracadabra", "^a.*a$")</CODE> returns true</P>
  <LI>
  <P><CODE>fn:matches("abracadabra", "^bra")</CODE> returns false</P></LI></UL>
<P>Given the source document:</P>
<DIV class=exampleInner><PRE>&lt;poem author="Wilhelm Busch"&gt; 
Kaum hat dies der Hahn gesehen,
Fängt er auch schon an zu krähen:
«Kikeriki! Kikikerikih!!»
Tak, tak, tak! - da kommen sie.
&lt;/poem&gt;
</PRE></DIV>
<P>the following function calls produce the following results, with the 
<CODE>poem</CODE> element as the context node:</P>
<UL>
  <LI>
  <P><CODE>fn:matches(., "Kaum.*krähen")</CODE> returns <CODE>false</CODE></P>
  <LI>
  <P><CODE>fn:matches(., "Kaum.*krähen", "s")</CODE> returns 
  <CODE>true</CODE></P>
  <LI>
  <P><CODE>fn:matches(., "^Kaum.*gesehen,$", "m")</CODE> returns 
  <CODE>true</CODE></P>
  <LI>
  <P><CODE>fn:matches(., "^Kaum.*gesehen,$")</CODE> returns 
  <CODE>false</CODE></P>
  <LI>
  <P><CODE>fn:matches(., "kiki", "i")</CODE> returns 
<CODE>true</CODE></P></LI></UL>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>Regular expression matching is defined on the basis of Unicode code points; 
it takes no account of collations.</P></DIV></DIV></DIV>
<DIV class=div3>
<H4><A id=func-replace name=func-replace></A>7.6.3 fn:replace</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:replace</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$input</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$pattern</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$replacement</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=4><CODE class=function>fn:replace</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$input</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$pattern</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$replacement</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$flags</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: The function returns the <CODE>xs:string</CODE> that is obtained by 
replacing each non-overlapping substring of <CODE>$input</CODE> that matches the 
given <CODE>$pattern</CODE> with an occurrence of the <CODE>$replacement</CODE> 
string.</P>
<P>The effect of calling the first version of this function (omitting the 
argument <CODE>$flags</CODE>) is the same as the effect of calling the second 
version with the <CODE>$flags</CODE> argument set to a zero-length string. Flags 
are defined in <A 
href="REC-xpath-functions-20070123.htm#flags"><B>7.6.1.1 
Flags</B></A>.</P>
<P>The <CODE>$flags</CODE> argument is interpreted in the same manner as for the 
<A 
href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches()</CODE></A> 
function.</P>
<P>If <CODE>$input</CODE> is the empty sequence, it is interpreted as the 
zero-length string.</P>
<P>If two overlapping substrings of <CODE>$input</CODE> both match the 
<CODE>$pattern</CODE>, then only the first one (that is, the one whose first 
character comes first in the <CODE>$input</CODE> string) is replaced.</P>
<P>Within the <CODE>$replacement</CODE> string, a variable <CODE>$N</CODE> may 
be used to refer to the substring captured by the Nth parenthesized 
sub-expression in the regular expression. For each match of the pattern, these 
variables are assigned the value of the content matched by the relevant 
sub-expression, and the modified replacement string is then substituted for the 
characters in <CODE>$input</CODE> that matched the pattern. <CODE>$0</CODE> 
refers to the substring captured by the regular expression as a whole.</P>
<P>More specifically, the rules are as follows, where <CODE>S</CODE> is the 
number of parenthesized sub-expressions in the regular expression, and 
<CODE>N</CODE> is the decimal number formed by taking all the digits that 
consecutively follow the <CODE>$</CODE> character:</P>
<OL class=enumar>
  <LI>
  <P>If <CODE>N</CODE>=<CODE>0</CODE>, then the variable is replaced by the 
  substring matched by the regular expression as a whole.</P>
  <LI>
  <P>If <CODE>1</CODE>&lt;=<CODE>N</CODE>&lt;=<CODE>S</CODE>, then the variable 
  is replaced by the substring captured by the Nth parenthesized sub-expression. 
  If the <CODE>Nth</CODE> parenthesized sub-expression was not matched, then the 
  variable is replaced by the zero-length string.</P>
  <LI>
  <P>If <CODE>S</CODE>&lt;<CODE>N</CODE>&lt;=<CODE>9</CODE>, then the variable 
  is replaced by the zero-length string.</P>
  <LI>
  <P>Otherwise (if <CODE>N</CODE>&gt;<CODE>S</CODE> and 
  <CODE>N</CODE>&gt;<CODE>9</CODE>), the last digit of <CODE>N</CODE> is taken 
  to be a literal character to be included "as is" in the replacement string, 
  and the rules are reapplied using the number <CODE>N</CODE> formed by 
  stripping off this last digit.</P></LI></OL>
<P>For example, if the replacement string is "<CODE>$23</CODE>" and there are 5 
substrings, the result contains the value of the substring that matches the 
second sub-expression, followed by the digit "<CODE>3</CODE>".</P>
<P>A literal "<CODE>$</CODE>" symbol must be written as "<CODE>\$</CODE>".</P>
<P>A literal "<CODE>\</CODE>" symbol must be written as "<CODE>\\</CODE>".</P>
<P>If two alternatives within the pattern both match at the same position in the 
<CODE>$input</CODE>, then the match that is chosen is the one matched by the 
first alternative. For example:</P>
<DIV class=exampleInner><PRE> fn:replace("abcd", "(ab)|(a)", "[1=$1][2=$2]") returns "[1=ab][2=]cd"
</PRE></DIV>
<P>An error is raised [<A title=err:FORX0002 
href="REC-xpath-functions-20070123.htm#ERRFORX0002">err:FORX0002</A>] 
if the value of <CODE>$pattern</CODE> is invalid according to the rules 
described in section <A 
href="REC-xpath-functions-20070123.htm#regex-syntax"><B>7.6.1 
Regular Expression Syntax</B></A>.</P>
<P>An error is raised [<A title=err:FORX0001 
href="REC-xpath-functions-20070123.htm#ERRFORX0001">err:FORX0001</A>] 
if the value of <CODE>$flags</CODE> is invalid according to the rules described 
in section <A 
href="REC-xpath-functions-20070123.htm#regex-syntax"><B>7.6.1 
Regular Expression Syntax</B></A>.</P>
<P>An error is raised [<A title=err:FORX0003 
href="REC-xpath-functions-20070123.htm#ERRFORX0003">err:FORX0003</A>] 
if the pattern matches a zero-length string, that is, if the expression <A 
href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches("", 
$pattern, $flags)</CODE></A> returns <CODE>true</CODE>. It is not an error, 
however, if a captured substring is zero-length.</P>
<P>An error is raised [<A title=err:FORX0004 
href="REC-xpath-functions-20070123.htm#ERRFORX0004">err:FORX0004</A>] 
if the value of <CODE>$replacement</CODE> contains a "<CODE>$</CODE>" character 
that is not immediately followed by a digit <CODE>0-9</CODE> and not immediately 
preceded by a "\".</P>
<P>An error is raised [<A title=err:FORX0004 
href="REC-xpath-functions-20070123.htm#ERRFORX0004">err:FORX0004</A>] 
if the value of <CODE>$replacement</CODE> contains a "<CODE>\</CODE>" character 
that is not part of a "<CODE>\\</CODE>" pair, unless it is immediately followed 
by a "<CODE>$</CODE>" character.</P>
<DIV class=div4>
<H5><A id=func-replace-examples name=func-replace-examples></A>7.6.3.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>replace("abracadabra", "bra", "*")</CODE> returns 
  <CODE>"a*cada*"</CODE></P>
  <LI>
  <P><CODE>replace("abracadabra", "a.*a", "*")</CODE> returns 
  <CODE>"*"</CODE></P>
  <LI>
  <P><CODE>replace("abracadabra", "a.*?a", "*")</CODE> returns 
  <CODE>"*c*bra"</CODE></P>
  <LI>
  <P><CODE>replace("abracadabra", "a", "")</CODE> returns 
  <CODE>"brcdbr"</CODE></P>
  <LI>
  <P><CODE>replace("abracadabra", "a(.)", "a$1$1")</CODE> returns 
  <CODE>"abbraccaddabbra"</CODE></P>
  <LI>
  <P><CODE>replace("abracadabra", ".*?", "$1")</CODE> raises an error, because 
  the pattern matches the zero-length string</P>
  <LI>
  <P><CODE>replace("AAAA", "A+", "b")</CODE> returns " <CODE>b</CODE> "</P>
  <LI>
  <P><CODE>replace("AAAA", "A+?", "b")</CODE> returns " <CODE>bbbb</CODE> "</P>
  <LI>
  <P><CODE>replace("darted", "^(.*?)d(.*)$", "$1c$2")</CODE> returns " 
  <CODE>carted</CODE> ". The first " <CODE>d</CODE> " is 
replaced.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-tokenize name=func-tokenize></A>7.6.4 fn:tokenize</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:tokenize</CODE>(<CODE 
class=arg>$input</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$pattern</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:string*</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:tokenize</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$input</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$pattern</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$flags</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: This function breaks the <CODE>$input</CODE> string into a sequence 
of strings, treating any substring that matches <CODE>$pattern</CODE> as a 
separator. The separators themselves are not returned.</P>
<P>The effect of calling the first version of this function (omitting the 
argument <CODE>$flags</CODE>) is the same as the effect of calling the second 
version with the <CODE>$flags</CODE> argument set to a zero-length string. Flags 
are defined in <A 
href="REC-xpath-functions-20070123.htm#flags"><B>7.6.1.1 
Flags</B></A>.</P>
<P>The <CODE>$flags</CODE> argument is interpreted in the same way as for the <A 
href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches()</CODE></A> 
function.</P>
<P>If <CODE>$input</CODE> is the empty sequence, or if <CODE>$input</CODE> is 
the zero-length string, the result is the empty sequence.</P>
<P>If the supplied <CODE>$pattern</CODE> matches a zero-length string, that is, 
if <A 
href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches("", 
$pattern, $flags)</CODE></A> returns <CODE>true</CODE>, then an error is raised: 
[<A title=err:FORX0003 
href="REC-xpath-functions-20070123.htm#ERRFORX0003">err:FORX0003</A>].</P>
<P>If a separator occurs at the start of the <CODE>$input</CODE> string, the 
result sequence will start with a zero-length string. Zero-length strings will 
also occur in the result sequence if a separator occurs at the end of the 
<CODE>$input</CODE> string, or if two adjacent substrings match the supplied 
<CODE>$pattern</CODE>.</P>
<P>If two alternatives within the supplied <CODE>$pattern</CODE> both match at 
the same position in the <CODE>$input</CODE> string, then the match that is 
chosen is the first. For example:</P>
<DIV class=exampleInner><PRE> fn:tokenize("abracadabra", "(ab)|(a)") returns ("", "r", "c", "d", "r", "")
</PRE></DIV>
<P>An error is raised [<A title=err:FORX0002 
href="REC-xpath-functions-20070123.htm#ERRFORX0002">err:FORX0002</A>] 
if the value of <CODE>$pattern</CODE> is invalid according to the rules 
described in section <A 
href="REC-xpath-functions-20070123.htm#regex-syntax"><B>7.6.1 
Regular Expression Syntax</B></A>.</P>
<P>An error is raised [<A title=err:FORX0001 
href="REC-xpath-functions-20070123.htm#ERRFORX0001">err:FORX0001</A>] 
if the value of <CODE>$flags</CODE> is invalid according to the rules described 
in section <A 
href="REC-xpath-functions-20070123.htm#regex-syntax"><B>7.6.1 
Regular Expression Syntax</B></A>.</P>
<DIV class=div4>
<H5><A id=func-tokenize-examples name=func-tokenize-examples></A>7.6.4.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:tokenize("The cat sat on the mat", "\s+")</CODE> returns 
  <CODE>("The", "cat", "sat", "on", "the", "mat")</CODE></P>
  <LI>
  <P><CODE>fn:tokenize("1, 15, 24, 50", ",\s*")</CODE> returns <CODE>("1", "15", 
  "24", "50")</CODE></P>
  <LI>
  <P><CODE>fn:tokenize("1,15,,24,50,", ",")</CODE> returns <CODE>("1", "15", "", 
  "24", "50", "")</CODE></P>
  <LI>
  <P><CODE>fn:tokenize("abba", ".?")</CODE> raises the error [<A 
  title=err:FORX0003 
  href="REC-xpath-functions-20070123.htm#ERRFORX0003">err:FORX0003</A>].</P>
  <LI>
  <P><CODE>fn:tokenize("Some unparsed &lt;br&gt; HTML &lt;BR&gt; text", 
  "\s*&lt;br&gt;\s*", "i")</CODE> returns <CODE>("Some unparsed", "HTML", 
  "text")</CODE></P></LI></UL></DIV></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=anyURI-functions name=anyURI-functions></A>8 Functions on anyURI</H2>
<P>This section specifies functions that take anyURI as arguments.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-resolve-uri"><CODE>fn:resolve-uri</CODE></A></TD>
    <TD>Returns an <CODE>xs:anyURI</CODE> representing an absolute 
      <CODE>xs:anyURI</CODE> given a base URI and a relative 
URI.</TD></TR></TBODY></TABLE>
<DIV class=div2>
<H3><A id=func-resolve-uri name=func-resolve-uri></A>8.1 fn:resolve-uri</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:resolve-uri</CODE>(<CODE 
class=arg>$relative</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI?</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:resolve-uri</CODE>(<CODE 
class=arg>$relative</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$base</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI?</CODE></DIV></DIV>
<P>Summary: The purpose of this function is to enable a relative URI to be 
resolved against an absolute URI.</P>
<P>The first form of this function resolves <CODE>$relative</CODE> against the 
value of the base-uri property from the static context. If the base-uri property 
is not initialized in the static context an error is raised [<A 
title=err:FONS0005 
href="REC-xpath-functions-20070123.htm#ERRFONS0005">err:FONS0005</A>].</P>
<P>If <CODE>$relative</CODE> is a relative URI reference, it is resolved against 
<CODE>$base</CODE>, or the base-uri property from the static context, using an 
algorithm such as the ones described in <A 
href="REC-xpath-functions-20070123.htm#rfc2396">[RFC 
2396]</A> or <A 
href="REC-xpath-functions-20070123.htm#rfc3986">[RFC 
3986]</A>, and the resulting absolute URI reference is returned. An error may be 
raised [<A title=err:FORG0009 
href="REC-xpath-functions-20070123.htm#ERRFORG0009">err:FORG0009</A>] 
in the resolution process.</P>
<P>If <CODE>$relative</CODE> is an absolute URI reference, it is returned 
unchanged.</P>
<P>If <CODE>$relative</CODE> or <CODE>$base</CODE> is not a valid 
<CODE>xs:anyURI</CODE> an error is raised [<A title=err:FORG0002 
href="REC-xpath-functions-20070123.htm#ERRFORG0002">err:FORG0002</A>].</P>
<P>If <CODE>$relative</CODE> is the empty sequence, the empty sequence is 
returned.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>Resolving a URI does not dereference it. This is merely a syntactic operation 
on two character strings.</P></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=boolean-functions name=boolean-functions></A>9 Functions and Operators 
on Boolean Values</H2>
<P>This section defines functions and operators on the <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> boolean datatype.</P>
<DIV class=div2>
<H3><A id=boolean-constructors name=boolean-constructors></A>9.1 Additional 
Boolean Constructor Functions</H3>
<P>The following additional constructor functions are defined on the boolean 
type.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-true"><CODE>fn:true</CODE></A></TD>
    <TD>Constructs the xs:boolean value 'true'.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-false"><CODE>fn:false</CODE></A></TD>
    <TD>Constructs the xs:boolean value 'false'.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-true name=func-true></A>9.1.1 fn:true</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:true</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:boolean</CODE> value <CODE>true</CODE>. 
Equivalent to <CODE>xs:boolean("1")</CODE>.</P>
<DIV class=div4>
<H5><A id=func-true-examples name=func-true-examples></A>9.1.1.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:true()</CODE> returns <CODE>true</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-false name=func-false></A>9.1.2 fn:false</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:false</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:boolean</CODE> value <CODE>false</CODE>. 
Equivalent to <CODE>xs:boolean("0")</CODE>.</P>
<DIV class=div4>
<H5><A id=func-false-examples name=func-false-examples></A>9.1.2.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:false()</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=op.boolean name=op.boolean></A>9.2 Operators on Boolean Values</H3>
<P>The following functions define the semantics of operators on boolean values 
in <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>:</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Operator</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-boolean-equal"><CODE>op:boolean-equal</CODE></A></TD>
    <TD>Equality of <CODE>xs:boolean</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-boolean-less-than"><CODE>op:boolean-less-than</CODE></A></TD>
    <TD>A less-than operator on <CODE>xs:boolean</CODE> values: 
      <CODE>false</CODE> is less than <CODE>true</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-boolean-greater-than"><CODE>op:boolean-greater-than</CODE></A></TD>
    <TD>A greater-than operator on <CODE>xs:boolean</CODE> values: 
      <CODE>true</CODE> is greater than <CODE>false</CODE>.</TD></TR></TBODY></TABLE>
<P>The ordering operators <A 
href="REC-xpath-functions-20070123.htm#func-boolean-less-than"><CODE>op:boolean-less-than</CODE></A> 
and <A 
href="REC-xpath-functions-20070123.htm#func-boolean-greater-than"><CODE>op:boolean-greater-than</CODE></A> 
are provided for application purposes and for compatibility with <A 
href="REC-xpath-functions-20070123.htm#xpath">[XML Path 
Language (XPath) Version 1.0]</A>. The <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> datatype <CODE>xs:boolean</CODE> is 
not ordered.</P>
<DIV class=div3>
<H4><A id=func-boolean-equal name=func-boolean-equal></A>9.2.1 
op:boolean-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:boolean-equal</CODE>(<CODE 
class=arg>$value1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:boolean</CODE>, <CODE class=arg>$value2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:boolean</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if both arguments are <CODE>true</CODE> or 
if both arguments are <CODE>false</CODE>. Returns <CODE>false</CODE> if one of 
the arguments is <CODE>true</CODE> and the other argument is 
<CODE>false</CODE>.</P>
<P>This function backs up the "eq" operator on <CODE>xs:boolean</CODE> 
values.</P></DIV>
<DIV class=div3>
<H4><A id=func-boolean-less-than name=func-boolean-less-than></A>9.2.2 
op:boolean-less-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:boolean-less-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:boolean</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:boolean</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if <CODE>$arg1</CODE> is 
<CODE>false</CODE> and <CODE>$arg2</CODE> is <CODE>true</CODE>. Otherwise, 
returns <CODE>false</CODE>.</P>
<P>This function backs up the "lt" and "ge" operators on <CODE>xs:boolean</CODE> 
values.</P></DIV>
<DIV class=div3>
<H4><A id=func-boolean-greater-than name=func-boolean-greater-than></A>9.2.3 
op:boolean-greater-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:boolean-greater-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:boolean</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:boolean</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if <CODE>$arg1</CODE> is <CODE>true</CODE> 
and <CODE>$arg2</CODE> is <CODE>false</CODE>. Otherwise, returns 
<CODE>false</CODE>.</P>
<P>This function backs up the "gt" and "le" operators on <CODE>xs:boolean</CODE> 
values.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=boolean-value-functions name=boolean-value-functions></A>9.3 Functions 
on Boolean Values</H3>
<P>The following functions are defined on boolean values:</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-not"><CODE>fn:not</CODE></A></TD>
    <TD>Inverts the <CODE>xs:boolean</CODE> value of the 
  argument.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-not name=func-not></A>9.3.1 fn:not</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:not</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: <CODE>$arg</CODE> is first reduced to an effective boolean value by 
applying the <A 
href="REC-xpath-functions-20070123.htm#func-boolean"><CODE>fn:boolean()</CODE></A> 
function. Returns <CODE>true</CODE> if the effective boolean value is 
<CODE>false</CODE>, and <CODE>false</CODE> if the effective boolean value is 
<CODE>true</CODE>.</P>
<DIV class=div4>
<H5><A id=func-not-examples name=func-not-examples></A>9.3.1.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:not(fn:true())</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>fn:not("false")</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=durations-dates-times name=durations-dates-times></A>10 Functions and 
Operators on Durations, Dates and Times</H2>
<P>This section discusses operations on the <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> date and time types. It also 
discusses operations on two subtypes of <CODE>xs:duration</CODE> that are 
defined in <A href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP>. See <A 
href="REC-xpath-functions-20070123.htm#duration-subtypes"><B>10.3 
Two Totally Ordered Subtypes of Duration</B></A>.</P>
<P>See <A 
href="REC-xpath-functions-20070123.htm#Working-With-Timezones">[Working 
With Timezones]</A> for a disquisition on working with date and time values with 
and without timezones.</P>
<DIV class=div2>
<H3><A id=duration-date-time-types name=duration-date-time-types></A>10.1 
Duration, Date and Time Types</H3>
<P>The operators described in this section are defined on the following date and 
time types:</P>
<UL>
  <LI>
  <P>xs:dateTime</P>
  <LI>
  <P>xs:date</P>
  <LI>
  <P>xs:time</P>
  <LI>
  <P>xs:gYearMonth</P>
  <LI>
  <P>xs:gYear</P>
  <LI>
  <P>xs:gMonthDay</P>
  <LI>
  <P>xs:gMonth</P>
  <LI>
  <P>xs:gDay</P></LI></UL>
<P>Note that only equality is defined on <CODE>xs:gYearMonth</CODE>, 
<CODE>xs:gYear</CODE>, <CODE>xs:gMonthDay</CODE>, <CODE>xs:gMonth</CODE> and 
<CODE>xs:gDay</CODE> values.</P>
<P>In addition, operators are defined on:</P>
<UL>
  <LI>
  <P>xs:duration</P></LI></UL>
<P>and on the <A 
href="REC-xpath-functions-20070123.htm#duration-subtypes"><B>10.3 
Two Totally Ordered Subtypes of Duration</B></A>:</P>
<UL>
  <LI>
  <P>xs:yearMonthDuration</P>
  <LI>
  <P>xs:dayTimeDuration</P></LI></UL>
<P>Note that no ordering relation is defined on <CODE>xs:duration</CODE> 
values.Two <CODE>xs:duration</CODE> values may however be compared for equality. 
Operations on durations (including equality comparison, casting to string, and 
extraction of components) all treat the duration as normalized. This means that 
the seconds and minutes components will always be less than 60, the hours 
component less than 24, and the months component less than 12. Thus, for 
example, a duration of 120 seconds always gives the same result as a duration of 
two minutes.</P>
<DIV class=div3>
<H4><A id=date-time-duration-conformance 
name=date-time-duration-conformance></A>10.1.1 Limits and Precision</H4>
<P>For a number of the above datatypes <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> extends the basic <A 
href="REC-xpath-functions-20070123.htm#ISO8601">[ISO 
8601]</A> lexical representations, such as YYYY-MM-DDThh:mm:ss.s for dateTime, 
by allowing a preceding minus sign, more than four digits to represent the year 
field — no maximum is specified — and an unlimited number of digits for 
fractional seconds. Leap seconds are not supported.</P>
<P>All <EM>minimally conforming</EM> processors <A class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> support positive year 
values with a minimum of 4 digits (i.e., YYYY) and a minimum fractional second 
precision of 1 millisecond or three digits (i.e., s.sss). However, 
<EM>conforming</EM> processors <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> set larger <A 
class=termref title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> limits 
on the maximum number of digits they support in these two situations. Processors 
<A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> also choose to support the 
year 0000 and years with negative values. The results of operations on dates 
that cross the year 0000 are <A class=termref title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>.</P>
<P>A processor that limits the number of digits in date and time datatype 
representations may encounter overflow and underflow conditions when it tries to 
execute the functions in <A 
href="REC-xpath-functions-20070123.htm#dateTime-arithmetic"><B>10.8 
Arithmetic Operators on Durations, Dates and Times</B></A>. In these situations, 
the processor <A class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> return P0M or PT0S in 
case of duration underflow and 00:00:00 in case of time underflow. It <A 
class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> raise an error [<A 
title=err:FODT0001 
href="REC-xpath-functions-20070123.htm#ERRFODT0001">err:FODT0001</A>] 
in case of overflow.</P>
<P>The value spaces of the two totally ordered subtypes of 
<CODE>xs:duration</CODE> described in <A 
href="REC-xpath-functions-20070123.htm#duration-subtypes"><B>10.3 
Two Totally Ordered Subtypes of Duration</B></A> are <CODE>xs:integer</CODE> 
months for <CODE>xs:yearMonthDuration</CODE> and <CODE>xs:decimal</CODE> seconds 
for <CODE>xs:dayTimeDuration</CODE>. If a processor limits the number of digits 
allowed in the representation of <CODE>xs:integer</CODE> and 
<CODE>xs:decimal</CODE> then overflow and underflow situations can arise when it 
tries to execute the functions in <A 
href="REC-xpath-functions-20070123.htm#duration-arithmetic"><B>10.6 
Arithmetic Operators on Durations</B></A>. In these situations the processor <A 
class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> return zero in case of 
numeric underflow and P0M or PT0S in case of duration underflow. It <A 
class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> raise an error [<A 
title=err:FODT0002 
href="REC-xpath-functions-20070123.htm#ERRFODT0002">err:FODT0002</A>] 
in case of overflow.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=date-time-values name=date-time-values></A>10.2 Date/time datatype 
values</H3>
<P>As defined in <A 
href="http://www.w3.org/TR/xpath-datamodel/#dates-and-times">Section 3.3.2 Dates 
and Times</A><SUP><SMALL>DM</SMALL></SUP>, <CODE>xs:dateTime</CODE>, 
<CODE>xs:date</CODE>, <CODE>xs:time</CODE>, <CODE>xs:gYearMonth</CODE>, 
<CODE>xs:gYear</CODE>, <CODE>xs:gMonthDay</CODE>, <CODE>xs:gMonth</CODE>, 
<CODE>xs:gDay</CODE> values, referred to collectively as date/time values, are 
represented as seven components or properties: <CODE>year</CODE>, 
<CODE>month</CODE>, <CODE>day</CODE>, <CODE>hour</CODE>, <CODE>minute</CODE>, 
<CODE>second</CODE> and <CODE>timezone</CODE>. The value of the first five 
components are <CODE>xs:integer</CODE>s. The value of the <CODE>second</CODE> 
component is an <CODE>xs:decimal</CODE> and the value of the 
<CODE>timezone</CODE> component is an <CODE>xs:dayTimeDuration</CODE>. For all 
the date/time datatypes, the <CODE>timezone</CODE> property is optional and may 
or may not be present. Depending on the datatype, some of the remaining six 
properties must be present and some must be absent. Absent, or missing, 
properties are represented by the empty sequence. This value is referred to as 
the <EM>local</EM> value in that the value is in the given timezone. Before 
comparing or subtracting <CODE>xs:dateTime</CODE> values, this local value <A 
class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> be translated or 
<EM>normalized</EM> to UTC.</P>
<P>For <CODE>xs:time</CODE>, <CODE>"00:00:00"</CODE> and <CODE>"24:00:00"</CODE> 
are alternate lexical forms for the same value, whose canonical representation 
is <CODE>"00:00:00"</CODE>. For <CODE>xs:dateTime</CODE>, a time component 
<CODE>"24:00:00"</CODE> translates to <CODE>"00:00:00"</CODE> of the following 
day.</P>
<DIV class=div3>
<H4><A id=date-time-lexical-mapping name=date-time-lexical-mapping></A>10.2.1 
Examples</H4>
<UL>
  <LI>
  <P>An <CODE>xs:dateTime</CODE> with lexical representation 
  <CODE>1999-05-31T05:00:00</CODE> is represented in the datamodel by 
  <CODE>{1999, 5, 31, 5, 0, 0.0, ()}</CODE>.</P>
  <LI>
  <P>An <CODE>xs:dateTime</CODE> with lexical representation 
  <CODE>1999-05-31T13:20:00-05:00</CODE> is represented by <CODE>{1999, 5, 31, 
  13, 20, 0.0, -PT5H}</CODE>.</P>
  <LI>
  <P>An <CODE>xs:dateTime</CODE> with lexical representation 
  <CODE>1999-12-31T24:00:00</CODE> is represented by <CODE>{2000, 1, 1, 0, 0, 
  0.0, ()}</CODE>.</P>
  <LI>
  <P>An <CODE>xs:date</CODE> with lexical representation 
  <CODE>2005-02-28+8:00</CODE> is represented by <CODE>{2005, 2, 28, (), (), (), 
  PT8H}</CODE>.</P>
  <LI>
  <P>An <CODE>xs:time</CODE> with lexical representation <CODE>24:00:00</CODE> 
  is represented by <CODE>{(), (), (), 0, 0, 0, 
()}</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=duration-subtypes name=duration-subtypes></A>10.3 Two Totally Ordered 
Subtypes of Duration</H3>
<P>Two totally ordered subtypes of <CODE>xs:duration</CODE> are defined in <A 
href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP> specification using the mechanisms 
described in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> for defining user-defined types. 
Additional details about these types is given below.</P>
<DIV class=div3>
<H4><A id=dt-yearMonthDuration name=dt-yearMonthDuration></A>10.3.1 
xs:yearMonthDuration</H4>
<P>[Definition] <CODE>xs:yearMonthDuration</CODE> is derived from 
<CODE>xs:duration</CODE> by restricting its lexical representation to contain 
only the year and month components. The value space of 
<CODE>xs:yearMonthDuration</CODE> is the set of <CODE>xs:integer</CODE> month 
values. The year and month components of <CODE>xs:yearMonthDuration</CODE> 
correspond to the Gregorian year and month components defined in section 5.5.3.2 
of <A 
href="REC-xpath-functions-20070123.htm#ISO8601">[ISO 
8601]</A>, respectively.</P>
<DIV class=div4>
<H5><A id=lexical-yearMonthDuration name=lexical-yearMonthDuration></A>10.3.1.1 
Lexical representation</H5>
<P>The lexical representation for <CODE>xs:yearMonthDuration</CODE> is the <A 
href="REC-xpath-functions-20070123.htm#ISO8601">[ISO 
8601]</A> reduced format PnYnM, where nY represents the number of years and nM 
the number of months. The values of the years and months components are not 
restricted but allow an arbitrary unsigned <CODE>xs:integer</CODE>.</P>
<P>An optional preceding minus sign ('-') is allowed to indicate a negative 
duration. If the sign is omitted a positive duration is indicated. To indicate a 
<CODE>xs:yearMonthDuration</CODE> of 1 year, 2 months, one would write: P1Y2M. 
One could also indicate a <CODE>xs:yearMonthDuration</CODE> of minus 13 months 
as: -P13M.</P>
<P>Reduced precision and truncated representations of this format are allowed 
provided they conform to the following:</P>
<P>If the number of years or months in any expression equals zero (0), the 
number and its corresponding designator <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> be omitted. However, at 
least one number and its designator <A class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> be present. For example, 
P1347Y and P1347M are allowed; P-1347M is not allowed, although -P1347M is 
allowed. P1Y2MT is not allowed. Also, P24YM is not allowed, nor is PY43M since Y 
must have at least one preceding digit and M must have one preceding 
digit.</P></DIV>
<DIV class=div4>
<H5><A id=calculating-value-yearMonthDuration 
name=calculating-value-yearMonthDuration></A>10.3.1.2 Calculating the value from 
the lexical representation</H5>
<P>The value of a <CODE>xs:yearMonthDuration</CODE> lexical form is obtained by 
multiplying the value of the years component by 12 and adding the value of the 
months component. The value is positive or negative depending on the preceding 
sign.</P></DIV>
<DIV class=div4>
<H5><A id=canonical-yearMonthDuration 
name=canonical-yearMonthDuration></A>10.3.1.3 Canonical representation</H5>
<P>The canonical representation of <CODE>xs:yearMonthDuration</CODE> restricts 
the value of the months component to <CODE>xs:integer</CODE> values between 0 
and 11, both inclusive. To convert from a non-canonical representation to the 
canonical representation, the lexical representation is first converted to a 
value in <CODE>xs:integer</CODE> months as defined above. This value is then 
divided by 12 to obtain the value of the years component of the canonical 
representation. The remaining number of months is the value of the months 
component of the canonical representation. For negative durations, the canonical 
form is calculated using the absolute value of the duration and a negative sign 
is prepended to it. If a component has the value zero (0), then the number and 
the designator for that component <A class=termref title=must 
href="REC-xpath-functions-20070123.htm#must"><SPAN 
class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> be omitted. However, if 
the value is zero (0) months, the canonical form is "P0M".</P></DIV>
<DIV class=div4>
<H5><A id=order-yearMonthDuration name=order-yearMonthDuration></A>10.3.1.4 
Order relation on xs:yearMonthDuration</H5>
<P>Let the function that calculates the value of an 
<CODE>xs:yearMonthDuration</CODE> in the manner described above be called V(d). 
Then for two <CODE>xs:yearMonthDuration</CODE> values x and y, x &gt; y if and 
only if V(x) &gt; V(y). The order relation on <CODE>yearMonthDuration</CODE> is 
a total order.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=dt-dayTimeDuration name=dt-dayTimeDuration></A>10.3.2 
xs:dayTimeDuration</H4>
<P>[Definition] <CODE>xs:dayTimeDuration</CODE> is derived from 
<CODE>xs:duration</CODE> by restricting its lexical representation to contain 
only the days, hours, minutes and seconds components. The value space of 
<CODE>xs:dayTimeDuration</CODE> is the set of fractional second values. The 
components of <CODE>xs:dayTimeDuration</CODE> correspond to the day, hour, 
minute and second components defined in Section 5.5.3.2 of <A 
href="REC-xpath-functions-20070123.htm#ISO8601">[ISO 
8601]</A>, respectively.</P>
<DIV class=div4>
<H5><A id=lexical-dayTimeDuration name=lexical-dayTimeDuration></A>10.3.2.1 
Lexical representation</H5>
<P>The lexical representation for <CODE>xs:dayTimeDuration</CODE> is the <A 
href="REC-xpath-functions-20070123.htm#ISO8601">[ISO 
8601]</A> truncated format PnDTnHnMnS, where nD represents the number of days, T 
is the date/time separator, nH the number of hours, nM the number of minutes and 
nS the number of seconds.</P>
<P>The values of the days, hours and minutes components are not restricted, but 
allow an arbitrary unsigned <CODE>xs:integer</CODE>. Similarly, the value of the 
seconds component allows an arbitrary unsigned <CODE>xs:decimal</CODE>. An 
optional minus sign ('-') is allowed to precede the 'P', indicating a negative 
duration. If the sign is omitted, the duration is positive. See also <A 
href="REC-xpath-functions-20070123.htm#ISO8601">[ISO 
8601]</A> Date and Time Formats.</P>
<P>For example, to indicate a duration of 3 days, 10 hours and 30 minutes, one 
would write: P3DT10H30M. One could also indicate a duration of minus 120 days 
as: -P120D. Reduced precision and truncated representations of this format are 
allowed, provided they conform to the following:</P>
<UL>
  <LI>
  <P>If the number of days, hours, minutes, or seconds in any expression equals 
  zero (0), the number and its corresponding designator <A class=termref 
  title=may 
  href="REC-xpath-functions-20070123.htm#may"><SPAN 
  class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> be omitted. However, at 
  least one number and its designator <A class=termref title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> be present.</P>
  <LI>
  <P>The seconds part <A class=termref title=may 
  href="REC-xpath-functions-20070123.htm#may"><SPAN 
  class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> have a decimal 
  fraction.</P>
  <LI>
  <P>The designator 'T' <A class=termref title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> be absent if and only 
  if all of the time items are absent. The designator 'P' <A class=termref 
  title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> always be 
  present.</P></LI></UL>
<P>For example, P13D, PT47H, P3DT2H, -PT35.89S and P4DT251M are all allowed. 
P-134D is not allowed (invalid location of minus sign), although -P134D is 
allowed.</P></DIV>
<DIV class=div4>
<H5><A id=calculating-value-dayTimeDuration 
name=calculating-value-dayTimeDuration></A>10.3.2.2 Calculating the value of a 
xs:dayTimeDuration from the lexical representation</H5>
<P>The value of a <CODE>xs:dayTimeDuration</CODE> lexical form in fractional 
seconds is obtained by converting the days, hours, minutes and seconds value to 
fractional seconds using the conversion rules: 24 hours = 1 day, 60 minutes = 1 
hour and 60 seconds = 1 minute.</P></DIV>
<DIV class=div4>
<H5><A id=canonical-dayTimeDuration name=canonical-dayTimeDuration></A>10.3.2.3 
Canonical representation</H5>
<P>The canonical representation of <CODE>xs:dayTimeDuration</CODE> restricts the 
value of the hours component to <CODE>xs:integer</CODE> values between 0 and 23, 
both inclusive; the value of the minutes component to <CODE>xs:integer</CODE> 
values between 0 and 59; both inclusive; and the value of the seconds component 
to <CODE>xs:decimal</CODE> valued from 0.0 to 59.999... (see <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>, Appendix D).</P>
<P>To convert from a non-canonical representation to the canonical 
representation, the value of the lexical form in fractional seconds is first 
calculated in the manner described above. The value of the days component in the 
canonical form is then calculated by dividing the value by 86,400 (24*60*60). 
The remainder is in fractional seconds. The value of the hours component in the 
canonical form is calculated by dividing this remainder by 3,600 (60*60). The 
remainder is again in fractional seconds. The value of the minutes component in 
the canonical form is calculated by dividing this remainder by 60. The remainder 
in fractional seconds is the value of the seconds component in the canonical 
form. For negative durations, the canonical form is calculated using the 
absolute value of the duration and a negative sign is prepended to it. If a 
component has the value zero (0) then the number and the designator for that 
component must be omitted. However, if all the components of the lexical form 
are zero (0), the canonical form is "PT0S".</P></DIV>
<DIV class=div4>
<H5><A id=order-dayTimeDuration name=order-dayTimeDuration></A>10.3.2.4 Order 
relation on xs:dayTimeDuration</H5>
<P>Let the function that calculates the value of a 
<CODE>xs:dayTimeDuration</CODE> in the manner described above be called 
<EM>V(d)</EM>. Then for two <CODE>xs:dayTimeDuration</CODE> values <EM>x</EM> 
and <EM>y, x &gt; y</EM> if and only if <EM>V(x) &gt; V(y)</EM>. The order 
relation on <CODE>xs:dayTimeDuration</CODE> is a total 
order.</P></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=comp.duration.datetime name=comp.duration.datetime></A>10.4 Comparison 
Operators on Duration, Date and Time Values</H3>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Operator</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-less-than"><CODE>op:yearMonthDuration-less-than</CODE></A></TD>
    <TD>Less-than comparison on <CODE>xs:yearMonthDuration</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-greater-than"><CODE>op:yearMonthDuration-greater-than</CODE></A></TD>
    <TD>Greater-than comparison on <CODE>xs:yearMonthDuration</CODE> 
  values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-less-than"><CODE>op:dayTimeDuration-less-than</CODE></A></TD>
    <TD>Less-than comparison on <CODE>xs:dayTimeDuration</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-greater-than"><CODE>op:dayTimeDuration-greater-than</CODE></A></TD>
    <TD>Greater-than comparison on <CODE>xs:dayTimeDuration</CODE> 
values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-duration-equal"><CODE>op:duration-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:duration</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:dateTime</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-dateTime-less-than"><CODE>op:dateTime-less-than</CODE></A></TD>
    <TD>Less-than comparison on <CODE>xs:dateTime</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-dateTime-greater-than"><CODE>op:dateTime-greater-than</CODE></A></TD>
    <TD>Greater-than comparison on <CODE>xs:dateTime</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-date-equal"><CODE>op:date-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:date</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-date-less-than"><CODE>op:date-less-than</CODE></A></TD>
    <TD>Less-than comparison on <CODE>xs:date</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-date-greater-than"><CODE>op:date-greater-than</CODE></A></TD>
    <TD>Greater-than comparison on <CODE>xs:date</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-time-equal"><CODE>op:time-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:time</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-time-less-than"><CODE>op:time-less-than</CODE></A></TD>
    <TD>Less-than comparison on <CODE>xs:time</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-time-greater-than"><CODE>op:time-greater-than</CODE></A></TD>
    <TD>Greater-than comparison on <CODE>xs:time</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-gYearMonth-equal"><CODE>op:gYearMonth-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:gYearMonth</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-gYear-equal"><CODE>op:gYear-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:gYear</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-gMonthDay-equal"><CODE>op:gMonthDay-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:gMonthDay</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-gMonth-equal"><CODE>op:gMonth-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:gMonth</CODE> values</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-gDay-equal"><CODE>op:gDay-equal</CODE></A></TD>
    <TD>Equality comparison on <CODE>xs:gDay</CODE> values</TD></TR></TBODY></TABLE>
<P>The following comparison operators are defined on the <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> date, time and duration datatypes. 
Each operator takes two operands of the same type and returns an 
<CODE>xs:boolean</CODE> result. As discussed in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>, the order relation on 
<CODE>xs:duration</CODE> is not a total order but, rather, a partial order. For 
this reason, only equality is defined on <CODE>xs:duration</CODE>. A full 
complement of comparison and arithmetic functions are defined on the two 
subtypes of duration described in <A 
href="REC-xpath-functions-20070123.htm#duration-subtypes"><B>10.3 
Two Totally Ordered Subtypes of Duration</B></A> which do have a total 
order.</P>
<P><A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> also states that the order relation 
on date and time datatypes is not a total order but a partial order because 
these datatypes may or may not have a timezone. This is handled as follows. If 
either operand to a comparison function on date or time values does not have an 
(explicit) timezone then, for the purpose of the operation, an implicit 
timezone, provided by the dynamic context <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>, is assumed to be 
present as part of the value. This creates a total order for all date and time 
values.</P>
<P>An <CODE>xs:dateTime</CODE> can be considered to consist of seven components: 
<CODE>year</CODE>, <CODE>month</CODE>, <CODE>day</CODE>, <CODE>hour</CODE>, 
<CODE>minute</CODE>, <CODE>second</CODE> and <CODE>timezone</CODE>. For 
<CODE>xs:dateTime</CODE> six components: <CODE>year</CODE>, <CODE>month</CODE>, 
<CODE>day</CODE>, <CODE>hour</CODE>, <CODE>minute</CODE> and <CODE>second</CODE> 
are required and <CODE>timezone</CODE> is optional. For other date/time values, 
of the first six components, some are required and others must be absent or 
missing. <CODE>Timezone</CODE> is always optional. For example, for 
<CODE>xs:date</CODE>, the <CODE>year</CODE>, <CODE>month</CODE> and 
<CODE>day</CODE> components are required and <CODE>hour</CODE>, 
<CODE>minute</CODE> and <CODE>second</CODE> components must be absent; for 
<CODE>xs:time</CODE> the <CODE>hour</CODE>, <CODE>minute</CODE> and 
<CODE>second</CODE> components are required and <CODE>year</CODE>, 
<CODE>month</CODE> and <CODE>day</CODE> are missing; for <CODE>xs:gDay</CODE>, 
<CODE>day</CODE> is required and <CODE>year</CODE>, <CODE>month</CODE>, 
<CODE>hour</CODE>, <CODE>minute</CODE> and <CODE>second</CODE> are missing.</P>
<P>Values of the date/time datatypes <CODE>xs:time</CODE>, 
<CODE>xs:gMonthDay</CODE>, <CODE>xs:gMonth</CODE>, and <CODE>xs:gDay</CODE>, can 
be considered to represent a sequence of recurring time instants or time 
periods. An <CODE>xs:time</CODE> occurs every day. An <CODE>xs:gMonth</CODE> 
occurs every year. Comparison operators on these datatypes compare the starting 
instants of equivalent occurrences in the recurring series. These 
<CODE>xs:dateTime</CODE> values are calculated as described below.</P>
<P>Comparison operators on <CODE>xs:date</CODE>, <CODE>xs:gYearMonth</CODE> and 
<CODE>xs:gYear</CODE> compare their starting instants. These 
<CODE>xs:dateTime</CODE> values are calculated as described below.</P>
<P>The starting instant of an occurrence of a date/time value is an 
<CODE>xs:dateTime</CODE> calculated by filling in the missing components of the 
local value from a reference <CODE>xs:dateTime</CODE>. If the value filled in 
for a missing day component exceeds the maximum day value for the month, the 
last day of the month is used. Suppose, for example, that the reference 
<CODE>xs:dateTime</CODE> is <CODE>1972-12-31T00:00:00</CODE> and the 
<CODE>xs:date</CODE> value to be compared is <CODE>1993-03-31</CODE>. Filling in 
the time components from the reference <CODE>xs:dateTime</CODE> we get 
<CODE>1993-03-31T00:00:00</CODE> which is the starting instant of that day. 
Similarly, if the <CODE>xs:time</CODE> value <CODE>12:30:00</CODE> is to be 
compared, we fill in the missing components from the reference 
<CODE>xs:dateTime</CODE> and we get <CODE>1972-12-31T12:30:00</CODE> which is 
the time on that day. For an <CODE>xs:gYearMonth</CODE> value of 
<CODE>1976-02</CODE> we fill in the missing components, adjust for the last day 
in the month and get <CODE>1976-02-29T00:00:00</CODE>.</P>
<P>If the <CODE>xs:time</CODE> value written as <CODE>24:00:00</CODE> is to be 
compared, filling in the missing components gives 
<CODE>1972-12-31T00:00:00</CODE>, because <CODE>24:00:00</CODE> is an 
alternative representation of <CODE>00:00:00</CODE> (the lexical value 
<CODE>"24:00:00"</CODE> is converted to the time components {0,0,0} before the 
missing components are filled in). This has the consequence that when ordering 
<CODE>xs:time</CODE> values, <CODE>24:00:00</CODE> is considered to be earlier 
than <CODE>23:59:59</CODE>. However, when ordering <CODE>xs:dateTime</CODE> 
values, a time component of <CODE>24:00:00</CODE> is considered equivalent to 
<CODE>00:00:00</CODE> on the following day.</P>
<P>Note that the reference <CODE>xs:dateTime</CODE> does not have a timezone. 
The <CODE>timezone</CODE> component is never filled in from the reference 
<CODE>xs:dateTime</CODE>. In some cases, if the date/time value does not have a 
timezone, the implicit timezone from the dynamic context is used as the 
timezone.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>This proposal uses the reference <CODE>xs:dateTime 1972-12-31T00:00:00</CODE> 
in the description of the comparison operators. Implementations are allowed to 
use other reference <CODE>xs:dateTime</CODE> values as long as they yield the 
same results. The reference <CODE>xs:dateTime</CODE> used must meet the 
following constraints: when it is used to supply components into 
<CODE>xs:gMonthDay</CODE> values, the year must allow for February 29 and so 
must be a leap year; when it is used to supply missing components into 
<CODE>xs:gDay</CODE> values, the month must allow for 31 days. Different 
reference <CODE>xs:dateTime</CODE> values may be used for different 
operators.</P></DIV>
<DIV class=div3>
<H4><A id=func-yearMonthDuration-less-than 
name=func-yearMonthDuration-less-than></A>10.4.1 
op:yearMonthDuration-less-than</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:yearMonthDuration-less-than</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if <CODE>$arg1</CODE> is less 
than <CODE>$arg2</CODE>. Returns <CODE>false</CODE> otherwise.</P>
<P>This function backs up the "lt" and "le" operators on 
<CODE>xs:yearMonthDuration</CODE> values.</P></DIV>
<DIV class=div3>
<H4><A id=func-yearMonthDuration-greater-than 
name=func-yearMonthDuration-greater-than></A>10.4.2 
op:yearMonthDuration-greater-than</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:yearMonthDuration-greater-than</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if <CODE>$arg1</CODE> is 
greater than <CODE>$arg2</CODE>. Returns <CODE>false</CODE> otherwise.</P>
<P>This function backs up the "gt" and "ge" operators on 
<CODE>xs:yearMonthDuration</CODE> values.</P></DIV>
<DIV class=div3>
<H4><A id=func-dayTimeDuration-less-than 
name=func-dayTimeDuration-less-than></A>10.4.3 op:dayTimeDuration-less-than</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:dayTimeDuration-less-than</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if <CODE>$arg1</CODE> is less 
than <CODE>$arg2</CODE>. Returns <CODE>false</CODE> otherwise.</P>
<P>This function backs up the "lt" and "le" operators on 
<CODE>xs:dayTimeDuration</CODE> values.</P></DIV>
<DIV class=div3>
<H4><A id=func-dayTimeDuration-greater-than 
name=func-dayTimeDuration-greater-than></A>10.4.4 
op:dayTimeDuration-greater-than</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:dayTimeDuration-greater-than</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if <CODE>$arg1</CODE> is 
greater than <CODE>$arg2</CODE>. Returns <CODE>false</CODE> otherwise.</P>
<P>This function backs up the "gt" and "ge" operators on 
<CODE>xs:dayTimeDuration</CODE> values.</P></DIV>
<DIV class=div3>
<H4><A id=func-duration-equal name=func-duration-equal></A>10.4.5 
op:duration-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:duration-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:duration</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:duration</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the 
<CODE>xs:yearMonthDuration</CODE> and the <CODE>xs:dayTimeDuration</CODE> 
components of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> compare equal 
respectively. Returns <CODE>false</CODE> otherwise.</P>
<P>This function backs up the "eq" and "ne" operators on 
<CODE>xs:duration</CODE> values.</P>
<P>Note that this function, like any other, may be applied to arguments that are 
derived from the types given in the function signature, including the two 
subtypes <CODE>xs:dayTimeDuration</CODE> and <CODE>xs:yearMonthDuration</CODE>. 
With the exception of the zero-length duration, no instance of 
<CODE>xs:dayTimeDuration</CODE> can ever be equal to an instance of 
<CODE>xs:yearMonthDuration</CODE>.</P>
<P>The semantics of this function are:</P>
<DIV class=exampleInner><PRE>xs:yearMonthDuration($arg1) div xs:yearMonthDuration('P1M')  eq
xs:yearMonthDuration($arg2) div xs:yearMonthDuration('P1M')
    and
xs:dayTimeDuration($arg1) div xs:dayTimeDuration('PT1S')  eq
xs:dayTimeDuration($arg2) div xs:dayTimeDuration('PT1S')
</PRE></DIV>
<P>that is, the function returns <CODE>true</CODE> if the months and seconds 
values of the two durations are equal.</P>
<DIV class=div4>
<H5><A id=func-duration-equal-examples 
name=func-duration-equal-examples></A>10.4.5.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:duration-equal(xs:duration("P1Y"), xs:duration("P12M"))</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:duration("PT24H"), xs:duration("P1D"))</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:duration("P1Y"), xs:duration("P365D"))</CODE> 
  returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:yearMonthDuration("P0Y"), 
  xs:dayTimeDuration("PT0D"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:yearMonthDuration("P1Y"), 
  xs:dayTimeDuration("PT365D"))</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:yearMonthDuration("P2Y"), 
  xs:yearMonthDuration("P24M"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:dayTimeDuration("PT10D"), 
  xs:dayTimeDuration("PT240H"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:duration("P2Y0M0DT0H0M0S"), 
  xs:yearMonthDuration("P24M"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:duration-equal(xs:duration("P0Y0M10D"), 
  xs:dayTimeDuration("PT240H"))</CODE> returns 
<CODE>true</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-dateTime-equal name=func-dateTime-equal></A>10.4.6 
op:dateTime-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:dateTime-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:dateTime</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the value of 
<CODE>$arg1</CODE> is equal to the value of <CODE>$arg2</CODE> according to the 
algorithm defined in section 3.2.7.4 of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> "Order relation on dateTime" for 
<CODE>xs:dateTime</CODE> values with timezones. Returns <CODE>false</CODE> 
otherwise.</P>
<P>This function backs up the "eq", "ne", "le" and "ge" operators on 
<CODE>xs:dateTime</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-dateTime-equal-examples 
name=func-dateTime-equal-examples></A>10.4.6.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:dateTime-equal(xs:dateTime("2002-04-02T12:00:00-01:00"), 
  xs:dateTime("2002-04-02T17:00:00+04:00"))</CODE> returns 
<CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:dateTime-equal(xs:dateTime("2002-04-02T12:00:00"), 
  xs:dateTime("2002-04-02T23:00:00+06:00"))</CODE> returns 
<CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:dateTime-equal(xs:dateTime("2002-04-02T12:00:00"), 
  xs:dateTime("2002-04-02T17:00:00"))</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>op:dateTime-equal(xs:dateTime("2002-04-02T12:00:00"), 
  xs:dateTime("2002-04-02T12:00:00"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:dateTime-equal(xs:dateTime("2002-04-02T23:00:00-04:00"), 
  xs:dateTime("2002-04-03T02:00:00-01:00"))</CODE> returns 
<CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:dateTime-equal(xs:dateTime("1999-12-31T24:00:00"), 
  xs:dateTime("2000-01-01T00:00:00"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:dateTime-equal(xs:dateTime("2005-04-04T24:00:00"), 
  xs:dateTime("2005-04-04T00:00:00"))</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-dateTime-less-than name=func-dateTime-less-than></A>10.4.7 
op:dateTime-less-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:dateTime-less-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:dateTime</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the value of 
<CODE>$arg1</CODE> is less than the value of <CODE>$arg2</CODE> according to the 
algorithm defined in section 3.2.7.4 of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> "Order relation on dateTime" for 
<CODE>xs:dateTime</CODE> values with timezones. Returns <CODE>false</CODE> 
otherwise.</P>
<P>This function backs up the "lt" and "le" operators on 
<CODE>xs:dateTime</CODE> values.</P></DIV>
<DIV class=div3>
<H4><A id=func-dateTime-greater-than name=func-dateTime-greater-than></A>10.4.8 
op:dateTime-greater-than</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:dateTime-greater-than</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the value of 
<CODE>$arg1</CODE> is greater than the value of <CODE>$arg2</CODE> according to 
the algorithm defined in section 3.2.7.4 of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> "Order relation on dateTime" for 
<CODE>xs:dateTime</CODE> values with timezones. Returns <CODE>false</CODE> 
otherwise.</P>
<P>This function backs up the "gt" and "ge" operators on 
<CODE>xs:dateTime</CODE> values.</P></DIV>
<DIV class=div3>
<H4><A id=func-date-equal name=func-date-equal></A>10.4.9 op:date-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:date-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:date</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the starting instant of 
<CODE>$arg1</CODE> is equal to starting instant of <CODE>$arg2</CODE>. Returns 
<CODE>false</CODE> otherwise.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at time <CODE>00:00:00</CODE> on that date.</P>
<P>The two starting instants are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>.</P>
<P>This function backs up the "eq", "ne", "le" and "ge" operators on 
<CODE>xs:date</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-date-equal-examples name=func-date-equal-examples></A>10.4.9.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:date-equal(xs:date("2004-12-25Z"), 
  xs:date("2004-12-25+07:00"))</CODE> returns <CODE>false</CODE>. The starting 
  instants are <CODE>xs:dateTime("2004-12-25T00:00:00Z")</CODE> and 
  <CODE>xs:dateTime("2004-12-25T00:00:00+07:00")</CODE>. These are normalized to 
  <CODE>xs:dateTime("2004-12-25T00:00:00Z")</CODE> and 
  <CODE>xs:dateTime("2004-12-24T17:00:00Z")</CODE>.</P>
  <LI>
  <P><CODE>op:date-equal(xs:date("2004-12-25-12:00"), 
  xs:date("2004-12-26+12:00"))</CODE> returns 
<CODE>true</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-date-less-than name=func-date-less-than></A>10.4.10 
op:date-less-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:date-less-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:date</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the starting instant of 
<CODE>$arg1</CODE> is less than the starting instant of <CODE>$arg2</CODE>. 
Returns <CODE>false</CODE> otherwise.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at time <CODE>00:00:00</CODE> on that date.</P>
<P>The two starting instants are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-less-than"><CODE>op:dateTime-less-than</CODE></A>.</P>
<P>This function backs up the "lt" and "le" operators on <CODE>xs:date</CODE> 
values.</P>
<DIV class=div4>
<H5><A id=func-date-less-than-examples 
name=func-date-less-than-examples></A>10.4.10.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:date-less-than(xs:date("2004-12-25Z"), 
  xs:date("2004-12-25-05:00"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:date-less-than(xs:date("2004-12-25-12:00"), 
  xs:date("2004-12-26+12:00"))</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-date-greater-than name=func-date-greater-than></A>10.4.11 
op:date-greater-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:date-greater-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:date</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the starting instant of 
<CODE>$arg1</CODE> is greater than the starting instant of <CODE>$arg2</CODE>. 
Returns <CODE>false</CODE> otherwise.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at time <CODE>00:00:00</CODE> on that date.</P>
<P>The two starting instants are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-greater-than"><CODE>op:dateTime-greater-than</CODE></A>.</P>
<P>This function backs up the "gt" and "ge" operators on <CODE>xs:date</CODE> 
values.</P>
<DIV class=div4>
<H5><A id=date-greater-than-examples 
name=date-greater-than-examples></A>10.4.11.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:date-greater-than(xs:date("2004-12-25Z"), 
  xs:date("2004-12-25+07:00"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:date-greater-than(xs:date("2004-12-25-12:00"), 
  xs:date("2004-12-26+12:00"))</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-time-equal name=func-time-equal></A>10.4.12 op:time-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:time-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:time</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the value of 
<CODE>$arg1</CODE> converted to an <CODE>xs:dateTime</CODE> using the date 
components from the reference <CODE>xs:dateTime</CODE> is equal to the value of 
<CODE>$arg2</CODE> converted to an <CODE>xs:dateTime</CODE> using the date 
components from the same reference <CODE>xs:dateTime</CODE>. Returns 
<CODE>false</CODE> otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>.</P>
<P>This function backs up the "eq", "ne", "le" and "ge" operators on 
<CODE>xs:time</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-time-equals-examples name=func-time-equals-examples></A>10.4.12.1 
Examples</H5>
<P>Assume that the date components from the reference <CODE>xs:dateTime</CODE> 
correspond to <CODE>1972-12-31</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:time-equal(xs:time("08:00:00+09:00"), 
  xs:time("17:00:00-06:00"))</CODE> returns <CODE>false</CODE>. The 
  <CODE>xs:dateTime</CODE>s calculated using the reference date components are 
  <CODE>1972-12-31T08:00:00+09:00</CODE> and 
  <CODE>1972-12-31T17:00:00-06:00</CODE>. These normalize to 
  <CODE>1972-12-30T23:00:00Z</CODE> and <CODE>1972-12-31T23:00:00</CODE>.</P>
  <LI>
  <P><CODE>op:time-equal(xs:time("21:30:00+10:30"), 
  xs:time("06:00:00-05:00"))</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:time-equal(xs:time("24:00:00+01:00"), 
  xs:time("00:00:00+01:00"))</CODE> returns <CODE>true</CODE>. This not the 
  result one might expect. For <CODE>xs:dateTime</CODE> values, a time of 
  <CODE>24:00:00</CODE> is equivalent to <CODE>00:00:00</CODE> on the following 
  day. For <CODE>xs:time</CODE>, the normalization from <CODE>24:00:00</CODE> to 
  <CODE>00:00:00</CODE> happens before the <CODE>xs:time</CODE> is converted 
  into an <CODE>xs:dateTime</CODE> for the purpose of the equality comparison. 
  For <CODE>xs:time</CODE>, any operation on <CODE>24:00:00</CODE> produces the 
  same result as the same operation on <CODE>00:00:00</CODE> because these are 
  two different lexical representations of the same 
value.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-time-less-than name=func-time-less-than></A>10.4.13 
op:time-less-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:time-less-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:time</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the value of 
<CODE>$arg1</CODE> converted to an <CODE>xs:dateTime</CODE> using the date 
components from the reference <CODE>xs:dateTime</CODE> is less than the 
normalized value of <CODE>$arg2</CODE> converted to an <CODE>xs:dateTime</CODE> 
using the date components from the same reference <CODE>xs:dateTime</CODE>. 
Returns <CODE>false</CODE> otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-less-than"><CODE>op:dateTime-less-than</CODE></A>.</P>
<P>This function backs up the "lt" and "le" operators on <CODE>xs:time</CODE> 
values.</P>
<DIV class=div4>
<H5><A id=func-time-less-than-examples 
name=func-time-less-than-examples></A>10.4.13.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:time-less-than(xs:time("12:00:00"), 
  xs:time("23:00:00+06:00"))</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>op:time-less-than(xs:time("11:00:00"), xs:time("17:00:00Z"))</CODE> 
  returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:time-less-than(xs:time("23:59:59"), xs:time("24:00:00"))</CODE> 
  returns <CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-time-greater-than name=func-time-greater-than></A>10.4.14 
op:time-greater-than</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:time-greater-than</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:time</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the value of 
<CODE>$arg1</CODE> converted to an <CODE>xs:dateTime</CODE> using the date 
components from the reference <CODE>xs:dateTime</CODE> is greater than the value 
of <CODE>$arg2</CODE> converted to an <CODE>xs:dateTime</CODE> using the date 
components from the same reference <CODE>xs:dateTime</CODE>. Returns 
<CODE>false</CODE> otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-greater-than"><CODE>op:dateTime-greater-than</CODE></A>.</P>
<P>This function backs up the "gt" and "ge" operators on <CODE>xs:time</CODE> 
values.</P>
<DIV class=div4>
<H5><A id=func-time-greater-than-examples 
name=func-time-greater-than-examples></A>10.4.14.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:time-greater-than(xs:time("08:00:00+09:00"), 
  xs:time("17:00:00-06:00"))</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-gYearMonth-equal name=func-gYearMonth-equal></A>10.4.15 
op:gYearMonth-equal</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:gYearMonth-equal</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:gYearMonth</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:gYearMonth</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the 
<CODE>xs:dateTime</CODE>s representing the starting instants of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> compare equal. The starting instants 
of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> are calculated by adding the 
missing components of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> from the 
<CODE>xs:dateTime</CODE> template <CODE>xxxx-xx-ddT00:00:00</CODE> where 
<CODE>dd</CODE> represents the last day of the <CODE>month</CODE> component in 
<CODE>$arg1</CODE> or <CODE>$arg2</CODE>. Returns <CODE>false</CODE> 
otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values representing the starting instants of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>.</P>
<P>This function backs up the "eq" and "ne" operators on 
<CODE>xs:gYearMonth</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-gYearMonth-equal-examples 
name=func-gYearMonth-equal-examples></A>10.4.15.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:gYearMonth-equal(xs:gYearMonth("1976-02"), 
  xs:gYearMonth("1976-03Z"))</CODE> returns <CODE>false</CODE>. The starting 
  instants are <CODE>1972-02-29T00:00:00-05:00</CODE> and 
  <CODE>1972-03-31T00:00:00Z</CODE>, respectively.</P>
  <LI>
  <P><CODE>op:gYearMonth-equal(xs:gYearMonth("1976-03"), 
  xs:gYearMonth("1976-03Z"))</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-gYear-equal name=func-gYear-equal></A>10.4.16 op:gYear-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:gYear-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:gYear</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:gYear</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the 
<CODE>xs:dateTime</CODE>s representing the starting instants of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> compare equal. The starting instants 
of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> are calculated by adding the 
missing components of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> from a 
<CODE>xs:dateTime</CODE> template such as <CODE>xxxx-01-01T00:00:00</CODE>. 
Returns <CODE>false</CODE> otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values representing the starting instants of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> are compared using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>.</P>
<P>This function backs up the "eq" and "ne" operators on <CODE>xs:gYear</CODE> 
values.</P>
<DIV class=div4>
<H5><A id=func-gYear-equal-examples name=func-gYear-equal-examples></A>10.4.16.1 
Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>. Assume, also, that the <CODE>xs:dateTime</CODE> template is 
<CODE>xxxx-01-01T00:00:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:gYear-equal(xs:gYear("2005-12:00"), xs:gYear("2005+12:00"))</CODE> 
  returns <CODE>false</CODE>. The starting instants are 
  <CODE>2005-01-01T00:00:00-12:00</CODE> and 
  <CODE>2005-01-01T00:00:00+12:00</CODE>, respectively, and normalize to 
  <CODE>2005-01-015T12:00:00Z</CODE> and <CODE>2004-12-31T12:00:00Z</CODE>.</P>
  <LI>
  <P><CODE>op:gYear-equal(xs:gYear("1976-05:00"), xs:gYear("1976"))</CODE> 
  returns <CODE>true</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-gMonthDay-equal name=func-gMonthDay-equal></A>10.4.17 
op:gMonthDay-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:gMonthDay-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:gMonthDay</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:gMonthDay</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Summary: Returns <CODE>true</CODE> if and only if the 
<CODE>xs:dateTime</CODE>s representing the starting instants of equivalent 
occurrences of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> compare equal. The 
starting instants of equivalent occurrences of <CODE>$arg1</CODE> and 
<CODE>$arg2</CODE> are calculated by adding the missing components of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> from an <CODE>xs:dateTime</CODE> 
template such as <CODE>1972-xx-xxT00:00:00</CODE>. Returns <CODE>false</CODE> 
otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values representing the starting instants of 
equivalent occurrences of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> are compared 
using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>.</P>
<P>This function backs up the "eq" and "ne" operators on 
<CODE>xs:gMonthDay</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-gMonthDay-equal-examples 
name=func-gMonthDay-equal-examples></A>10.4.17.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>. Assume, also, that the <CODE>xs:dateTime</CODE> template is 
<CODE>1976-xx-xxT00:00:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:gMonthDay-equal(xs:gMonthDay("--12-25-14:00"), 
  xs:gMonthDay("--12-26+10:00"))</CODE> returns <CODE>true</CODE>. The starting 
  instants are <CODE>1976-12-25T00:00:00-14:00</CODE> and 
  <CODE>1976-12-26T00:00:00+10:00</CODE>, respectively, and normalize to 
  <CODE>1976-12-25T14:00:00Z</CODE> and <CODE>1976-12-25T14:00:00Z</CODE>.</P>
  <LI>
  <P><CODE>op:gMonthDay-equal(xs:gMonthDay("--12-25"), 
  xs:gMonthDay("--12-26Z"))</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-gMonth-equal name=func-gMonth-equal></A>10.4.18 
op:gMonth-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:gMonth-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:gMonth</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:gMonth</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the 
<CODE>xs:dateTime</CODE>s representing the starting instants of equivalent 
occurrences of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> compare equal. The 
starting instants of equivalent occurrences of <CODE>$arg1</CODE> and 
<CODE>$arg2</CODE> are calculated by adding the missing components of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> from an <CODE>xs:dateTime</CODE> 
template such as <CODE>1972-xx-ddT00:00:00</CODE> where <CODE>dd</CODE> 
represents the last day of the month component in <CODE>$arg1</CODE> or 
<CODE>$arg2</CODE>. Returns <CODE>false</CODE> otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values representing the starting instants of 
equivalent occurrences of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> are compared 
using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>.</P>
<P>This function backs up the "eq" and "ne" operators on <CODE>xs:gMonth</CODE> 
values.</P>
<DIV class=div4>
<H5><A id=func-gMonth-equal-examples 
name=func-gMonth-equal-examples></A>10.4.18.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>. Assume, also, that the <CODE>xs:dateTime</CODE> template is 
<CODE>1972-xx-29T00:00:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:gMonth-equal(xs:gMonth("--12-14:00"), 
  xs:gMonth("--12+10:00")</CODE> returns <CODE>false</CODE>. The starting 
  instants are <CODE>1972-12-29T00:00:00-14:00</CODE> and 
  <CODE>1972-12-29T00:00:00+10:00</CODE>, respectively, and normalize to 
  <CODE>1972-12-29T14:00:00Z</CODE> and <CODE>1972-12-28T14:00:00Z</CODE>.</P>
  <LI>
  <P><CODE>op:gMonth-equal(xs:gMonth("--12"), xs:gMonth("--12Z"))</CODE> returns 
  <CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-gDay-equal name=func-gDay-equal></A>10.4.19 op:gDay-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:gDay-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:gDay</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:gDay</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if and only if the 
<CODE>xs:dateTime</CODE>s representing the starting instants of equivalent 
occurrences of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> compare equal. The 
starting instants of equivalent occurrences of <CODE>$arg1</CODE> and 
<CODE>$arg2</CODE> are calculated by adding the missing components of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> from an <CODE>xs:dateTime</CODE> 
template such as <CODE>1972-12-xxT00:00:00</CODE>. Returns <CODE>false</CODE> 
otherwise.</P>
<P>The two <CODE>xs:dateTime</CODE> values representing the starting instants of 
equivalent occurrences of <CODE>$arg1</CODE> and <CODE>$arg2</CODE> are compared 
using <A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>.</P>
<P>This function backs up the "eq" and "ne" operators on <CODE>xs:gDay</CODE> 
values.</P>
<DIV class=div4>
<H5><A id=func-gDay-equal-examples name=func-gDay-equal-examples></A>10.4.19.1 
Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>. Assume, also, that the <CODE>xs:dateTime</CODE> template is 
<CODE>1976-12-xxT00:00:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:gDay-equal(xs:gDay("---25-14:00"), xs:gDay("---25+10:00"))</CODE> 
  returns <CODE>false</CODE>. The starting instants are 
  <CODE>1972-12-25T00:00:00-14:00</CODE> and 
  <CODE>1972-12-25T00:00:00+10:00</CODE>, respectively, and normalize to 
  <CODE>1972-12-25T14:00:00Z</CODE> and <CODE>1972-12-24T14:00:00Z</CODE>.</P>
  <LI>
  <P><CODE>op:gDay-equal(xs:gDay("---12"), xs:gDay("---12Z"))</CODE> returns 
  <CODE>false</CODE>.</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=component-extraction-functions 
name=component-extraction-functions></A>10.5 Component Extraction Functions on 
Durations, Dates and Times</H3>
<P>The duration, date and time datatypes may be considered to be composite 
datatypes in that they contain distinct properties or components. The extraction 
functions specified below extract a single component from a duration, date or 
time value. For the date/time datatypes the local value is used. For 
<CODE>xs:duration</CODE> and its subtypes, including the two subtypes 
<CODE>xs:yearMonthDuration</CODE> and <CODE>xs:dayTimeDuration</CODE>, the 
components are normalized: this means that the seconds and minutes components 
will always be less than 60, the hours component less than 24, and the months 
component less than 12.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-years-from-duration"><CODE>fn:years-from-duration</CODE></A></TD>
    <TD>Returns the year component of an <CODE>xs:duration</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-months-from-duration"><CODE>fn:months-from-duration</CODE></A></TD>
    <TD>Returns the months component of an <CODE>xs:duration</CODE> 
  value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-days-from-duration"><CODE>fn:days-from-duration</CODE></A></TD>
    <TD>Returns the days component of an <CODE>xs:duration</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-hours-from-duration"><CODE>fn:hours-from-duration</CODE></A></TD>
    <TD>Returns the hours component of an <CODE>xs:duration</CODE> 
value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-minutes-from-duration"><CODE>fn:minutes-from-duration</CODE></A></TD>
    <TD>Returns the minutes component of an <CODE>xs:duration</CODE> 
  value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-seconds-from-duration"><CODE>fn:seconds-from-duration</CODE></A></TD>
    <TD>Returns the seconds component of an <CODE>xs:duration</CODE> 
  value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-year-from-dateTime"><CODE>fn:year-from-dateTime</CODE></A></TD>
    <TD>Returns the year from an <CODE>xs:dateTime</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-month-from-dateTime"><CODE>fn:month-from-dateTime</CODE></A></TD>
    <TD>Returns the month from an <CODE>xs:dateTime</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-day-from-dateTime"><CODE>fn:day-from-dateTime</CODE></A></TD>
    <TD>Returns the day from an <CODE>xs:dateTime</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-hours-from-dateTime"><CODE>fn:hours-from-dateTime</CODE></A></TD>
    <TD>Returns the hours from an <CODE>xs:dateTime</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-minutes-from-dateTime"><CODE>fn:minutes-from-dateTime</CODE></A></TD>
    <TD>Returns the minutes from an <CODE>xs:dateTime</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-seconds-from-dateTime"><CODE>fn:seconds-from-dateTime</CODE></A></TD>
    <TD>Returns the seconds from an <CODE>xs:dateTime</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-timezone-from-dateTime"><CODE>fn:timezone-from-dateTime</CODE></A></TD>
    <TD>Returns the timezone from an <CODE>xs:dateTime</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-year-from-date"><CODE>fn:year-from-date</CODE></A></TD>
    <TD>Returns the year from an <CODE>xs:date</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-month-from-date"><CODE>fn:month-from-date</CODE></A></TD>
    <TD>Returns the month from an <CODE>xs:date</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-day-from-date"><CODE>fn:day-from-date</CODE></A></TD>
    <TD>Returns the day from an <CODE>xs:date</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-timezone-from-date"><CODE>fn:timezone-from-date</CODE></A></TD>
    <TD>Returns the timezone from an <CODE>xs:date</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-hours-from-time"><CODE>fn:hours-from-time</CODE></A></TD>
    <TD>Returns the hours from an <CODE>xs:time</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-minutes-from-time"><CODE>fn:minutes-from-time</CODE></A></TD>
    <TD>Returns the minutes from an <CODE>xs:time</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-seconds-from-time"><CODE>fn:seconds-from-time</CODE></A></TD>
    <TD>Returns the seconds from an <CODE>xs:time</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-timezone-from-time"><CODE>fn:timezone-from-time</CODE></A></TD>
    <TD>Returns the timezone from an <CODE>xs:time</CODE> 
value.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-years-from-duration name=func-years-from-duration></A>10.5.1 
fn:years-from-duration</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:years-from-duration</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:duration?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> representing the years component 
in the value of <CODE>$arg</CODE>. The result is obtained by casting 
<CODE>$arg</CODE> to an <CODE>xs:yearMonthDuration</CODE> (see <A 
href="REC-xpath-functions-20070123.htm#casting-to-durations"><B>17.1.4 
Casting to duration types</B></A>) and then computing the years component as 
described in <A 
href="REC-xpath-functions-20070123.htm#canonical-yearMonthDuration"><B>10.3.1.3 
Canonical representation</B></A>.</P>
<P>The result may be negative.</P>
<P>If <CODE>$arg</CODE> is an <CODE>xs:dayTimeDuration</CODE> returns 0.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-years-from-duration-examples 
name=func-years-from-duration-examples></A>10.5.1.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:years-from-duration(xs:yearMonthDuration("P20Y15M"))</CODE> 
  returns <CODE>21</CODE>.</P>
  <LI>
  <P><CODE>fn:years-from-duration(xs:yearMonthDuration("-P15M"))</CODE> returns 
  <CODE>-1</CODE>.</P>
  <LI>
  <P><CODE>fn:years-from-duration(xs:dayTimeDuration("-P2DT15H"))</CODE> returns 
  <CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-months-from-duration name=func-months-from-duration></A>10.5.2 
fn:months-from-duration</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:months-from-duration</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:duration?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> representing the months component 
in the value of <CODE>$arg</CODE>. The result is obtained by casting 
<CODE>$arg</CODE> to an <CODE>xs:yearMonthDuration</CODE> (see <A 
href="REC-xpath-functions-20070123.htm#casting-to-durations"><B>17.1.4 
Casting to duration types</B></A>) and then computing the months component as 
described in <A 
href="REC-xpath-functions-20070123.htm#canonical-yearMonthDuration"><B>10.3.1.3 
Canonical representation</B></A>.</P>
<P>The result may be negative.</P>
<P>If <CODE>$arg</CODE> is an <CODE>xs:dayTimeDuration</CODE> returns 0.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-months-from-duration-examples 
name=func-months-from-duration-examples></A>10.5.2.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:months-from-duration(xs:yearMonthDuration("P20Y15M"))</CODE> 
  returns <CODE>3</CODE>.</P>
  <LI>
  <P><CODE>fn:months-from-duration(xs:yearMonthDuration("-P20Y18M"))</CODE> 
  returns <CODE>-6</CODE>.</P>
  <LI>
  <P><CODE>fn:months-from-duration(xs:dayTimeDuration("-P2DT15H0M0S"))</CODE> 
  returns <CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-days-from-duration name=func-days-from-duration></A>10.5.3 
fn:days-from-duration</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:days-from-duration</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:duration?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> representing the days component 
in the value of <CODE>$arg</CODE>. The result is obtained by casting 
<CODE>$arg</CODE> to an <CODE>xs:dayTimeDuration</CODE> (see <A 
href="REC-xpath-functions-20070123.htm#casting-to-durations"><B>17.1.4 
Casting to duration types</B></A>) and then computing the days component as 
described in <A 
href="REC-xpath-functions-20070123.htm#canonical-dayTimeDuration"><B>10.3.2.3 
Canonical representation</B></A>.</P>
<P>The result may be negative.</P>
<P>If <CODE>$arg</CODE> is an <CODE>xs:yearMonthDuration</CODE> returns 0.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-days-from-duration-examples 
name=func-days-from-duration-examples></A>10.5.3.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:days-from-duration(xs:dayTimeDuration("P3DT10H"))</CODE> returns 
  <CODE>3</CODE>.</P>
  <LI>
  <P><CODE>fn:days-from-duration(xs:dayTimeDuration("P3DT55H"))</CODE> returns 
  <CODE>5</CODE>.</P>
  <LI>
  <P><CODE>fn:days-from-duration(xs:yearMonthDuration("P3Y5M"))</CODE> returns 
  <CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-hours-from-duration name=func-hours-from-duration></A>10.5.4 
fn:hours-from-duration</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:hours-from-duration</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:duration?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> representing the hours component 
in the value of <CODE>$arg</CODE>. The result is obtained by casting 
<CODE>$arg</CODE> to an <CODE>xs:dayTimeDuration</CODE> (see <A 
href="REC-xpath-functions-20070123.htm#casting-to-durations"><B>17.1.4 
Casting to duration types</B></A>) and then computing the hours component as 
described in <A 
href="REC-xpath-functions-20070123.htm#canonical-dayTimeDuration"><B>10.3.2.3 
Canonical representation</B></A>.</P>
<P>The result may be negative.</P>
<P>If <CODE>$arg</CODE> is an <CODE>xs:yearMonthDuration</CODE> returns 0.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-hours-from-duration-examples 
name=func-hours-from-duration-examples></A>10.5.4.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:hours-from-duration(xs:dayTimeDuration("P3DT10H"))</CODE> returns 
  <CODE>10</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-duration(xs:dayTimeDuration("P3DT12H32M12S"))</CODE> 
  returns <CODE>12</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-duration(xs:dayTimeDuration("PT123H"))</CODE> returns 
  <CODE>3</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-duration(xs:dayTimeDuration("-P3DT10H"))</CODE> returns 
  <CODE>-10</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-minutes-from-duration name=func-minutes-from-duration></A>10.5.5 
fn:minutes-from-duration</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:minutes-from-duration</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:duration?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> representing the minutes 
component in the value of <CODE>$arg</CODE>. The result is obtained by casting 
<CODE>$arg</CODE> to an <CODE>xs:dayTimeDuration</CODE> (see <A 
href="REC-xpath-functions-20070123.htm#casting-to-durations"><B>17.1.4 
Casting to duration types</B></A>) and then computing the minutes component as 
described in <A 
href="REC-xpath-functions-20070123.htm#canonical-dayTimeDuration"><B>10.3.2.3 
Canonical representation</B></A>.</P>
<P>The result may be negative.</P>
<P>If <CODE>$arg</CODE> is an <CODE>xs:yearMonthDuration</CODE> returns 0.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-minutes-from-duration-examples 
name=func-minutes-from-duration-examples></A>10.5.5.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:minutes-from-duration(xs:dayTimeDuration("P3DT10H"))</CODE> 
  returns <CODE>0</CODE>.</P>
  <LI>
  <P><CODE>fn:minutes-from-duration(xs:dayTimeDuration("-P5DT12H30M"))</CODE> 
  returns <CODE>-30</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-seconds-from-duration name=func-seconds-from-duration></A>10.5.6 
fn:seconds-from-duration</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:seconds-from-duration</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:duration?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:decimal?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:decimal</CODE> representing the seconds 
component in the value of <CODE>$arg</CODE>. The result is obtained by casting 
<CODE>$arg</CODE> to an <CODE>xs:dayTimeDuration</CODE> (see <A 
href="REC-xpath-functions-20070123.htm#casting-to-durations"><B>17.1.4 
Casting to duration types</B></A>) and then computing the seconds component as 
described in <A 
href="REC-xpath-functions-20070123.htm#canonical-dayTimeDuration"><B>10.3.2.3 
Canonical representation</B></A>.</P>
<P>The result may be negative.</P>
<P>If <CODE>$arg</CODE> is an <CODE>xs:yearMonthDuration</CODE> returns 0.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-seconds-from-duration-examples 
name=func-seconds-from-duration-examples></A>10.5.6.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:seconds-from-duration(xs:dayTimeDuration("P3DT10H12.5S"))</CODE> 
  returns <CODE>12.5</CODE>.</P>
  <LI>
  <P><CODE>fn:seconds-from-duration(xs:dayTimeDuration("-P256S"))</CODE> returns 
  <CODE>-16.0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-year-from-dateTime name=func-year-from-dateTime></A>10.5.7 
fn:year-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:year-from-dateTime</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> representing the year component 
in the localized value of <CODE>$arg</CODE>. The result may be negative.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-year-from-dateTime-examples 
name=func-year-from-dateTime-examples></A>10.5.7.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:year-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</CODE> 
  returns <CODE>1999</CODE>.</P>
  <LI>
  <P><CODE>fn:year-from-dateTime(xs:dateTime("1999-05-31T21:30:00-05:00"))</CODE> 
  returns <CODE>1999</CODE>.</P>
  <LI>
  <P><CODE>fn:year-from-dateTime(xs:dateTime("1999-12-31T19:20:00"))</CODE> 
  returns <CODE>1999</CODE>.</P>
  <LI>
  <P><CODE>fn:year-from-dateTime(xs:dateTime("1999-12-31T24:00:00"))</CODE> 
  returns <CODE>2000</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-month-from-dateTime name=func-month-from-dateTime></A>10.5.8 
fn:month-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:month-from-dateTime</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> between 1 and 12, both inclusive, 
representing the month component in the localized value of 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-month-from-dateTime-examples 
name=func-month-from-dateTime-examples></A>10.5.8.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:month-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</CODE> 
  returns <CODE>5</CODE>.</P>
  <LI>
  <P><CODE>fn:month-from-dateTime(xs:dateTime("1999-12-31T19:20:00-05:00"))</CODE> 
  returns <CODE>12</CODE>.</P>
  <LI>
  <P><CODE>fn:month-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T19:20:00-05:00"), 
  xs:dayTimeDuration("PT0S")))</CODE> returns 
<CODE>1</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-day-from-dateTime name=func-day-from-dateTime></A>10.5.9 
fn:day-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:day-from-dateTime</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> between 1 and 31, both inclusive, 
representing the day component in the localized value of <CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-day-from-dateTime-examples 
name=func-day-from-dateTime-examples></A>10.5.9.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:day-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</CODE> 
  returns <CODE>31</CODE>.</P>
  <LI>
  <P><CODE>fn:day-from-dateTime(xs:dateTime("1999-12-31T20:00:00-05:00"))</CODE> 
  returns <CODE>31</CODE>.</P>
  <LI>
  <P><CODE>fn:day-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T19:20:00-05:00"), 
  xs:dayTimeDuration("PT0S")))</CODE> returns 
<CODE>1</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-hours-from-dateTime name=func-hours-from-dateTime></A>10.5.10 
fn:hours-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:hours-from-dateTime</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> between 0 and 23, both inclusive, 
representing the hours component in the localized value of 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-hours-from-dateTime-examples 
name=func-hours-from-dateTime-examples></A>10.5.10.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:hours-from-dateTime(xs:dateTime("1999-05-31T08:20:00-05:00"))</CODE> 
  returns <CODE>8</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-dateTime(xs:dateTime("1999-12-31T21:20:00-05:00"))</CODE> 
  returns <CODE>21</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-dateTime(fn:adjust-dateTime-to-timezone(xs:dateTime("1999-12-31T21:20:00-05:00"), 
  xs:dayTimeDuration("PT0S")))</CODE> returns <CODE>2</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-dateTime(xs:dateTime("1999-12-31T12:00:00"))</CODE> 
  returns <CODE>12</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-dateTime(xs:dateTime("1999-12-31T24:00:00"))</CODE> 
  returns <CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-minutes-from-dateTime name=func-minutes-from-dateTime></A>10.5.11 
fn:minutes-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:minutes-from-dateTime</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> value between 0 and 59, both 
inclusive, representing the minute component in the localized value of 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-minutes-from-dateTime-examples 
name=func-minutes-from-dateTime-examples></A>10.5.11.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:minutes-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</CODE> 
  returns <CODE>20</CODE> .</P>
  <LI>
  <P><CODE>fn:minutes-from-dateTime(xs:dateTime("1999-05-31T13:30:00+05:30"))</CODE> 
  returns <CODE>30</CODE> .</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-seconds-from-dateTime name=func-seconds-from-dateTime></A>10.5.12 
fn:seconds-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:seconds-from-dateTime</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:decimal?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:decimal</CODE> value greater than or equal to 
zero and less than 60, representing the seconds and fractional seconds in the 
localized value of <CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-seconds-from-dateTime-examples 
name=func-seconds-from-dateTime-examples></A>10.5.12.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:seconds-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</CODE> 
  returns <CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-timezone-from-dateTime 
name=func-timezone-from-dateTime></A>10.5.13 fn:timezone-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:timezone-from-dateTime</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dayTimeDuration?</CODE></DIV></DIV>
<P>Summary: Returns the timezone component of <CODE>$arg</CODE> if any. If 
<CODE>$arg</CODE> has a timezone component, then the result is an 
<CODE>xs:dayTimeDuration</CODE> that indicates deviation from UTC; its value may 
range from +14:00 to -14:00 hours, both inclusive. Otherwise, the result is the 
empty sequence.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-timezone-from-dateTime-examples 
name=func-timezone-from-dateTime-examples></A>10.5.13.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:timezone-from-dateTime(xs:dateTime("1999-05-31T13:20:00-05:00"))</CODE> 
  returns the <CODE>xs:dayTimeDuration</CODE> whose value is 
  <CODE>-PT5H</CODE>.</P>
  <LI>
  <P><CODE>fn:timezone-from-dateTime(xs:dateTime("2000-06-12T13:20:00Z"))</CODE> 
  returns the <CODE>xs:dayTimeDuration</CODE> whose value is 
  <CODE>PT0S</CODE>.</P>
  <LI>
  <P><CODE>fn:timezone-from-dateTime(xs:dateTime("2004-08-27T00:00:00"))</CODE> 
  returns <CODE>()</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-year-from-date name=func-year-from-date></A>10.5.14 
fn:year-from-date</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:year-from-date</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> representing the year in the 
localized value of <CODE>$arg</CODE>. The value may be negative.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-year-from-date-examples 
name=func-year-from-date-examples></A>10.5.14.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:year-from-date(xs:date("1999-05-31"))</CODE> returns 
  <CODE>1999</CODE>.</P>
  <LI>
  <P><CODE>fn:year-from-date(xs:date("2000-01-01+05:00"))</CODE> returns 
  <CODE>2000</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-month-from-date name=func-month-from-date></A>10.5.15 
fn:month-from-date</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:month-from-date</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> between 1 and 12, both inclusive, 
representing the month component in the localized value of 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-month-from-date-examples 
name=func-month-from-date-examples></A>10.5.15.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:month-from-date(xs:date("1999-05-31-05:00"))</CODE> returns 
  <CODE>5</CODE> .</P>
  <LI>
  <P><CODE>fn:month-from-date(xs:date("2000-01-01+05:00"))</CODE> returns 
  <CODE>1</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-day-from-date name=func-day-from-date></A>10.5.16 
fn:day-from-date</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:day-from-date</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> between 1 and 31, both inclusive, 
representing the day component in the localized value of <CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-day-from-date-examples 
name=func-day-from-date-examples></A>10.5.16.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:day-from-date(xs:date("1999-05-31-05:00"))</CODE> returns 
  <CODE>31</CODE>.</P>
  <LI>
  <P><CODE>fn:day-from-date(xs:date("2000-01-01+05:00"))</CODE> returns 
  <CODE>1</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-timezone-from-date name=func-timezone-from-date></A>10.5.17 
fn:timezone-from-date</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:timezone-from-date</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dayTimeDuration?</CODE></DIV></DIV>
<P>Summary: Returns the timezone component of <CODE>$arg</CODE> if any. If 
<CODE>$arg</CODE> has a timezone component, then the result is an 
<CODE>xs:dayTimeDuration</CODE> that indicates deviation from UTC; its value may 
range from +14:00 to -14:00 hours, both inclusive. Otherwise, the result is the 
empty sequence.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-timezone-from-date-examples 
name=func-timezone-from-date-examples></A>10.5.17.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:timezone-from-date(xs:date("1999-05-31-05:00"))</CODE> returns the 
  <CODE>xs:dayTimeDuration</CODE> whose value is <CODE>-PT5H</CODE>.</P>
  <LI>
  <P><CODE>fn:timezone-from-date(xs:date("2000-06-12Z"))</CODE> returns the 
  <CODE>xs:dayTimeDuration</CODE> with value 
<CODE>PT0S</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-hours-from-time name=func-hours-from-time></A>10.5.18 
fn:hours-from-time</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:hours-from-time</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> between 0 and 23, both inclusive, 
representing the value of the hours component in the localized value of 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-hours-from-time-examples 
name=func-hours-from-time-examples></A>10.5.18.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>fn:hours-from-time(xs:time("11:23:00"))</CODE> returns 
  <CODE>11</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-time(xs:time("21:23:00"))</CODE> returns 
  <CODE>21</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-time(xs:time("01:23:00+05:00"))</CODE> returns 
  <CODE>1</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-time(fn:adjust-time-to-timezone(xs:time("01:23:00+05:00"), 
  xs:dayTimeDuration("PT0S")))</CODE> returns <CODE>20</CODE>.</P>
  <LI>
  <P><CODE>fn:hours-from-time(xs:time("24:00:00"))</CODE> returns 
  <CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-minutes-from-time name=func-minutes-from-time></A>10.5.19 
fn:minutes-from-time</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:minutes-from-time</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:integer</CODE> value between 0 and 59, both 
inclusive, representing the value of the minutes component in the localized 
value of <CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-minutes-from-time-examples 
name=func-minutes-from-time-examples></A>10.5.19.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:minutes-from-time(xs:time("13:00:00Z"))</CODE> returns 
  <CODE>0</CODE> .</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-seconds-from-time name=func-seconds-from-time></A>10.5.20 
fn:seconds-from-time</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:seconds-from-time</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:decimal?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:decimal</CODE> value greater than or equal to 
zero and less than 60, representing the seconds and fractional seconds in the 
localized value of <CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-seconds-from-time-examples 
name=func-seconds-from-time-examples></A>10.5.20.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:seconds-from-time(xs:time("13:20:10.5"))</CODE> returns 
  <CODE>10.5</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-timezone-from-time name=func-timezone-from-time></A>10.5.21 
fn:timezone-from-time</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:timezone-from-time</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dayTimeDuration?</CODE></DIV></DIV>
<P>Summary: Returns the timezone component of <CODE>$arg</CODE> if any. If 
<CODE>$arg</CODE> has a timezone component, then the result is an 
<CODE>xs:dayTimeDuration</CODE> that indicates deviation from UTC; its value may 
range from +14:00 to -14:00 hours, both inclusive. Otherwise, the result is the 
empty sequence.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, returns the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-timezone-from-time-examples 
name=func-timezone-from-time-examples></A>10.5.21.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:timezone-from-time(xs:time("13:20:00-05:00"))</CODE> returns 
  <CODE>xs:dayTimeDuration</CODE> whose value is <CODE>-PT5H</CODE>.</P>
  <LI>
  <P><CODE>fn:timezone-from-time(xs:time("13:20:00"))</CODE> returns 
  <CODE>()</CODE>.</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=duration-arithmetic name=duration-arithmetic></A>10.6 Arithmetic 
Operators on Durations</H3>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-add-yearMonthDurations"><CODE>op:add-yearMonthDurations</CODE></A></TD>
    <TD>Adds two <CODE>xs:yearMonthDuration</CODE>s. Returns an 
      <CODE>xs:yearMonthDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDurations"><CODE>op:subtract-yearMonthDurations</CODE></A></TD>
    <TD>Subtracts one <CODE>xs:yearMonthDuration</CODE> from another. Returns 
      an <CODE>xs:yearMonthDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-multiply-yearMonthDuration"><CODE>op:multiply-yearMonthDuration</CODE></A></TD>
    <TD>Multiplies a <CODE>xs:yearMonthDuration</CODE> by an 
      <CODE>xs:double</CODE>. Returns an 
<CODE>xs:yearMonthDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration"><CODE>op:divide-yearMonthDuration</CODE></A></TD>
    <TD>Divides an <CODE>xs:yearMonthDuration</CODE> by an 
      <CODE>xs:double</CODE>. Returns an 
<CODE>xs:yearMonthDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration-by-yearMonthDuration"><CODE>op:divide-yearMonthDuration-by-yearMonthDuration</CODE></A></TD>
    <TD>Divides an <CODE>xs:yearMonthDuration</CODE> by an 
      <CODE>xs:yearMonthDuration</CODE>. Returns an 
  <CODE>xs:decimal</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-add-dayTimeDurations"><CODE>op:add-dayTimeDurations</CODE></A></TD>
    <TD>Adds two <CODE>xs:dayTimeDurations</CODE>. Returns an 
      <CODE>xs:dayTimeDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDurations"><CODE>op:subtract-dayTimeDurations</CODE></A></TD>
    <TD>Subtracts one <CODE>xs:dayTimeDuration</CODE> from another. Returns an 
      <CODE>xs:dayTimeDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-multiply-dayTimeDuration"><CODE>op:multiply-dayTimeDuration</CODE></A></TD>
    <TD>Multiplies an <CODE>xs:dayTimeDuration</CODE> by a 
      <CODE>xs:double</CODE>. Returns an <CODE>xs:dayTimeDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration"><CODE>op:divide-dayTimeDuration</CODE></A></TD>
    <TD>Divides an <CODE>xs:dayTimeDuration</CODE> by an 
      <CODE>xs:double</CODE>. Returns an <CODE>xs:dayTimeDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration-by-dayTimeDuration"><CODE>op:divide-dayTimeDuration-by-dayTimeDuration</CODE></A></TD>
    <TD>Divides an <CODE>xs:dayTimeDuration</CODE> by an 
      <CODE>xs:dayTimeDuration</CODE>. Returns an 
  <CODE>xs:decimal</CODE>.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-add-yearMonthDurations 
name=func-add-yearMonthDurations></A>10.6.1 op:add-yearMonthDurations</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:add-yearMonthDurations</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:yearMonthDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of adding the value of <CODE>$arg1</CODE> to the 
value of <CODE>$arg2</CODE>. Backs up the "+" operator on 
<CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-add-yearMonthDurations-examples 
name=func-add-yearMonthDurations-examples></A>10.6.1.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:add-yearMonthDurations(xs:yearMonthDuration("P2Y11M"), 
  xs:yearMonthDuration("P3Y3M"))</CODE> returns a 
  <CODE>xs:yearMonthDuration</CODE> value corresponding to 6 years and 2 
  months.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-yearMonthDurations 
name=func-subtract-yearMonthDurations></A>10.6.2 
op:subtract-yearMonthDurations</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-yearMonthDurations</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:yearMonthDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of subtracting the value of <CODE>$arg2</CODE> 
from the value of <CODE>$arg1</CODE>. Backs up the "-" operator on 
<CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-yearMonthDurations-examples 
name=func-subtract-yearMonthDurations-examples></A>10.6.2.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:subtract-yearMonthDurations(xs:yearMonthDuration("P2Y11M"), 
  xs:yearMonthDuration("P3Y3M"))</CODE> returns a 
  <CODE>xs:yearMonthDuration</CODE> value corresponding to negative 4 
  months.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-multiply-yearMonthDuration 
name=func-multiply-yearMonthDuration></A>10.6.3 
op:multiply-yearMonthDuration</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:multiply-yearMonthDuration</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:yearMonthDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of multiplying the value of <CODE>$arg1</CODE> by 
<CODE>$arg2</CODE>. The result is rounded to the nearest month. For a value 
<EM>v</EM>, 0 &lt;= <EM>v</EM> &lt; 0.5 rounds to 0; 0.5 &lt;= <EM>v</EM> &lt; 
1.0 rounds to 1.</P>
<P>If <CODE>$arg2</CODE> is positive or negative zero, the result is a 
zero-length duration. If <CODE>$arg2</CODE> is positive or negative infinity, 
the result overflows and is handled as discussed in <A 
href="REC-xpath-functions-20070123.htm#date-time-duration-conformance"><B>10.1.1 
Limits and Precision</B></A>. If <CODE>$arg2</CODE> is <CODE>NaN</CODE> an error 
is raised [<A title=err:FOCA0005 
href="REC-xpath-functions-20070123.htm#ERRFOCA0005">err:FOCA0005</A>]</P>
<P>Backs up the "*" operator on <CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-multiply-yearMonthDurations-examples 
name=func-multiply-yearMonthDurations-examples></A>10.6.3.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:multiply-yearMonthDuration(xs:yearMonthDuration("P2Y11M"), 
  2.3)</CODE> returns a <CODE>xs:yearMonthDuration</CODE> value corresponding to 
  6 years and 9 months.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-divide-yearMonthDuration 
name=func-divide-yearMonthDuration></A>10.6.4 op:divide-yearMonthDuration</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:divide-yearMonthDuration</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:yearMonthDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of dividing the value of <CODE>$arg1</CODE> by 
<CODE>$arg2</CODE>. The result is rounded to the nearest month. For a value 
<EM>v</EM>, 0 &lt;= <EM>v</EM> &lt; 0.5 rounds to 0; 0.5 &lt;= <EM>v</EM> &lt; 
1.0 rounds to 1.</P>
<P>If <CODE>$arg2</CODE> is positive or negative infinity, the result is a 
zero-length duration. If <CODE>$arg2</CODE> is positive or negative zero, the 
result overflows and is handled as discussed in <A 
href="REC-xpath-functions-20070123.htm#date-time-duration-conformance"><B>10.1.1 
Limits and Precision</B></A>. If <CODE>$arg2</CODE> is <CODE>NaN</CODE> an error 
is raised [<A title=err:FOCA0005 
href="REC-xpath-functions-20070123.htm#ERRFOCA0005">err:FOCA0005</A>]</P>
<P>Backs up the "div" operator on <CODE>xs:yearMonthDuration</CODE> and numeric 
values.</P>
<DIV class=div4>
<H5><A id=func-divide-yearMonthDurations-examples 
name=func-divide-yearMonthDurations-examples></A>10.6.4.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:divide-yearMonthDuration(xs:yearMonthDuration("P2Y11M"), 
  1.5)</CODE> returns a <CODE>xs:yearMonthDuration</CODE> value corresponding to 
  1 year and 11 months.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-divide-yearMonthDuration-by-yearMonthDuration 
name=func-divide-yearMonthDuration-by-yearMonthDuration></A>10.6.5 
op:divide-yearMonthDuration-by-yearMonthDuration</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:divide-yearMonthDuration-by-yearMonthDuration</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:decimal</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of dividing the value of <CODE>$arg1</CODE> by 
<CODE>$arg2</CODE>. Since the values of both operands are integers, the 
semantics of the division is identical to <A 
href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide</CODE></A> 
with <CODE>xs:integer</CODE> operands.</P>
<P>Backs up the "div" operator on <CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-divide-yearMonthDuration-by-yearMonthDuration-examples 
name=func-divide-yearMonthDuration-by-yearMonthDuration-examples></A>10.6.5.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:divide-yearMonthDuration-by-yearMonthDuration(xs:yearMonthDuration("P3Y4M"), 
  xs:yearMonthDuration("-P1Y4M"))</CODE> returns 
<CODE>-2.5</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-add-dayTimeDurations name=func-add-dayTimeDurations></A>10.6.6 
op:add-dayTimeDurations</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:add-dayTimeDurations</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:dayTimeDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of adding the value of <CODE>$arg1</CODE> to the 
value of <CODE>$arg2</CODE>. Backs up the "+" operator on 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-add-dayTimeDurations-examples 
name=func-add-dayTimeDurations-examples></A>10.6.6.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:add-dayTimeDurations(xs:dayTimeDuration("P2DT12H5M"), 
  xs:dayTimeDuration("P5DT12H"))</CODE> returns a 
  <CODE>xs:dayTimeDuration</CODE> value corresponding to 8 days and 5 
  minutes.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-dayTimeDurations 
name=func-subtract-dayTimeDurations></A>10.6.7 op:subtract-dayTimeDurations</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-dayTimeDurations</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:dayTimeDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of subtracting the value of <CODE>$arg2</CODE> 
from the value of <CODE>$arg1</CODE>. Backs up the "-" operator on 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-dayTimeDurations-examples 
name=func-subtract-dayTimeDurations-examples></A>10.6.7.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:subtract-dayTimeDurations(xs:dayTimeDuration("P2DT12H"), 
  xs:dayTimeDuration("P1DT10H30M"))</CODE> returns a 
  <CODE>xs:dayTimeDuration</CODE> value corresponding to 1 day, 1 hour and 30 
  minutes.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-multiply-dayTimeDuration 
name=func-multiply-dayTimeDuration></A>10.6.8 op:multiply-dayTimeDuration</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:multiply-dayTimeDuration</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:dayTimeDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of multiplying the value of <CODE>$arg1</CODE> by 
<CODE>$arg2</CODE>.</P>
<P>If <CODE>$arg2</CODE> is positive or negative zero, the result is a 
zero-length duration. If <CODE>$arg2</CODE> is positive or negative infinity, 
the result overflows and is handled as discussed in <A 
href="REC-xpath-functions-20070123.htm#date-time-duration-conformance"><B>10.1.1 
Limits and Precision</B></A>. If <CODE>$arg2</CODE> is <CODE>NaN</CODE> an error 
is raised [<A title=err:FOCA0005 
href="REC-xpath-functions-20070123.htm#ERRFOCA0005">err:FOCA0005</A>]</P>
<P>Backs up the "*" operator on <CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-multiply-yearMonthDuration-examples 
name=func-multiply-yearMonthDuration-examples></A>10.6.8.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:multiply-dayTimeDuration(xs:dayTimeDuration("PT2H10M"), 
  2.1)</CODE> returns a <CODE>xs:dayTimeDuration</CODE> value corresponding to 4 
  hours and 33 minutes.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-divide-dayTimeDuration 
name=func-divide-dayTimeDuration></A>10.6.9 op:divide-dayTimeDuration</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:divide-dayTimeDuration</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:dayTimeDuration</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of dividing the value of <CODE>$arg1</CODE> by 
<CODE>$arg2</CODE>.</P>
<P>If <CODE>$arg2</CODE> is positive or negative infinity, the result is a 
zero-length duration. If <CODE>$arg2</CODE> is positive or negative zero, the 
result overflows and is handled as discussed in <A 
href="REC-xpath-functions-20070123.htm#date-time-duration-conformance"><B>10.1.1 
Limits and Precision</B></A>. If <CODE>$arg2</CODE> is <CODE>NaN</CODE> an error 
is raised [<A title=err:FOCA0005 
href="REC-xpath-functions-20070123.htm#ERRFOCA0005">err:FOCA0005</A>]</P>
<P>Backs up the "div" operator on <CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-divide-yearMonthDuration-examples 
name=func-divide-yearMonthDuration-examples></A>10.6.9.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:divide-dayTimeDuration(xs:yearMonthDuration("P1DT2H30M10.5S"), 
  1.5)</CODE> returns a <CODE>xs:dayTimeDuration</CODE> value corresponding to 
  17 hours, 40 minutes and 7 seconds.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-divide-dayTimeDuration-by-dayTimeDuration 
name=func-divide-dayTimeDuration-by-dayTimeDuration></A>10.6.10 
op:divide-dayTimeDuration-by-dayTimeDuration</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:divide-dayTimeDuration-by-dayTimeDuration</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:decimal</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the result of dividing the value of <CODE>$arg1</CODE> by 
<CODE>$arg2</CODE>. Since the values of both operands are decimals, the 
semantics of the division is identical to <A 
href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide</CODE></A> 
with <CODE>xs:decimal</CODE> operands.</P>
<P>Backs up the "div" operator on <CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-divide-dayTimeDuration-by-dayTimeDuration-examples 
name=func-divide-dayTimeDuration-by-dayTimeDuration-examples></A>10.6.10.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:divide-dayTimeDuration-by-dayTimeDuration(xs:dayTimeDuration("P2DT53M11S"), 
  xs:dayTimeDuration("P1DT10H))</CODE> returns 
<CODE>1.4378349...</CODE></P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=timezone.functions name=timezone.functions></A>10.7 Timezone 
Adjustment Functions on Dates and Time Values</H3>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone"><CODE>fn:adjust-dateTime-to-timezone</CODE></A></TD>
    <TD>Adjusts an <CODE>xs:dateTime</CODE> value to a specific timezone, or 
      to no timezone at all.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone"><CODE>fn:adjust-date-to-timezone</CODE></A></TD>
    <TD>Adjusts an <CODE>xs:date</CODE> value to a specific timezone, or to no 
      timezone at all.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone"><CODE>fn:adjust-time-to-timezone</CODE></A></TD>
    <TD>Adjusts an <CODE>xs:time</CODE> value to a specific timezone, or to no 
      timezone at all.</TD></TR></TBODY></TABLE>
<P>These functions adjust the timezone component of an <CODE>xs:dateTime</CODE>, 
<CODE>xs:date</CODE> or <CODE>xs:time</CODE> value. The <CODE>$timezone</CODE> 
argument to these functions is defined as an <CODE>xs:dayTimeDuration</CODE> but 
must be a valid timezone value.</P>
<DIV class=div3>
<H4><A id=func-adjust-dateTime-to-timezone 
name=func-adjust-dateTime-to-timezone></A>10.7.1 
fn:adjust-dateTime-to-timezone</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE 
class=function>fn:adjust-dateTime-to-timezone</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:dateTime?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dateTime?</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>fn:adjust-dateTime-to-timezone</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$timezone</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
    class=return-type>xs:dateTime?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Adjusts an <CODE>xs:dateTime</CODE> value to a specific timezone, or 
to no timezone at all. If <CODE>$timezone</CODE> is the empty sequence, returns 
an <CODE>xs:dateTime</CODE> without a timezone. Otherwise, returns an 
<CODE>xs:dateTime</CODE> with a timezone.</P>
<P>If <CODE>$timezone</CODE> is not specified, then <CODE>$timezone</CODE> is 
the value of the implicit timezone in the dynamic context.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, then the result is the empty 
sequence.</P>
<P>A dynamic error is raised [<A title=err:FODT0003 
href="REC-xpath-functions-20070123.htm#ERRFODT0003">err:FODT0003</A>] 
if <CODE>$timezone</CODE> is less than <CODE>-PT14H</CODE> or greater than 
<CODE>PT14H</CODE> or if does not contain an integral number of minutes.</P>
<P>If <CODE>$arg</CODE> does not have a timezone component and 
<CODE>$timezone</CODE> is the empty sequence, then the result is 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> does not have a timezone component and 
<CODE>$timezone</CODE> is not the empty sequence, then the result is 
<CODE>$arg</CODE> with <CODE>$timezone</CODE> as the timezone component.</P>
<P>If <CODE>$arg</CODE> has a timezone component and <CODE>$timezone</CODE> is 
the empty sequence, then the result is the localized value of <CODE>$arg</CODE> 
without its timezone component.</P>
<P>If <CODE>$arg</CODE> has a timezone component and <CODE>$timezone</CODE> is 
not the empty sequence, then the result is an <CODE>xs:dateTime</CODE> value 
with a timezone component of <CODE>$timezone</CODE> that is equal to 
<CODE>$arg</CODE>.</P>
<DIV class=div4>
<H5><A id=func-adjust-dateTime-to-timezone-examples 
name=func-adjust-dateTime-to-timezone-examples></A>10.7.1.1 Examples</H5>
<P>Assume the dynamic context provides an implicit timezone of <CODE>-05:00 
(-PT5H0M)</CODE>.</P>
<P><CODE>let $tz := xs:dayTimeDuration("-PT10H")</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"))</CODE> 
  returns <CODE>2002-03-07T10:00:00-05:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"))</CODE> 
  returns <CODE>2002-03-07T12:00:00-05:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), 
  $tz)</CODE> returns <CODE>2002-03-07T10:00:00-10:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), 
  $tz)</CODE> returns <CODE>2002-03-07T07:00:00-10:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), 
  xs:dayTimeDuration("PT10H"))</CODE> returns 
  <CODE>2002-03-08T03:00:00+10:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T00:00:00+01:00"), 
  xs:dayTimeDuration("-PT8H"))</CODE> returns 
  <CODE>2002-03-06T15:00:00-08:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00"), 
  ())</CODE> returns <CODE>2002-03-07T10:00:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-dateTime-to-timezone(xs:dateTime("2002-03-07T10:00:00-07:00"), 
  ())</CODE> returns <CODE>2002-03-07T10:00:00</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-adjust-date-to-timezone 
name=func-adjust-date-to-timezone></A>10.7.2 fn:adjust-date-to-timezone</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:adjust-date-to-timezone</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:date?</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>fn:adjust-date-to-timezone</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:date?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$timezone</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:date?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Adjusts an <CODE>xs:date</CODE> value to a specific timezone, or to 
no timezone at all. If <CODE>$timezone</CODE> is the empty sequence, returns an 
<CODE>xs:date</CODE> without a timezone. Otherwise, returns an 
<CODE>xs:date</CODE> with a timezone. For purposes of timezone adjustment, an 
<CODE>xs:date</CODE> is treated as an <CODE>xs:dateTime</CODE> with time 
<CODE>00:00:00</CODE>.</P>
<P>If <CODE>$timezone</CODE> is not specified, then <CODE>$timezone</CODE> is 
the value of the implicit timezone in the dynamic context.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, then the result is the empty 
sequence.</P>
<P>A dynamic error is raised [<A title=err:FODT0003 
href="REC-xpath-functions-20070123.htm#ERRFODT0003">err:FODT0003</A>] 
if <CODE>$timezone</CODE> is less than <CODE>-PT14H</CODE> or greater than 
<CODE>PT14H</CODE> or if does not contain an integral number of minutes.</P>
<P>If <CODE>$arg</CODE> does not have a timezone component and 
<CODE>$timezone</CODE> is the empty sequence, then the result is the value of 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> does not have a timezone component and 
<CODE>$timezone</CODE> is not the empty sequence, then the result is 
<CODE>$arg</CODE> with <CODE>$timezone</CODE> as the timezone component.</P>
<P>If <CODE>$arg</CODE> has a timezone component and <CODE>$timezone</CODE> is 
the empty sequence, then the result is the localized value of <CODE>$arg</CODE> 
without its timezone component.</P>
<P>If <CODE>$arg</CODE> has a timezone component and <CODE>$timezone</CODE> is 
not the empty sequence, then:</P>
<UL>
  <LI>
  <P>Let <CODE>$srcdt</CODE> be an <CODE>xs:dateTime</CODE> value, with 
  <CODE>00:00:00</CODE> for the time component and date and timezone components 
  that are the same as the date and timezone components of 
<CODE>$arg</CODE>.</P>
  <LI>
  <P>Let <CODE>$r</CODE> be the result of evaluating <A 
  href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone"><CODE>fn:adjust-dateTime-to-timezone($srcdt, 
  $timezone)</CODE></A></P>
  <LI>
  <P>The result of this function will be a date value that has date and timezone 
  components that are the same as the date and timezone components of 
  <CODE>$r</CODE>.</P></LI></UL>
<DIV class=div4>
<H5><A id=func-adjust-date-to-timezone-examples 
name=func-adjust-date-to-timezone-examples></A>10.7.2.1 Examples</H5>
<P>Assume the dynamic context provides an implicit timezone of <CODE>-05:00 
(-PT5H0M)</CODE>.</P>
<P><CODE>let $tz := xs:dayTimeDuration("-PT10H")</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:adjust-date-to-timezone(xs:date("2002-03-07"))</CODE> returns 
  <CODE>2002-03-07-05:00.</CODE></P>
  <LI>
  <P><CODE>fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"))</CODE> 
  returns <CODE>2002-03-07-05:00</CODE>. <CODE>$arg</CODE> is converted to the 
  <CODE>xs:dateTime "2002-03-07T00:00:00-07:00"</CODE>. This is adjusted to the 
  implicit timezone, giving <CODE>"2002-03-07T02:00:00-05:00".</CODE></P>
  <LI>
  <P><CODE>fn:adjust-date-to-timezone(xs:date("2002-03-07"), $tz)</CODE> returns 
  <CODE>2002-03-07-10:00</CODE>.</P>
  <LI>
  <P><CODE>fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"), $tz)</CODE> 
  returns <CODE>2002-03-06-10:00</CODE>. <CODE>$arg</CODE> is converted to the 
  <CODE>xs:dateTime "2002-03-07T00:00:00-07:00"</CODE>. This is adjusted to the 
  given timezone, giving <CODE>"2002-03-06T21:00:00-10:00"</CODE>.</P>
  <LI>
  <P><CODE>fn:adjust-date-to-timezone(xs:date("2002-03-07"), ())</CODE> returns 
  <CODE>2002-03-07.</CODE></P>
  <LI>
  <P><CODE>fn:adjust-date-to-timezone(xs:date("2002-03-07-07:00"), ())</CODE> 
  returns <CODE>2002-03-07.</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-adjust-time-to-timezone 
name=func-adjust-time-to-timezone></A>10.7.3 fn:adjust-time-to-timezone</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:adjust-time-to-timezone</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:time?</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>fn:adjust-time-to-timezone</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:time?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$timezone</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:time?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Adjusts an <CODE>xs:time</CODE> value to a specific timezone, or to 
no timezone at all. If <CODE>$timezone</CODE> is the empty sequence, returns an 
<CODE>xs:time</CODE> without a timezone. Otherwise, returns an 
<CODE>xs:time</CODE> with a timezone.</P>
<P>If <CODE>$timezone</CODE> is not specified, then <CODE>$timezone</CODE> is 
the value of the implicit timezone in the dynamic context.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, then the result is the empty 
sequence.</P>
<P>A dynamic error is raised [<A title=err:FODT0003 
href="REC-xpath-functions-20070123.htm#ERRFODT0003">err:FODT0003</A>] 
if <CODE>$timezone</CODE> is less than <CODE>-PT14H</CODE> or greater than 
<CODE>PT14H</CODE> or if does not contain an integral number of minutes.</P>
<P>If <CODE>$arg</CODE> does not have a timezone component and 
<CODE>$timezone</CODE> is the empty sequence, then the result is 
<CODE>$arg</CODE>.</P>
<P>If <CODE>$arg</CODE> does not have a timezone component and 
<CODE>$timezone</CODE> is not the empty sequence, then the result is 
<CODE>$arg</CODE> with <CODE>$timezone</CODE> as the timezone component.</P>
<P>If <CODE>$arg</CODE> has a timezone component and <CODE>$timezone</CODE> is 
the empty sequence, then the result is the localized value of <CODE>$arg</CODE> 
without its timezone component.</P>
<P>If <CODE>$arg</CODE> has a timezone component and <CODE>$timezone</CODE> is 
not the empty sequence, then:</P>
<UL>
  <LI>
  <P>Let <CODE>$srcdt</CODE> be an <CODE>xs:dateTime</CODE> value, with an 
  arbitrary date for the date component and time and timezone components that 
  are the same as the time and timezone components of <CODE>$arg</CODE>.</P>
  <LI>
  <P>Let <CODE>$r</CODE> be the result of evaluating</P>
  <P><A 
  href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone"><CODE>fn:adjust-dateTime-to-timezone($srcdt, 
  $timezone)</CODE></A></P>
  <LI>
  <P>The result of this function will be a time value that has time and timezone 
  components that are the same as the time and timezone components of 
  <CODE>$r</CODE>.</P></LI></UL>
<DIV class=div4>
<H5><A id=func-adjust-time-to-timezone-examples 
name=func-adjust-time-to-timezone-examples></A>10.7.3.1 Examples</H5>
<P>Assume the dynamic context provides an implicit timezone of <CODE>-05:00 
(-PT5H0M)</CODE>.</P>
<P><CODE>let $tz := xs:dayTimeDuration("-PT10H")</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:adjust-time-to-timezone(xs:time("10:00:00"))</CODE> returns 
  <CODE>10:00:00-05:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"))</CODE> returns 
  <CODE>12:00:00-05:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-time-to-timezone(xs:time("10:00:00"), $tz)</CODE> returns 
  <CODE>10:00:00-10:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"), $tz)</CODE> 
  returns <CODE>07:00:00-10:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-time-to-timezone(xs:time("10:00:00"), ())</CODE> returns 
  <CODE>10:00:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"), ())</CODE> 
  returns <CODE>10:00:00</CODE></P>
  <LI>
  <P><CODE>fn:adjust-time-to-timezone(xs:time("10:00:00-07:00"), 
  xs:dayTimeDuration("PT10H"))</CODE> returns 
  <CODE>03:00:00+10:00</CODE></P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=dateTime-arithmetic name=dateTime-arithmetic></A>10.8 Arithmetic 
Operators on Durations, Dates and Times</H3>
<P>These functions support adding or subtracting a duration value to or from an 
<CODE>xs:dateTime</CODE>, an <CODE>xs:date</CODE> or an <CODE>xs:time</CODE> 
value. Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> describes an algorithm for 
performing such operations.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-dateTimes"><CODE>op:subtract-dateTimes</CODE></A></TD>
    <TD>Returns the difference between two <CODE>xs:dateTimes</CODE> as an 
      <CODE>xs:dayTimeDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-dates"><CODE>op:subtract-dates</CODE></A></TD>
    <TD>Returns the difference between two <CODE>xs:dateTimes</CODE> as an 
      <CODE>xs:dayTimeDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-times"><CODE>op:subtract-times</CODE></A></TD>
    <TD>Returns the difference between two <CODE>xs:time</CODE>s as an 
      <CODE>xs:dayTimeDuration</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-dateTime"><CODE>op:add-yearMonthDuration-to-dateTime</CODE></A></TD>
    <TD>Returns the end of a time period by adding an 
      <CODE>xs:yearMonthDuration</CODE> to the <CODE>xs:dateTime</CODE> that 
      starts the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-dateTime"><CODE>op:add-dayTimeDuration-to-dateTime</CODE></A></TD>
    <TD>Returns the end of a time period by adding an 
      <CODE>xs:dayTimeDuration</CODE> to the <CODE>xs:dateTime</CODE> that 
      starts the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-dateTime"><CODE>op:subtract-yearMonthDuration-from-dateTime</CODE></A></TD>
    <TD>Returns the beginning of a time period by subtracting an 
      <CODE>xs:yearMonthDuration</CODE> from the <CODE>xs:dateTime</CODE> that 
      ends the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-dateTime"><CODE>op:subtract-dayTimeDuration-from-dateTime</CODE></A></TD>
    <TD>Returns the beginning of a time period by subtracting an 
      <CODE>xs:dayTimeDuration</CODE> from the <CODE>xs:dateTime</CODE> that 
      ends the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-date"><CODE>op:add-yearMonthDuration-to-date</CODE></A></TD>
    <TD>Returns the end of a time period by adding an 
      <CODE>xs:yearMonthDuration</CODE> to the <CODE>xs:date</CODE> that starts 
      the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-date"><CODE>op:add-dayTimeDuration-to-date</CODE></A></TD>
    <TD>Returns the end of a time period by adding an 
      <CODE>xs:dayTimeDuration</CODE> to the <CODE>xs:date</CODE> that starts 
      the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-date"><CODE>op:subtract-yearMonthDuration-from-date</CODE></A></TD>
    <TD>Returns the beginning of a time period by subtracting an 
      <CODE>xs:yearMonthDuration</CODE> from the <CODE>xs:date</CODE> that ends 
      the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-date"><CODE>op:subtract-dayTimeDuration-from-date</CODE></A></TD>
    <TD>Returns the beginning of a time period by subtracting an 
      <CODE>xs:dayTimeDuration</CODE> from the <CODE>xs:date</CODE> that ends 
      the period.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-time"><CODE>op:add-dayTimeDuration-to-time</CODE></A></TD>
    <TD>Adds the value of the hours, minutes and seconds components of an 
      <CODE>xs:dayTimeDuration</CODE> to an <CODE>xs:time</CODE> value.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-time"><CODE>op:subtract-dayTimeDuration-from-time</CODE></A></TD>
    <TD>Subtracts the value of the hours, minutes and seconds components of an 
      <CODE>xs:dayTimeDuration</CODE> to an <CODE>xs:time</CODE> 
  value.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-subtract-dateTimes name=func-subtract-dateTimes></A>10.8.1 
op:subtract-dateTimes</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-dateTimes</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:dayTimeDuration?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:dayTimeDuration</CODE> that corresponds to the 
difference between the normalized value of <CODE>$arg1</CODE> and the normalized 
value of <CODE>$arg2</CODE>. If either <CODE>$arg1</CODE> or <CODE>$arg2</CODE> 
do not contain an explicit timezone then, for the purpose of the operation, the 
implicit timezone provided by the dynamic context (See <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>.) is assumed to 
be present as part of the value.</P>
<P>If the normalized value of <CODE>$arg1</CODE> precedes in time the normalized 
value of <CODE>$arg2</CODE>, then the returned value is a negative duration.</P>
<P>Backs up the subtract, "-", operator on <CODE>xs:dateTime</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-dateTimes-examples 
name=func-subtract-dateTimes-examples></A>10.8.1.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:subtract-dateTimes(xs:dateTime("2000-10-30T06:12:00"), 
  xs:dateTime("1999-11-28T09:00:00Z"))</CODE> returns an 
  <CODE>xs:dayTimeDuration</CODE> value corresponding to 337 days, 2 hours and 
  12 minutes.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-dates name=func-subtract-dates></A>10.8.2 
op:subtract-dates</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:subtract-dates</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:date</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:date</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dayTimeDuration?</CODE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:dayTimeDuration</CODE> that corresponds to the 
difference between the starting instant of <CODE>$arg1</CODE> and the the 
starting instant of <CODE>$arg2</CODE>. If either <CODE>$arg1</CODE> or 
<CODE>$arg2</CODE> do not contain an explicit timezone then, for the purpose of 
the operation, the implicit timezone provided by the dynamic context (See <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>.) is assumed to 
be present as part of the value.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at <CODE>00:00:00</CODE> on that date.</P>
<P>The result is the result of subtracting the two starting instants using <A 
href="REC-xpath-functions-20070123.htm#func-subtract-dateTimes"><CODE>op:subtract-dateTimes</CODE></A>.</P>
<P>If the starting instant of <CODE>$arg1</CODE> precedes in time the starting 
instant of <CODE>$arg2</CODE>, then the returned value is a negative 
duration.</P>
<P>Backs up the subtract, "-", operator on <CODE>xs:date</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-dates-examples 
name=func-subtract-dates-examples></A>10.8.2.1 Examples</H5>
<UL>
  <LI>
  <P>Assume that the dynamic context provides an implicit timezone value of 
  <CODE>Z</CODE>. <CODE>op:subtract-dates(xs:date("2000-10-30"), 
  xs:date("1999-11-28"))</CODE> returns an <CODE>xs:dayTimeDuration</CODE> value 
  corresponding to 337 days. The normalized values of the two starting instants 
  are <CODE>{2000, 10, 30, 0, 0, 0, PT0S}</CODE> and <CODE>{1999, 11, 28, 0, 0, 
  0, PT0S}</CODE>.</P>
  <LI>
  <P>If the dynamic context provides an implicit timezone value of 
  <CODE>+05:00</CODE>, <CODE>op:subtract-dates(xs:date("2000-10-30"), 
  xs:date("1999-11-28Z"))</CODE> returns an <CODE>xs:dayTimeDuration</CODE> 
  value corresponding to 336 days and 19 hours. The normalized values of the two 
  starting instants are <CODE>{2000, 10, 29, 19, 0, 0, PT0S}</CODE> and 
  <CODE>{1999, 11, 28, 0, 0, 0, PT0S}</CODE>.</P>
  <LI>
  <P><CODE>op:subtract-dates(xs:date("2000-10-15-05:00"), 
  xs:date("2000-10-10+02:00"))</CODE> returns an <CODE>xs:dayTimeDuration</CODE> 
  value corresponding to lexical form 
"<CODE>P5DT7H</CODE>".</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-times name=func-subtract-times></A>10.8.3 
op:subtract-times</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:subtract-times</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:time</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:time</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dayTimeDuration</CODE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:dayTimeDuration</CODE> that corresponds to the 
difference between the value of <CODE>$arg1</CODE> converted to an 
<CODE>xs:dateTime</CODE> using the date components from the reference 
<CODE>xs:dateTime</CODE> and the value of <CODE>$arg2</CODE> converted to an 
<CODE>xs:dateTime</CODE> using the date components from the same reference 
<CODE>xs:dateTime</CODE> . If either <CODE>$arg1</CODE> or <CODE>$arg2</CODE> do 
not contain an explicit timezone then, for the purpose of the operation, the 
implicit timezone provided by the dynamic context (See <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>.) is assumed to 
be present as part of the value.</P>
<P>The result is the result of subtracting the two <CODE>xs:dateTime</CODE>s 
using <A 
href="REC-xpath-functions-20070123.htm#func-subtract-dateTimes"><CODE>op:subtract-dateTimes</CODE></A>.</P>
<P>If the value of <CODE>$arg1</CODE> converted to an <CODE>xs:dateTime</CODE> 
using the date components from the reference <CODE>xs:dateTime</CODE> precedes 
in time the value of <CODE>$arg2</CODE> converted to an <CODE>xs:dateTime</CODE> 
using the date components from the same reference <CODE>xs:dateTime</CODE> , 
then the returned value is a negative duration.</P>
<P>Backs up the subtract, "-", operator on <CODE>xs:time</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-times-examples 
name=func-subtract-times-examples></A>10.8.3.1 Examples</H5>
<P>Assume that the dynamic context provides an implicit timezone value of 
<CODE>-05:00</CODE>. Assume, also, that the date components of the reference 
<CODE>xs:dateTime</CODE> correspond to <CODE>"1972-12-31"</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:subtract-times(xs:time("11:12:00Z"), xs:time("04:00:00"))</CODE> 
  returns an <CODE>xs:dayTimeDuration</CODE> value corresponding to 2 hours and 
  12 minutes. This is obtained by subtracting from the <CODE>xs:dateTime</CODE> 
  value <CODE>{1972, 12, 31, 11, 12, 0, PT0S}</CODE> the 
  <CODE>xs:dateTime</CODE> value <CODE>{1972, 12, 31, 9, 0, 0, PT0S}</CODE>.</P>
  <LI>
  <P><CODE>op:subtract-times(xs:time("11:00:00-05:00"), 
  xs:time("21:30:00+05:30"))</CODE> returns a zero 
  <CODE>xs:dayTimeDuration</CODE> value corresponding to the lexical 
  representation <CODE>"PT0S"</CODE>. The two <CODE>xs:dateTime</CODE> values 
  are <CODE>{1972, 12, 31, 11, 0, 0, -PT5H}</CODE> and <CODE>{1972, 12, 31, 21, 
  30, 0, PT5H30M}</CODE>. These normalize to <CODE>{1972, 12, 31, 16, 0, 0, 
  PT0S}</CODE> and <CODE>{1972, 12, 31, 16, 0, 0, PT0S}</CODE>.</P>
  <LI>
  <P><CODE>op:subtract-times(xs:time("17:00:00-06:00"), 
  xs:time("08:00:00+09:00"))</CODE> returns an <CODE>xs:dayTimeDuration</CODE> 
  value corresponding to one day or 24 hours. The two normalized 
  <CODE>xs:dateTime</CODE> values are <CODE>{1972, 12, 31, 23, 0, 0, 
  PT0S}</CODE> and <CODE>{1972, 12, 30, 23, 0, 0, PT0S}</CODE>.</P>
  <LI>
  <P><CODE>op:subtract-times(xs:time("24:00:00"), xs:time("23:59:59"))</CODE> 
  returns an <CODE>xs:dayTimeDuration</CODE> value corresponding to 
  <CODE>"-PT23H59M59S"</CODE>. The two normalized <CODE>xs:dateTime</CODE> 
  values are <CODE>{1972, 12, 31, 0, 0, 0, ()}</CODE> and <CODE>{1972, 12, 31, 
  23, 59, 59.0, ()}</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-add-yearMonthDuration-to-dateTime 
name=func-add-yearMonthDuration-to-dateTime></A>10.8.4 
op:add-yearMonthDuration-to-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:add-yearMonthDuration-to-dateTime</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:dateTime</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:dateTime</CODE> computed by adding 
<CODE>$arg2</CODE> to the value of <CODE>$arg1</CODE> using the algorithm 
described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> disregarding the rule about leap 
seconds. If <CODE>$arg2</CODE> is negative, then the result 
<CODE>xs:dateTime</CODE> precedes <CODE>$arg1</CODE>.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "+" operator on <CODE>xs:dateTime</CODE> and 
<CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-add-yearMonthDuration-to-dateTime-examples 
name=func-add-yearMonthDuration-to-dateTime-examples></A>10.8.4.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:add-yearMonthDuration-to-dateTime(xs:dateTime("2000-10-30T11:12:00"), 
  xs:yearMonthDuration("P1Y2M"))</CODE> returns an <CODE>xs:dateTime</CODE> 
  value corresponding to the lexical representation 
  <CODE>"2001-12-30T11:12:00"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-add-dayTimeDuration-to-dateTime 
name=func-add-dayTimeDuration-to-dateTime></A>10.8.5 
op:add-dayTimeDuration-to-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:add-dayTimeDuration-to-dateTime</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:dateTime</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:dateTime</CODE> computed by adding 
<CODE>$arg2</CODE> to the value of <CODE>$arg1</CODE> using the algorithm 
described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> disregarding the rule about leap 
seconds. If <CODE>$arg2</CODE> is negative, then the result 
<CODE>xs:dateTime</CODE> precedes <CODE>$arg1</CODE>.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "+" operator on <CODE>xs:dateTime</CODE> and 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-add-dayTimeDuration-to-dateTime-examples 
name=func-add-dayTimeDuration-to-dateTime-examples></A>10.8.5.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:add-dayTimeDuration-to-dateTime(xs:dateTime("2000-10-30T11:12:00"), 
  xs:dayTimeDuration("P3DT1H15M"))</CODE> returns an <CODE>xs:dateTime</CODE> 
  value corresponding to the lexical representation 
  <CODE>"2000-11-02T12:27:00"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-yearMonthDuration-from-dateTime 
name=func-subtract-yearMonthDuration-from-dateTime></A>10.8.6 
op:subtract-yearMonthDuration-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-yearMonthDuration-from-dateTime</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:dateTime</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:dateTime</CODE> computed by negating 
<CODE>$arg2</CODE> and adding the result to the value of <CODE>$arg1</CODE> 
using the algorithm described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> disregarding the rule about leap 
seconds. If <CODE>$arg2</CODE> is negative, then the <CODE>xs:dateTime</CODE> 
returned follows <CODE>$arg1</CODE>.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "-" operator on <CODE>xs:dateTime</CODE> and 
<CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-yearMonthDuration-from-dateTime-examples 
name=func-subtract-yearMonthDuration-from-dateTime-examples></A>10.8.6.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:subtract-yearMonthDuration-from-dateTime(xs:dateTime("2000-10-30T11:12:00"), 
  xs:yearMonthDuration("P1Y2M"))</CODE> returns an <CODE>xs:dateTime</CODE> 
  value corresponding to the lexical representation 
  <CODE>"1999-08-30T11:12:00"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-dayTimeDuration-from-dateTime 
name=func-subtract-dayTimeDuration-from-dateTime></A>10.8.7 
op:subtract-dayTimeDuration-from-dateTime</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-dayTimeDuration-from-dateTime</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dateTime</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:dateTime</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:dateTime</CODE> computed by negating 
<CODE>$arg2</CODE> and adding the result to the value of <CODE>$arg1</CODE> 
using the algorithm described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> disregarding the rule about leap 
seconds. If <CODE>$arg2</CODE> is negative, then the <CODE>xs:dateTime</CODE> 
returned follows <CODE>$arg1</CODE>.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "-" operator on <CODE>xs:dateTime</CODE> and 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-dayTimeDuration-from-dateTime-examples 
name=func-subtract-dayTimeDuration-from-dateTime-examples></A>10.8.7.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:subtract-dayTimeDuration-from-dateTime(xs:dateTime("2000-10-30T11:12:00"), 
  xs:dayTimeDuration("P3DT1H15M"))</CODE> returns an <CODE>xs:dateTime</CODE> 
  value corresponding to the lexical representation 
  <CODE>"2000-10-27T09:57:00"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-add-yearMonthDuration-to-date 
name=func-add-yearMonthDuration-to-date></A>10.8.8 
op:add-yearMonthDuration-to-date</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:add-yearMonthDuration-to-date</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:date</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:date</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:date</CODE> computed by adding 
<CODE>$arg2</CODE> to the starting instant of <CODE>$arg1</CODE> using the 
algorithm described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> and discarding the time components 
from the resulting <CODE>xs:dateTime</CODE>. If <CODE>$arg2</CODE> is negative, 
then the <CODE>xs:date</CODE> returned precedes <CODE>$arg1</CODE>.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at time <CODE>00:00:00</CODE> on that date.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "+" operator on <CODE>xs:date</CODE> and 
<CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-add-yearMonthDuration-to-date-examples 
name=func-add-yearMonthDuration-to-date-examples></A>10.8.8.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:add-yearMonthDuration-to-date(xs:date("2000-10-30"), 
  xs:yearMonthDuration("P1Y2M"))</CODE> returns the <CODE>xs:date</CODE> 
  corresponding to December 30, 2001.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-add-dayTimeDuration-to-date 
name=func-add-dayTimeDuration-to-date></A>10.8.9 
op:add-dayTimeDuration-to-date</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:add-dayTimeDuration-to-date</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:date</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:date</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:date</CODE> computed by adding 
<CODE>$arg2</CODE> to the starting instant of <CODE>$arg1</CODE> using the 
algorithm described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> and discarding the time components 
from the resulting <CODE>xs:dateTime</CODE>. If <CODE>$arg2</CODE> is negative, 
then the <CODE>xs:date</CODE> returned precedes <CODE>$arg1</CODE>.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at time <CODE>00:00:00</CODE> on that date.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "+" operator on <CODE>xs:date</CODE> and 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-dayTimeDuration-to-date-examples 
name=func-subtract-dayTimeDuration-to-date-examples></A>10.8.9.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:add-dayTimeDuration-to-date(xs:date("2004-10-30Z"), 
  xs:dayTimeDuration("P2DT2H30M0S"))</CODE> returns the <CODE>xs:date</CODE> 
  November 1, 2004. The starting instant of the first argument is the 
  <CODE>xs:dateTime</CODE> value <CODE>{2004, 10, 30, 0, 0, 0, PT0S}</CODE>. 
  Adding the second argument to this, gives the <CODE>xs:dateTime</CODE> value 
  <CODE>{2004, 11, 1, 2, 30, 0, PT0S}</CODE>. The time components are then 
  discarded.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-yearMonthDuration-from-date 
name=func-subtract-yearMonthDuration-from-date></A>10.8.10 
op:subtract-yearMonthDuration-from-date</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-yearMonthDuration-from-date</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:date</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:yearMonthDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:date</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:date</CODE> computed by negating 
<CODE>$arg2</CODE> and adding the result to the starting instant of 
<CODE>$arg1</CODE> using the algorithm described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> and discarding the time components 
from the resulting <CODE>xs:dateTime</CODE>. If <CODE>$arg2</CODE> is positive, 
then the <CODE>xs:date</CODE> returned precedes <CODE>$arg1</CODE>.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at <CODE>00:00:00</CODE> on that date.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "-" operator on <CODE>xs:date</CODE> and 
<CODE>xs:yearMonthDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-yearMonthDuration-from-date-examples 
name=func-subtract-yearMonthDuration-from-date-examples></A>10.8.10.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:subtract-yearMonthDuration-from-date(xs:date("2000-10-30"), 
  xs:yearMonthDuration("P1Y2M"))</CODE> returns the <CODE>xs:date</CODE> August 
  30, 1999.</P>
  <LI>
  <P><CODE>op:subtract-yearMonthDuration-from-date(xs:date("2000-02-29Z"), 
  xs:yearMonthDuration("P1Y"))</CODE> returns the <CODE>xs:date</CODE> February 
  28, 1999 in timezone <CODE>Z</CODE>.</P>
  <LI>
  <P><CODE>op:subtract-yearMonthDuration-from-date(xs:date("2000-10-31-05:00"), 
  xs:yearMonthDuration("P1Y1M"))</CODE> returns the <CODE>xs:date</CODE> 
  September 30, 1999 in timezone <CODE>-05:00</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-dayTimeDuration-from-date 
name=func-subtract-dayTimeDuration-from-date></A>10.8.11 
op:subtract-dayTimeDuration-from-date</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-dayTimeDuration-from-date</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:date</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:date</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the <CODE>xs:date</CODE> computed by negating 
<CODE>$arg2</CODE> and adding the result to the starting instant of 
<CODE>$arg1</CODE> using the algorithm described in Appendix E of <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> and discarding the time components 
from the resulting <CODE>xs:dateTime</CODE>. If <CODE>$arg2</CODE> is positive, 
then the <CODE>xs:date</CODE> returned precedes <CODE>$arg1</CODE>.</P>
<P>The starting instant of an <CODE>xs:date</CODE> is the 
<CODE>xs:dateTime</CODE> at <CODE>00:00:00</CODE> on that date.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "-" operator on <CODE>xs:date</CODE> and 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-dayTimeDuration-from-date-examples 
name=func-subtract-dayTimeDuration-from-date-examples></A>10.8.11.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:subtract-dayTimeDuration-from-date(xs:date("2000-10-30"), 
  xs:dayTimeDuration("P3DT1H15M"))</CODE> returns the <CODE>xs:date</CODE> 
  October 26, 2000.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-add-dayTimeDuration-to-time 
name=func-add-dayTimeDuration-to-time></A>10.8.12 
op:add-dayTimeDuration-to-time</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:add-dayTimeDuration-to-time</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:time</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:time</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: First, the days component in the canonical lexical representation of 
<CODE>$arg2</CODE> is set to zero (0) and the value of the resulting 
<CODE>xs:dayTimeDuration</CODE> is calculated. Alternatively, the value of 
<CODE>$arg2</CODE> modulus 86,400 is used as the second argument. This value is 
added to the value of <CODE>$arg1</CODE> converted to an 
<CODE>xs:dateTime</CODE> using a reference date such as <CODE>1972-12-31</CODE> 
and the time components of the result returned. Note that the 
<CODE>xs:time</CODE> returned may occur in a following or preceding day and may 
be less than <CODE>$arg1</CODE>.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "+" operator on <CODE>xs:time</CODE> and 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-add-dayTimeDuration-to-time-examples 
name=func-add-dayTimeDuration-to-time-examples></A>10.8.12.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>op:add-dayTimeDuration-to-time(xs:time("11:12:00"), 
  xs:dayTimeDuration("P3DT1H15M"))</CODE> returns the <CODE>xs:time</CODE> value 
  corresponding to the lexical representation "<CODE>12:27:00</CODE>".</P>
  <LI>
  <P><CODE>op:add-dayTimeDuration-to-time(xs:time("23:12:00+03:00"), 
  xs:dayTimeDuration("P1DT3H15M"))</CODE> returns the <CODE>xs:time</CODE> value 
  corresponding to the lexical representation "<CODE>02:27:00+03:00</CODE>", 
  i.e. <CODE>{0, 0, 0, 2, 27, 0, PT3H}</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subtract-dayTimeDuration-from-time 
name=func-subtract-dayTimeDuration-from-time></A>10.8.13 
op:subtract-dayTimeDuration-from-time</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:subtract-dayTimeDuration-from-time</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:time</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:dayTimeDuration</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:time</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: The result is calculated by first setting the day component in the 
canonical lexical representation of <CODE>$arg2</CODE> to zero (0) and 
calculating the value of the resulting <CODE>xs:dayTimeDuration</CODE>. 
Alternatively, the value of <CODE>$arg2</CODE> modulus 86,400 is used as the 
second argument. This value is subtracted from the value of <CODE>$arg1</CODE> 
converted to an <CODE>xs:dateTime</CODE> using a reference date such as 
<CODE>1972-12-31</CODE> and the time components of the result are returned. Note 
that the <CODE>xs:time</CODE> returned may occur in a preceding or following day 
and may be greater than <CODE>$arg1</CODE>.</P>
<P>The result has the same timezone as <CODE>$arg1</CODE>. If <CODE>$arg1</CODE> 
has no timezone, the result has no timezone.</P>
<P>This functions backs up the "-" operator on <CODE>xs:time</CODE> and 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<DIV class=div4>
<H5><A id=func-subtract-dayTimeDuration-from-time-examples 
name=func-subtract-dayTimeDuration-from-time-examples></A>10.8.13.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:subtract-dayTimeDuration-from-time(xs:time("11:12:00"), 
  xs:dayTimeDuration("P3DT1H15M"))</CODE> returns an <CODE>xs:time</CODE> value 
  corresponding to the lexical representation <CODE>"09:57:00"</CODE>.</P>
  <LI>
  <P><CODE>op:subtract-dayTimeDuration-from-time(xs:time("08:20:00-05:00"), 
  xs:dayTimeDuration("P23DT10H10M"))</CODE> returns the <CODE>xs:time</CODE> 
  value corresponding to the lexical representation 
  <CODE>"22:10:00-05:00"</CODE> i.e. <CODE>{0, 0, 0, 22, 10, 0, 
  -PT5H}</CODE></P></LI></UL></DIV></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=QName-funcs name=QName-funcs></A>11 Functions Related to QNames</H2>
<DIV class=div2>
<H3><A id=QName-constructors name=QName-constructors></A>11.1 Additional 
Constructor Functions for QNames</H3>
<P>This section defines additional constructor functions for QName as defined in 
<A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>. Leading and trailing whitespace, 
if present, is stripped from string arguments before the result is 
constructed.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-resolve-QName"><CODE>fn:resolve-QName</CODE></A></TD>
    <TD>Returns an <CODE>xs:QName</CODE> with the lexical form given in the 
      first argument. The prefix is resolved using the in-scope namespaces for a 
      given element.</TD>
    <TD></TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-QName"><CODE>fn:QName</CODE></A></TD>
    <TD>Returns an <CODE>xs:QName</CODE> with the namespace URI given in the 
      first argument and the local name and prefix in the second 
  argument.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-resolve-QName name=func-resolve-QName></A>11.1.1 
fn:resolve-QName</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:resolve-QName</CODE>(<CODE 
class=arg>$qname</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$element</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>element()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:QName?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:QName</CODE> value (that is, an expanded-QName) 
by taking an <CODE>xs:string</CODE> that has the lexical form of an 
<CODE>xs:QName</CODE> (a string in the form "prefix:local-name" or "local-name") 
and resolving it using the in-scope namespaces for a given element.</P>
<P>If <CODE>$qname</CODE> does not have the correct lexical form for 
<CODE>xs:QName</CODE> an error is raised [<A title=err:FOCA0002 
href="REC-xpath-functions-20070123.htm#ERRFOCA0002">err:FOCA0002</A>].</P>
<P>If <CODE>$qname</CODE> is the empty sequence, returns the empty sequence.</P>
<P>More specifically, the function searches the namespace bindings of 
<CODE>$element</CODE> for a binding whose name matches the prefix of 
<CODE>$qname</CODE>, or the zero-length string if it has no prefix, and 
constructs an expanded-QName whose local name is taken from the supplied 
<CODE>$qname</CODE>, and whose namespace URI is taken from the string value of 
the namespace binding.</P>
<P>If the <CODE>$qname</CODE> has a prefix and if there is no namespace binding 
for <CODE>$element</CODE> that matches this prefix, then an error is raised [<A 
title=err:FONS0004 
href="REC-xpath-functions-20070123.htm#ERRFONS0004">err:FONS0004</A>].</P>
<P>If the <CODE>$qname</CODE> has no prefix, and there is no namespace binding 
for <CODE>$element</CODE> corresponding to the default (unnamed) namespace, then 
the resulting expanded-QName has no namespace part.</P>
<P>The prefix (or absence of a prefix) in the supplied <CODE>$qname</CODE> 
argument is retained in the returned expanded-QName, as discussed in <A 
href="http://www.w3.org/TR/xpath-datamodel/#terminology">Section 2.1 
Terminology</A><SUP><SMALL>DM</SMALL></SUP>.</P>
<DIV class=div4>
<H5><A id=func-resolve-QName-uasge name=func-resolve-QName-uasge></A>11.1.1.1 
Usage Note</H5>
<P>Sometimes the requirement is to construct an <CODE>xs:QName</CODE> without 
using the default namespace. This can be achieved by writing:</P>
<DIV class=exampleInner><PRE> if (contains($qname, ":")) then fn:resolve-QName($qname, $element) else
                            fn:QName("", $qname)
</PRE></DIV>
<P>If the requirement is to construct an <CODE>xs:QName</CODE> using the 
namespaces in the static context, then the <CODE>xs:QName</CODE> constructor 
should be used.</P></DIV>
<DIV class=div4>
<H5><A id=func-resolve-QName-examples 
name=func-resolve-QName-examples></A>11.1.1.2 Examples</H5>
<P>Assume that the element bound to <CODE>$element</CODE> has a single namespace 
binding bound to the prefix <CODE>eg</CODE>.</P>
<UL>
  <LI>
  <P><CODE>fn:resolve-QName("hello", $element)</CODE> returns a QName with local 
  name "hello" that is in no namespace.</P>
  <LI>
  <P><CODE>fn:resolve-QName("eg:myFunc", $element)</CODE> returns an 
  <CODE>xs:QName</CODE> whose namespace URI is specified by the namespace 
  binding corresponding to the prefix "eg" and whose local name is 
  "myFunc".</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-QName name=func-QName></A>11.1.2 fn:QName</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:QName</CODE>(<CODE 
class=arg>$paramURI</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$paramQName</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:QName</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:QName</CODE> with the namespace URI given in 
<CODE>$paramURI</CODE>. If <CODE>$paramURI</CODE> is the zero-length string or 
the empty sequence, it represents "no namespace"; in this case, if the value of 
<CODE>$paramQName</CODE> contains a colon (<CODE>:</CODE>), an error is raised 
[<A title=err:FOCA0002 
href="REC-xpath-functions-20070123.htm#ERRFOCA0002">err:FOCA0002</A>]. 
The prefix (or absence of a prefix) in <CODE>$paramQName</CODE> is retained in 
the returned <CODE>xs:QName</CODE> value. The local name in the result is taken 
from the local part of <CODE>$paramQName</CODE>.</P>
<P>If <CODE>$paramQName</CODE> does not have the correct lexical form for 
<CODE>xs:QName</CODE> an error is raised [<A title=err:FOCA0002 
href="REC-xpath-functions-20070123.htm#ERRFOCA0002">err:FOCA0002</A>].</P>
<P>Note that unlike <CODE>xs:QName</CODE> this function does not require a 
<CODE>xs:string</CODE> literal as the argument.</P>
<DIV class=div4>
<H5><A id=func-QName-examples name=func-QName-examples></A>11.1.2.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:QName("http://www.example.com/example", "person")</CODE> returns 
  an <CODE>xs:QName</CODE> with namespace URI = 
  "http://www.example.com/example", local name = "person" and prefix = "".</P>
  <LI>
  <P><CODE>fn:QName("http://www.example.com/example", "ht:person")</CODE> 
  returns an <CODE>xs:QName</CODE> with namespace URI = 
  "http://www.example.com/example", local name = "person" and prefix = 
  "ht".</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=QName-functions name=QName-functions></A>11.2 Functions and Operators 
Related to QNames</H3>
<P>This section discusses functions on QNames as defined in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-QName-equal"><CODE>op:QName-equal</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if the local names and namespace URIs of the 
      two arguments are equal.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-prefix-from-QName"><CODE>fn:prefix-from-QName</CODE></A></TD>
    <TD>Returns an <CODE>xs:NCName</CODE> representing the prefix of the 
      <CODE>xs:QName</CODE> argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-local-name-from-QName"><CODE>fn:local-name-from-QName</CODE></A></TD>
    <TD>Returns an <CODE>xs:NCName</CODE> representing the local name of the 
      <CODE>xs:QName</CODE> argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-namespace-uri-from-QName"><CODE>fn:namespace-uri-from-QName</CODE></A></TD>
    <TD>Returns the namespace URI for the <CODE>xs:QName</CODE> argument. If 
      the <CODE>xs:QName</CODE> is in no namespace, the zero-length string is 
      returned.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-namespace-uri-for-prefix"><CODE>fn:namespace-uri-for-prefix</CODE></A></TD>
    <TD>Returns the namespace URI of one of the in-scope namespaces for the 
      given element, identified by its namespace prefix.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-in-scope-prefixes"><CODE>fn:in-scope-prefixes</CODE></A></TD>
    <TD>Returns the prefixes of the in-scope namespaces for the given 
    element.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-QName-equal name=func-QName-equal></A>11.2.1 op:QName-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:QName-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:QName</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:QName</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if the namespace URIs of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> are equal and the local names of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> are identical based on the Unicode 
code point collation 
(<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>). 
Otherwise, returns <CODE>false</CODE>. Two namespace URIs are considered equal 
if they are either both absent or both present and identical based on the 
Unicode code point collation. The prefix parts of <CODE>$arg1</CODE> and 
<CODE>$arg2</CODE>, if any, are ignored.</P>
<P>Backs up the "eq" and "ne" operators on values of type 
<CODE>xs:QName</CODE>.</P></DIV>
<DIV class=div3>
<H4><A id=func-prefix-from-QName name=func-prefix-from-QName></A>11.2.2 
fn:prefix-from-QName</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:prefix-from-QName</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:QName?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:NCName?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:NCName</CODE> representing the prefix of 
<CODE>$arg</CODE>. The empty sequence is returned if <CODE>$arg</CODE> is the 
empty sequence or if the value of <CODE>$arg</CODE> contains no 
prefix.</P></DIV>
<DIV class=div3>
<H4><A id=func-local-name-from-QName name=func-local-name-from-QName></A>11.2.3 
fn:local-name-from-QName</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:local-name-from-QName</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:QName?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:NCName?</CODE></DIV></DIV>
<P>Summary: Returns an <CODE>xs:NCName</CODE> representing the local part of 
<CODE>$arg</CODE>. If <CODE>$arg</CODE> is the empty sequence, returns the empty 
sequence.</P>
<DIV class=div4>
<H5><A id=func-local-name-from-QName-examples 
name=func-local-name-from-QName-examples></A>11.2.3.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:local-name-from-QName(fn:QName("http://www.example.com/example", 
  "person"))</CODE> returns <CODE>"person"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-namespace-uri-from-QName 
name=func-namespace-uri-from-QName></A>11.2.4 fn:namespace-uri-from-QName</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:namespace-uri-from-QName</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:QName?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI?</CODE></DIV></DIV>
<P>Summary: Returns the namespace URI for <CODE>$arg</CODE> as an 
<CODE>xs:string</CODE>. If <CODE>$arg</CODE> is the empty sequence, the empty 
sequence is returned. If <CODE>$arg</CODE> is in no namespace, the zero-length 
string is returned.</P>
<DIV class=div4>
<H5><A id=func-namespace-uri-from-QName-examples 
name=func-namespace-uri-from-QName-examples></A>11.2.4.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:namespace-uri-from-QName(fn:QName("http://www.example.com/example", 
  "person"))</CODE> returns the namespace URI corresponding to 
  <CODE>"http://www.example.com/example"</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-namespace-uri-for-prefix 
name=func-namespace-uri-for-prefix></A>11.2.5 fn:namespace-uri-for-prefix</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>fn:namespace-uri-for-prefix</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$prefix</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$element</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>element()</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:anyURI?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the namespace URI of one of the in-scope namespaces for 
<CODE>$element</CODE>, identified by its namespace prefix.</P>
<P>If <CODE>$element</CODE> has an in-scope namespace whose namespace prefix is 
equal to <CODE>$prefix</CODE>, it returns the namespace URI of that namespace. 
If <CODE>$prefix</CODE> is the zero-length string or the empty sequence, it 
returns the namespace URI of the default (unnamed) namespace. Otherwise, it 
returns the empty sequence.</P>
<P>Prefixes are equal only if their Unicode code points match exactly.</P></DIV>
<DIV class=div3>
<H4><A id=func-in-scope-prefixes name=func-in-scope-prefixes></A>11.2.6 
fn:in-scope-prefixes</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:in-scope-prefixes</CODE>(<CODE 
class=arg>$element</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>element()</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string*</CODE></DIV></DIV>
<P>Summary: Returns the prefixes of the in-scope namespaces for 
<CODE>$element</CODE>. For namespaces that have a prefix, it returns the prefix 
as an <CODE>xs:NCName</CODE>. For the default namespace, which has no prefix, it 
returns the zero-length string.</P></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=binary-functions name=binary-functions></A>12 Operators on 
base64Binary and hexBinary</H2>
<DIV class=div2>
<H3><A id=binary-value-comparisons name=binary-value-comparisons></A>12.1 
Comparisons of base64Binary and hexBinary Values</H3>
<P>The following comparison operators on <CODE>xs:base64Binary</CODE> and 
<CODE>xs:hexBinary</CODE> values are defined. Comparisons take two operands of 
the same type; that is, both operands must be <CODE>xs:base64Binary</CODE> or 
both operands may be <CODE>xs:hexBinary</CODE>. Each returns a boolean 
value.</P>
<P>A value of type <CODE>xs:hexBinary</CODE> can be compared with a value of 
type <CODE>xs:base64Binary</CODE> by casting one value to the other type. See <A 
href="REC-xpath-functions-20070123.htm#casting-to-binary"><B>17.1.7 
Casting to xs:base64Binary and xs:hexBinary</B></A>.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-hexBinary-equal"><CODE>op:hexBinary-equal</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if the two arguments are equal.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-base64Binary-equal"><CODE>op:base64Binary-equal</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if the two arguments are 
equal.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-hexBinary-equal name=func-hexBinary-equal></A>12.1.1 
op:hexBinary-equal</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:hexBinary-equal</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$value1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:hexBinary</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$value2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:hexBinary</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if <CODE>$value1</CODE> and 
<CODE>$value2</CODE> are of the same length, measured in binary octets, and 
contain the same octets in the same order. Otherwise, returns 
<CODE>false</CODE>.</P>
<P>This function backs up the "eq" and "ne" operators on 
<CODE>xs:hexBinary</CODE> values.</P></DIV>
<DIV class=div3>
<H4><A id=func-base64Binary-equal name=func-base64Binary-equal></A>12.1.2 
op:base64Binary-equal</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>op:base64Binary-equal</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$value1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:base64Binary</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$value2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:base64Binary</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if <CODE>$value1</CODE> and 
<CODE>$value2</CODE> are of the same length, measured in binary octets, and 
contain the same octets in the same order. Otherwise, returns 
<CODE>false</CODE>.</P>
<P>This function backs up the "eq" and "ne" operators on 
<CODE>xs:base64Binary</CODE> values.</P></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=NOTATION-functions name=NOTATION-functions></A>13 Operators on 
NOTATION</H2>
<DIV class=div2>
<H3><A id=op.NOTATION name=op.NOTATION></A>13.1 Operators on NOTATION</H3>
<P>This section discusses functions that take NOTATION as arguments.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-NOTATION-equal"><CODE>op:NOTATION-equal</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if the two arguments are <A 
      href="REC-xpath-functions-20070123.htm#func-QName-equal"><CODE>op:QName-equal</CODE></A>.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-NOTATION-equal name=func-NOTATION-equal></A>13.1.1 
op:NOTATION-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:NOTATION-equal</CODE>(<CODE 
class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:NOTATION</CODE>, <CODE class=arg>$arg2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:NOTATION</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Returns <CODE>true</CODE> if the namespace URIs of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> are equal and the local names of 
<CODE>$arg1</CODE> and <CODE>$arg2</CODE> are identical based on the Unicode 
code point collation: 
<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>. 
Otherwise, returns false. Two namespace URIs are considered equal if they are 
either both absent or both present and identical based on the Unicode code point 
collation. The prefix parts of <CODE>$arg1</CODE> and <CODE>$arg2</CODE>, if 
any, are ignored.</P>
<P>Backs up the "eq" and "ne" operators on values of type 
<CODE>xs:NOTATION</CODE>.</P></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=node-functions name=node-functions></A>14 Functions and Operators on 
Nodes</H2>
<P>This section discusses functions and operators on nodes. Nodes are formally 
defined in <A href="http://www.w3.org/TR/xpath-datamodel/#Node">Section 6 
Nodes</A><SUP><SMALL>DM</SMALL></SUP>.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-name"><CODE>fn:name</CODE></A></TD>
    <TD>Returns the name of the context node or the specified node as an 
      <CODE>xs:string</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-local-name"><CODE>fn:local-name</CODE></A></TD>
    <TD>Returns the local name of the context node or the specified node as an 
      <CODE>xs:NCName</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-namespace-uri"><CODE>fn:namespace-uri</CODE></A></TD>
    <TD>Returns the namespace URI as an <CODE>xs:anyURI</CODE> for the 
      <CODE>xs:QName</CODE> of the argument node or the context node if the 
      argument is omitted. This may be the URI corresponding to the zero-length 
      string if the <CODE>xs:QName</CODE> is in no namespace.</TD>
    <TD></TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-number"><CODE>fn:number</CODE></A></TD>
    <TD>Returns the value of the context item after atomization or the 
      specified argument converted to an <CODE>xs:double</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-lang"><CODE>fn:lang</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> or <CODE>false</CODE>, depending on whether 
      the language of the given node or the context node, as defined using the 
      xml:lang attribute, is the same as, or a sublanguage of, the language 
      specified by the argument.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-is-same-node"><CODE>op:is-same-node</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if the two arguments have the same 
    identity.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-node-before"><CODE>op:node-before</CODE></A></TD>
    <TD>Indicates whether one node appears before another node in document 
      order.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-node-after"><CODE>op:node-after</CODE></A></TD>
    <TD>Indicates whether one node appears after another node in document 
      order.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-root"><CODE>fn:root</CODE></A></TD>
    <TD>Returns the root of the tree to which the node argument 
  belongs.</TD></TR></TBODY></TABLE>
<P>For the illustrative examples below assume an XQuery or transformation 
operating on a PurchaseOrder document containing a number of line-item elements. 
Each line-item has child elements called description, price, quantity, etc. 
whose content is different for each line-item. Quantity has simple content of 
type <CODE>xs:decimal</CODE>. Further assume that variables <CODE>$item1</CODE>, 
<CODE>$item2</CODE>, etc. are each bound to single line-item element nodes in 
the document in sequence and that the value of the quantity child of the first 
line-item is <CODE>5.0</CODE>.</P>
<DIV class=exampleInner><PRE>&lt;PurchaseOrder&gt;
  &lt;line-item&gt;
    &lt;description&gt; ... &lt;/description&gt;
    &lt;price&gt; ... &lt;/price&gt;
    &lt;quantity&gt;5.0&lt;/quantity&gt;
      ...
  &lt;/line-item&gt;
  &lt;line-item&gt;
      ...
  &lt;/line-item&gt;
      ...
&lt;/PurchaseOrder&gt;
</PRE></DIV>
<DIV class=div2>
<H3><A id=func-name name=func-name></A>14.1 fn:name</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:name</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:string</CODE></DIV>
<DIV class=proto><CODE class=function>fn:name</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns the name of a node, as an <CODE>xs:string</CODE> that is 
either the zero-length string, or has the lexical form of an 
<CODE>xs:QName</CODE>.</P>
<P>If the argument is omitted, it defaults to the context item (<CODE>.</CODE>). 
The behavior of the function if the argument is omitted is exactly the same as 
if the context item had been passed as the argument.</P>
<P>The following errors may be raised: if the context item is undefined [<A 
title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
if the context item is not a node [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>If the argument is supplied and is the empty sequence, the function returns 
the zero-length string.</P>
<P>If the target node has no name (that is, if it is a document node, a comment, 
a text node, or a namespace binding having no name), the function returns the 
zero-length string.</P>
<P>Otherwise, the value returned is <A 
href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string(fn:node-name($arg))</CODE></A>.</P></DIV>
<DIV class=div2>
<H3><A id=func-local-name name=func-local-name></A>14.2 fn:local-name</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:local-name</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:string</CODE></DIV>
<DIV class=proto><CODE class=function>fn:local-name</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns the local part of the name of <CODE>$arg</CODE> as an 
<CODE>xs:string</CODE> that will either be the zero-length string or will have 
the lexical form of an <CODE>xs:NCName</CODE>.</P>
<P>If the argument is omitted, it defaults to the context item (<CODE>.</CODE>). 
The behavior of the function if the argument is omitted is exactly the same as 
if the context item had been passed as the argument.</P>
<P>The following errors may be raised: if the context item is undefined [<A 
title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
if the context item is not a node [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>If the argument is supplied and is the empty sequence, the function returns 
the zero-length string.</P>
<P>If the target node has no name (that is, if it is a document node, a comment, 
or a text node), the function returns the zero-length string.</P>
<P>Otherwise, the value returned will be the local part of the expanded-QName of 
the target node (as determined by the <CODE>dm:node-name</CODE> accessor in <A 
href="http://www.w3.org/TR/xpath-datamodel/#dm-node-name">Section 5.11 node-name 
Accessor</A><SUP><SMALL>DM</SMALL></SUP>. This will be an <CODE>xs:string</CODE> 
whose lexical form is an <CODE>xs:NCName</CODE>.</P></DIV>
<DIV class=div2>
<H3><A id=func-namespace-uri name=func-namespace-uri></A>14.3 
fn:namespace-uri</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:namespace-uri</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:anyURI</CODE></DIV>
<DIV class=proto><CODE class=function>fn:namespace-uri</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI</CODE></DIV></DIV>
<P>Summary: Returns the namespace URI of the <CODE>xs:QName</CODE> of 
<CODE>$arg</CODE>.</P>
<P>If the argument is omitted, it defaults to the context node (<CODE>.</CODE>). 
The behavior of the function if the argument is omitted is exactly the same as 
if the context item had been passed as the argument.</P>
<P>The following errors may be raised: if the context item is undefined [<A 
title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
if the context item is not a node [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>If <CODE>$arg</CODE> is neither an element nor an attribute node, or if it is 
an element or attribute node whose expanded-QName (as determined by the 
<CODE>dm:node-name</CODE> accessor in the <A 
href="http://www.w3.org/TR/xpath-datamodel/#dm-node-name">Section 5.11 node-name 
Accessor</A><SUP><SMALL>DM</SMALL></SUP>) is in no namespace, then the function 
returns the <CODE>xs:anyURI</CODE> corresponding to the zero-length 
string.</P></DIV>
<DIV class=div2>
<H3><A id=func-number name=func-number></A>14.4 fn:number</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:number</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:double</CODE></DIV>
<DIV class=proto><CODE class=function>fn:number</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:double</CODE></DIV></DIV>
<P>Summary: Returns the value indicated by <CODE>$arg</CODE> or, if 
<CODE>$arg</CODE> is not specified, the context item after atomization, 
converted to an <CODE>xs:double</CODE></P>
<P>Calling the zero-argument version of the function is defined to give the same 
result as calling the single-argument version with the context item 
(<CODE>.</CODE>). That is, <CODE>fn:number()</CODE> is equivalent to 
<CODE>fn:number(.)</CODE>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence or if <CODE>$arg</CODE> or the 
context item cannot be converted to an <CODE>xs:double</CODE>, the 
<CODE>xs:double</CODE> value <CODE>NaN</CODE> is returned. If the context item 
is undefined an error is raised: [<A title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, <CODE>NaN</CODE> is returned. 
Otherwise, <CODE>$arg</CODE>, or the context item after atomization, is 
converted to an <CODE>xs:double</CODE> following the rules of <A 
href="REC-xpath-functions-20070123.htm#casting-to-double"><B>17.1.3.2 
Casting to xs:double</B></A>. If the conversion to <CODE>xs:double</CODE> fails, 
the <CODE>xs:double</CODE> value <CODE>NaN</CODE> is returned.</P>
<DIV class=div3>
<H4><A id=func-number-examples name=func-number-examples></A>14.4.1 
Examples</H4>
<UL>
  <LI>
  <P><CODE>fn:number($item1/quantity)</CODE> returns <CODE>5.0</CODE>.</P>
  <LI>
  <P><CODE>fn:number($item2)</CODE> returns <CODE>NaN</CODE>.</P>
  <LI>
  <P>Assume that the context item is the <CODE>xs:string</CODE> 
  "<CODE>15</CODE>". <CODE>fn:number()</CODE> returns 
  <CODE>1.5E1</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-lang name=func-lang></A>14.5 fn:lang</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:lang</CODE>(<CODE 
class=arg>$testlang</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:lang</CODE>(<CODE 
class=arg>$testlang</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$node</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: This function tests whether the language of <CODE>$node</CODE>, or 
the context item if the second argument is omitted, as specified by 
<CODE>xml:lang</CODE> attributes is the same as, or is a sublanguage of, the 
language specified by <CODE>$testlang</CODE>. The behavior of the function if 
the second argument is omitted is exactly the same as if the context item 
(<CODE>.</CODE>) had been passed as the second argument. The language of the 
argument node, or the context item if the second argument is omitted, is 
determined by the value of the <CODE>xml:lang</CODE> attribute on the node, or, 
if the node has no such attribute, by the value of the <CODE>xml:lang</CODE> 
attribute on the nearest ancestor of the node that has an <CODE>xml:lang</CODE> 
attribute. If there is no such ancestor, then the function returns 
<CODE>false</CODE></P>
<P>The following errors may be raised: if the context item is undefined [<A 
title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
if the context item is not a node [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>If <CODE>$testlang</CODE> is the empty sequence it is interpreted as the 
zero-length string.</P>
<P>The relevant <CODE>xml:lang</CODE> attribute is determined by the value of 
the XPath expression:</P>
<DIV class=exampleInner><PRE>(ancestor-or-self::*/@xml:lang)[last()]
</PRE></DIV>
<P>If this expression returns an empty sequence, the function returns 
<CODE>false</CODE>.</P>
<P>Otherwise, the function returns <CODE>true</CODE> if and only if, based on a 
caseless default match as specified in section 3.13 of <A 
href="REC-xpath-functions-20070123.htm#Unicode4">[The 
Unicode Standard]</A>, either:</P>
<OL class=enumar>
  <LI>
  <P>(1) <CODE>$testlang</CODE> is equal to the string-value of the relevant 
  <CODE>xml:lang</CODE> attribute, or</P>
  <LI>
  <P>(2) <CODE>$testlang</CODE> is equal to some substring of the string-value 
  of the relevant <CODE>xml:lang</CODE> attribute that starts at the start of 
  the string-value and ends immediately before a hyphen, "-" (The character "-" 
  is HYPHEN-MINUS, #x002D).</P></LI></OL>
<DIV class=div3>
<H4><A id=func-lang-examples name=func-lang-examples></A>14.5.1 Examples</H4>
<UL>
  <LI>
  <P>The expression <CODE>fn:lang("en")</CODE> would return <CODE>true</CODE> if 
  the context node were any of the following four elements:</P>
  <UL>
    <LI>
    <P><CODE>&lt;para xml:lang="en"/&gt;</CODE></P>
    <LI>
    <P><CODE>&lt;div xml:lang="en"&gt;&lt;para&gt;And now, and 
    forever!&lt;/para&gt;&lt;/div&gt;</CODE></P>
    <LI>
    <P><CODE>&lt;para xml:lang="EN"/&gt;</CODE></P>
    <LI>
    <P><CODE>&lt;para xml:lang="en-us"/&gt;</CODE></P></LI></UL>
  <LI>
  <P>The expression <CODE>fn:lang("fr")</CODE> would return <CODE>false</CODE> 
  if the context node were <CODE>&lt;para 
xml:lang="EN"/&gt;</CODE></P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-is-same-node name=func-is-same-node></A>14.6 op:is-same-node</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:is-same-node</CODE>(<CODE 
class=arg>$parameter1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()</CODE>, <CODE class=arg>$parameter2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: If the node identified by the value of <CODE>$parameter1</CODE> is 
the same node as the node identified by the value of <CODE>$parameter2</CODE> 
(that is, the two nodes have the same identity), then the function returns 
<CODE>true</CODE>; otherwise, the function returns <CODE>false</CODE>. This 
function backs up the "is" operator on nodes.</P>
<DIV class=div3>
<H4><A id=func-is-same-node-examples name=func-is-same-node-examples></A>14.6.1 
Examples</H4>
<UL>
  <LI>
  <P><CODE>op:is-same-node($item1, $item1)</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:is-same-node($item1, $item2)</CODE> returns 
  <CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-node-before name=func-node-before></A>14.7 op:node-before</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:node-before</CODE>(<CODE 
class=arg>$parameter1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()</CODE>, <CODE class=arg>$parameter2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: If the node identified by the value of <CODE>$parameter1</CODE> 
occurs in document order before the node identified by the value of 
<CODE>$parameter2</CODE>, this function returns <CODE>true</CODE>; otherwise, it 
returns <CODE>false</CODE>. The rules determining the order of nodes within a 
single document and in different documents can be found in <A 
href="http://www.w3.org/TR/xpath-datamodel/#document-order">Section 2.4 Document 
Order</A><SUP><SMALL>DM</SMALL></SUP>. This function backs up the "&lt;&lt;" 
operator.</P>
<DIV class=div3>
<H4><A id=func-node-before-examples name=func-node-before-examples></A>14.7.1 
Examples</H4>
<UL>
  <LI>
  <P><CODE>op:node-before($item1, $item2)</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>op:node-before($item1, $item1)</CODE> returns 
  <CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-node-after name=func-node-after></A>14.8 op:node-after</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:node-after</CODE>(<CODE 
class=arg>$parameter1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()</CODE>, <CODE class=arg>$parameter2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: If the node identified by the value of <CODE>$parameter1</CODE> 
occurs in document order after the node identified by the value of 
<CODE>$parameter2</CODE>, this function returns <CODE>true</CODE>; otherwise, it 
returns <CODE>false</CODE>. The rules determining the order of nodes within a 
single document and in different documents can be found in <A 
href="http://www.w3.org/TR/xpath-datamodel/#document-order">Section 2.4 Document 
Order</A><SUP><SMALL>DM</SMALL></SUP>. This function backs up the "&gt;&gt;" 
operator.</P>
<DIV class=div3>
<H4><A id=func-node-after-examples name=func-node-after-examples></A>14.8.1 
Examples</H4>
<UL>
  <LI>
  <P><CODE>op:node-after($item1, $item2)</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>op:node-after($item1, $item1)</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>op:node-after($item2, $item1)</CODE> returns 
  <CODE>true</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-root name=func-root></A>14.9 fn:root</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:root</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>node()</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:root</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>node()?</CODE></DIV></DIV>
<P>Summary: Returns the root of the tree to which <CODE>$arg</CODE> belongs. 
This will usually, but not necessarily, be a document node.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, the empty sequence is 
returned.</P>
<P>If <CODE>$arg</CODE> is a document node, <CODE>$arg</CODE> is returned.</P>
<P>If the function is called without an argument, the context item 
(<CODE>.</CODE>) is used as the default argument. The behavior of the function 
if the argument is omitted is exactly the same as if the context item had been 
passed as the argument.</P>
<P>The following errors may be raised: if the context item is undefined [<A 
title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
if the context item is not a node [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<DIV class=div3>
<H4><A id=func-root-examples name=func-root-examples></A>14.9.1 Examples</H4>
<P>These examples use some variables which could be defined in <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> as:</P>
<DIV class=exampleInner><PRE>let $i := &lt;tool&gt;wrench&lt;/tool&gt;
let $o := &lt;order&gt; {$i} &lt;quantity&gt;5&lt;/quantity&gt; &lt;/order&gt;
let $odoc := document {$o}
let $newi := $o/tool
</PRE></DIV>
<P>Or they could be defined in <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A> as:</P>
<DIV class=exampleInner><PRE>&lt;xsl:variable name="i" as="element()"&gt;
  &lt;tool&gt;wrench&lt;/tool&gt;
&lt;/xsl:variable&gt;

&lt;xsl:variable name="o" as="element()"&gt;
  &lt;order&gt;
    &lt;xsl:copy-of select="$i"/&gt;
    &lt;quantity&gt;5&lt;/quantity&gt;
  &lt;/order&gt;
&lt;/xsl:variable&gt;

&lt;xsl:variable name="odoc"&gt;
  &lt;xsl:copy-of select="$o"/&gt;
&lt;/xsl:variable&gt;

&lt;xsl:variable name="newi" select="$o/tool"/&gt;
</PRE></DIV>
<UL>
  <LI>
  <P><CODE>fn:root($i)</CODE> returns <CODE>$i</CODE></P>
  <LI>
  <P><CODE>fn:root($o/quantity)</CODE> returns <CODE>$o</CODE></P>
  <LI>
  <P><CODE>fn:root($odoc//quantity)</CODE> returns <CODE>$odoc</CODE></P>
  <LI>
  <P><CODE>fn:root($newi)</CODE> returns <CODE>$o</CODE></P></LI></UL>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The final three examples could be made type-safe by wrapping their operands 
with fn:exactly-one().</P></DIV></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=sequence-functions name=sequence-functions></A>15 Functions and 
Operators on Sequences</H2>
<P>A <CODE>sequence</CODE> is an ordered collection of zero or more 
<CODE>items</CODE>. An <CODE>item</CODE> is either a node or an atomic value. 
The terms <CODE>sequence</CODE> and <CODE>item</CODE> are defined formally in <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> and <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>.</P>
<DIV class=div2>
<H3><A id=general-seq-funcs name=general-seq-funcs></A>15.1 General Functions 
and Operators on Sequences</H3>
<P>The following functions are defined on sequences.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-boolean"><CODE>fn:boolean</CODE></A></TD>
    <TD>Computes the effective boolean value of the argument sequence.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-concatenate"><CODE>op:concatenate</CODE></A></TD>
    <TD>Concatenates two sequences.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-index-of"><CODE>fn:index-of</CODE></A></TD>
    <TD>Returns a sequence of <CODE>xs:integer</CODE>s, each of which is the 
      index of a member of the sequence specified as the first argument that is 
      equal to the value of the second argument. If no members of the specified 
      sequence are equal to the value of the second argument, the empty sequence 
      is returned.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-empty"><CODE>fn:empty</CODE></A></TD>
    <TD>Indicates whether or not the provided sequence is empty.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-exists"><CODE>fn:exists</CODE></A></TD>
    <TD>Indicates whether or not the provided sequence is not empty.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-distinct-values"><CODE>fn:distinct-values</CODE></A></TD>
    <TD>Returns a sequence in which all but one of a set of duplicate values, 
      based on value equality, have been deleted. The order in which the 
      distinct values are returned is <A class=termref 
      title="implementation dependent" 
      href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
      class=arrow>·</SPAN>implementation dependent<SPAN 
    class=arrow>·</SPAN></A>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-insert-before"><CODE>fn:insert-before</CODE></A></TD>
    <TD>Inserts an item or sequence of items at a specified position in a 
      sequence.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-remove"><CODE>fn:remove</CODE></A></TD>
    <TD>Removes an item from a specified position in a sequence.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-reverse"><CODE>fn:reverse</CODE></A></TD>
    <TD>Reverses the order of items in a sequence.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-subsequence"><CODE>fn:subsequence</CODE></A></TD>
    <TD>Returns the subsequence of a given sequence, identified by 
  location.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-unordered"><CODE>fn:unordered</CODE></A></TD>
    <TD>Returns the items in the given sequence in a non-deterministic 
    order.</TD></TR></TBODY></TABLE>
<P>As in the previous section, for the illustrative examples below, assume an 
XQuery or transformation operating on a non-empty Purchase Order document 
containing a number of line-item elements. The variable <CODE>$seq</CODE> is 
bound to the sequence of line-item nodes in document order. The variables 
<CODE>$item1</CODE>, <CODE>$item2</CODE>, etc. are bound to separate, individual 
line-item nodes in the sequence.</P>
<DIV class=div3>
<H4><A id=func-boolean name=func-boolean></A>15.1.1 fn:boolean</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:boolean</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: Computes the effective boolean value of the sequence 
<CODE>$arg</CODE>. See <A href="http://www.w3.org/TR/xpath20/#id-ebv">Section 
2.4.3 Effective Boolean Value</A><SUP><SMALL>XP</SMALL></SUP></P>
<UL>
  <LI>
  <P>If <CODE>$arg</CODE> is the empty sequence, <CODE>fn:boolean</CODE> returns 
  <CODE>false</CODE>.</P>
  <LI>
  <P>If <CODE>$arg</CODE> is a sequence whose first item is a node, 
  <CODE>fn:boolean</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P>If <CODE>$arg</CODE> is a singleton value of type <CODE>xs:boolean</CODE> 
  or a derived from <CODE>xs:boolean</CODE>, <CODE>fn:boolean</CODE> returns 
  <CODE>$arg</CODE>.</P>
  <LI>
  <P>If <CODE>$arg</CODE> is a singleton value of type <CODE>xs:string</CODE> or 
  a type derived from <CODE>xs:string</CODE>, <CODE>xs:anyURI</CODE> or a type 
  derived from <CODE>xs:anyURI</CODE> or <CODE>xs:untypedAtomic</CODE>, 
  <CODE>fn:boolean</CODE> returns <CODE>false</CODE> if the operand value has 
  zero length; otherwise it returns <CODE>true</CODE>.</P>
  <LI>
  <P>If <CODE>$arg</CODE> is a singleton value of any numeric type or a type 
  derived from a numeric type, <CODE>fn:boolean</CODE> returns 
  <CODE>false</CODE> if the operand value is <CODE>NaN</CODE> or is numerically 
  equal to zero; otherwise it returns <CODE>true</CODE>.</P>
  <LI>
  <P>In all other cases, <CODE>fn:boolean</CODE> raises a type error [<A 
  title=err:FORG0006 
  href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P></LI></UL>
<P>The static semantics of this function are described in <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_boolean">Section 7.2.4 The 
fn:boolean function</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The result of this function is not necessarily the same as " <CODE>$arg cast 
as xs:boolean</CODE> ". For example, <CODE>fn:boolean("false")</CODE> returns 
the value <CODE>"true"</CODE> whereas "<CODE>false</CODE>" <CODE>cast as 
xs:boolean</CODE> returns <CODE>false</CODE>.</P></DIV>
<DIV class=div4>
<H5><A id=func-boolean-examples name=func-boolean-examples></A>15.1.1.1 
Examples</H5>
<P>let <CODE>$x := ("a", "b", "c")</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:boolean($x)</CODE> raises a type error [<A title=err:FORG0006 
  href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
  <LI>
  <P><CODE>fn:boolean($x[1])</CODE> returns <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:boolean($x[0])</CODE> returns 
<CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-concatenate name=func-concatenate></A>15.1.2 op:concatenate</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:concatenate</CODE>(<CODE 
class=arg>$seq1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>, <CODE class=arg>$seq2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>item()*</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()*</CODE></DIV></DIV>
<P>Summary: Returns a sequence consisting of the items in <CODE>$seq1</CODE> 
followed by the items in <CODE>$seq2</CODE>. This function backs up the infix 
operator ",". If either sequence is the empty sequence, the other operand is 
returned.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_constructing_sequences">Section 
4.3.1 Constructing Sequences</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=div4>
<H5><A id=func-concatenate-examples name=func-concatenate-examples></A>15.1.2.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>op:concatenate((1, 2, 3), (4, 5))</CODE> returns <CODE>(1, 2, 3, 4, 
  5)</CODE>.</P>
  <LI>
  <P><CODE>op:concatenate((1, 2, 3), ())</CODE> returns <CODE>(1, 2, 
  3)</CODE>.</P>
  <LI>
  <P><CODE>op:concatenate((), ())</CODE> returns 
<CODE>()</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-index-of name=func-index-of></A>15.1.3 fn:index-of</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE class=function>fn:index-of</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$seqParam</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$srchParam</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
  class=return-type>xs:integer*</CODE></TD></TR></TBODY></TABLE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE class=function>fn:index-of</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$seqParam</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$srchParam</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:integer*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns a sequence of positive integers giving the positions within 
the sequence <CODE>$seqParam</CODE> of items that are equal to 
<CODE>$srchParam</CODE>.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>. The collation is used when string comparison is 
required.</P>
<P>The items in the sequence <CODE>$seqParam</CODE> are compared with 
<CODE>$srchParam</CODE> under the rules for the <CODE>eq</CODE> operator. Values 
of type <CODE>xs:untypedAtomic</CODE> are compared as if they were of type 
<CODE>xs:string</CODE>. Values that cannot be compared, i.e. the <CODE>eq</CODE> 
operator is not defined for their types, are considered to be distinct. If an 
item compares equal, then the position of that item in the sequence 
<CODE>$seqParam</CODE> is included in the result.</P>
<P>If the value of <CODE>$seqParam</CODE> is the empty sequence, or if no item 
in <CODE>$seqParam</CODE> matches <CODE>$srchParam</CODE>, then the empty 
sequence is returned.</P>
<P>The first item in a sequence is at position 1, not position 0.</P>
<P>The result sequence is in ascending numeric order.</P>
<DIV class=div4>
<H5><A id=func-index-of-examples name=func-index-of-examples></A>15.1.3.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:index-of ((10, 20, 30, 40), 35)</CODE> returns 
<CODE>().</CODE></P>
  <LI>
  <P><CODE>fn:index-of ((10, 20, 30, 30, 20, 10), 20)</CODE> returns <CODE>(2, 
  5).</CODE></P>
  <LI>
  <P><CODE>fn:index-of (("a", "sport", "and", "a", "pastime"), "a")</CODE> 
  returns <CODE>(1, 4).</CODE></P>
  <LI>
  <P>If @a is an attribute of type <CODE>xs:NMTOKENS</CODE> whose typed value is 
  " <CODE>red green blue</CODE> ", then: <CODE>fn:index-of (@a, "blue")</CODE> 
  returns <CODE>3</CODE>.</P>
  <P>This is because the function calling mechanism atomizes the attribute node 
  to produce a sequence of three 
<CODE>xs:NMTOKEN</CODE>s.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-empty name=func-empty></A>15.1.4 fn:empty</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:empty</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: If the value of <CODE>$arg</CODE> is the empty sequence, the 
function returns <CODE>true</CODE>; otherwise, the function returns 
<CODE>false</CODE>.</P>
<DIV class=div4>
<H5><A id=func-empty-examples name=func-empty-examples></A>15.1.4.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:empty(fn:remove(("hello", "world"), 1))</CODE> returns 
  <CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-exists name=func-exists></A>15.1.5 fn:exists</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:exists</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: If the value of <CODE>$arg</CODE> is not the empty sequence, the 
function returns <CODE>true</CODE>; otherwise, the function returns 
<CODE>false</CODE>.</P>
<DIV class=div4>
<H5><A id=func-exists-examples name=func-exists-examples></A>15.1.5.1 
Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:exists(fn:remove(("hello"), 1))</CODE> returns 
  <CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-distinct-values name=func-distinct-values></A>15.1.6 
fn:distinct-values</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:distinct-values</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType*</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>fn:distinct-values</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>xs:anyAtomicType*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the sequence that results from removing from 
<CODE>$arg</CODE> all but one of a set of values that are <CODE>eq</CODE> to one 
other. Values of type <CODE>xs:untypedAtomic</CODE> are compared as if they were 
of type <CODE>xs:string</CODE>. Values that cannot be compared, i.e. the 
<CODE>eq</CODE> operator is not defined for their types, are considered to be 
distinct. The order in which the sequence of values is returned is <A 
class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<P>The static type of the result is a sequence of prime types as defined in <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_distinct_node_vals">Section 
7.2.7 The fn:distinct-values function</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>. The collation is used when string comparison is 
required.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, the empty sequence is 
returned.</P>
<P>For <CODE>xs:float</CODE> and <CODE>xs:double</CODE> values, positive zero is 
equal to negative zero and, although <CODE>NaN</CODE> does not equal itself, if 
<CODE>$arg</CODE> contains multiple <CODE>NaN</CODE> values a single 
<CODE>NaN</CODE> is returned.</P>
<P>If <CODE>xs:dateTime</CODE>, <CODE>xs:date</CODE> or <CODE>xs:time</CODE> 
values do not have a timezone, they are considered to have the implicit timezone 
provided by the dynamic context for the purpose of comparison. Note that 
<CODE>xs:dateTime</CODE>, <CODE>xs:date</CODE> or <CODE>xs:time</CODE> values 
can compare equal even if their timezones are different.</P>
<P>Which value of a set of values that compare equal is returned is <A 
class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<DIV class=div4>
<H5><A id=func-distinct-values-examples 
name=func-distinct-values-examples></A>15.1.6.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:distinct-values((1, 2.0, 3, 2))</CODE> might return <CODE>(1, 3, 
  2.0)</CODE>.</P>
  <LI>
  <P>The following query:</P>
  <DIV class=exampleInner><PRE>let $x as xs:untypedAtomic*
    := (xs:untypedAtomic("cherry"),
        xs:untypedAtomic("bar"),
        xs:untypedAtomic("bar"))
return fn:distinct-values ($x)
                                    
</PRE></DIV>returns a sequence containing two items of type 
  <CODE>xs:untypedAtomic</CODE>. </LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-insert-before name=func-insert-before></A>15.1.7 
fn:insert-before</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE 
    class=function>fn:insert-before</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$target</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$position</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:integer</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$inserts</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>item()*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns a new sequence constructed from the value of 
<CODE>$target</CODE> with the value of <CODE>$inserts</CODE> inserted at the 
position specified by the value of <CODE>$position</CODE>. (The value of 
<CODE>$target</CODE> is not affected by the sequence construction.)</P>
<P>If <CODE>$target</CODE> is the empty sequence, <CODE>$inserts</CODE> is 
returned. If <CODE>$inserts</CODE> is the empty sequence, <CODE>$target</CODE> 
is returned.</P>
<P>The value returned by the function consists of all items of 
<CODE>$target</CODE> whose index is less than <CODE>$position</CODE>, followed 
by all items of <CODE>$inserts</CODE>, followed by the remaining elements of 
<CODE>$target</CODE>, in that sequence.</P>
<P>If <CODE>$position</CODE> is less than one (1), the first position, the 
effective value of <CODE>$position</CODE> is one (1). If <CODE>$position</CODE> 
is greater than the number of items in <CODE>$target</CODE>, then the effective 
value of <CODE>$position</CODE> is equal to the number of items in 
<CODE>$target</CODE> plus 1.</P>
<P>For detailed semantics see, <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_insert_before">Section 
7.2.15 The fn:insert-before function</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=div4>
<H5><A id=func-insert-before-examples 
name=func-insert-before-examples></A>15.1.7.1 Examples</H5>
<P>let <CODE>$x</CODE> := <CODE>("a", "b", "c")</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:insert-before($x, 0, "z")</CODE> returns <CODE>("z", "a", "b", 
  "c")</CODE></P>
  <LI>
  <P><CODE>fn:insert-before($x, 1, "z")</CODE> returns <CODE>("z", "a", "b", 
  "c")</CODE></P>
  <LI>
  <P><CODE>fn:insert-before($x, 2, "z")</CODE> returns <CODE>("a", "z", "b", 
  "c")</CODE></P>
  <LI>
  <P><CODE>fn:insert-before($x, 3, "z")</CODE> returns <CODE>("a", "b", "z", 
  "c")</CODE></P>
  <LI>
  <P><CODE>fn:insert-before($x, 4, "z")</CODE> returns <CODE>("a", "b", "c", 
  "z")</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-remove name=func-remove></A>15.1.8 fn:remove</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:remove</CODE>(<CODE 
class=arg>$target</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>, <CODE class=arg>$position</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:integer</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()*</CODE></DIV></DIV>
<P>Summary: Returns a new sequence constructed from the value of 
<CODE>$target</CODE> with the item at the position specified by the value of 
<CODE>$position</CODE> removed.</P>
<P>If <CODE>$position</CODE> is less than 1 or greater than the number of items 
in <CODE>$target</CODE>, <CODE>$target</CODE> is returned. Otherwise, the value 
returned by the function consists of all items of <CODE>$target</CODE> whose 
index is less than <CODE>$position</CODE>, followed by all items of 
<CODE>$target</CODE> whose index is greater than <CODE>$position</CODE>. If 
<CODE>$target</CODE> is the empty sequence, the empty sequence is returned.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_remove">Section 7.2.11 The 
fn:remove function</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=div4>
<H5><A id=func-remove-examples name=func-remove-examples></A>15.1.8.1 
Examples</H5>
<P>let <CODE>$x</CODE> := <CODE>("a", "b", "c")</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:remove($x, 0)</CODE> returns <CODE>("a", "b", "c")</CODE></P>
  <LI>
  <P><CODE>fn:remove($x, 1)</CODE> returns <CODE>("b", "c")</CODE></P>
  <LI>
  <P><CODE>fn:remove($x, 6)</CODE> returns <CODE>("a", "b", "c")</CODE></P>
  <LI>
  <P><CODE>fn:remove((), 3)</CODE> returns 
<CODE>()</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-reverse name=func-reverse></A>15.1.9 fn:reverse</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:reverse</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()*</CODE></DIV></DIV>
<P>Summary: Reverses the order of items in a sequence. If <CODE>$arg</CODE> is 
the empty sequence, the empty sequence is returned.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_reverse">Section 7.2.12 The 
fn:reverse function</A><SUP><SMALL>FS</SMALL></SUP></P>
<DIV class=div4>
<H5><A id=func-reverse-examples name=func-reverse-examples></A>15.1.9.1 
Examples</H5>
<P>let <CODE>$x</CODE> := <CODE>("a", "b", "c")</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:reverse($x)</CODE> returns <CODE>("c", "b", "a")</CODE></P>
  <LI>
  <P><CODE>fn:reverse(("hello"))</CODE> returns <CODE>("hello")</CODE></P>
  <LI>
  <P><CODE>fn:reverse(())</CODE> returns <CODE>()</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-subsequence name=func-subsequence></A>15.1.10 fn:subsequence</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:subsequence</CODE>(<CODE 
class=arg>$sourceSeq</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>, <CODE class=arg>$startingLoc</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:double</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-varies>item()*</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE 
    class=function>fn:subsequence</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$sourceSeq</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$startingLoc</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$length</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:double</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>item()*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns the contiguous sequence of items in the value of 
<CODE>$sourceSeq</CODE> beginning at the position indicated by the value of 
<CODE>$startingLoc</CODE> and continuing for the number of items indicated by 
the value of <CODE>$length</CODE>.</P>
<P>In the two-argument case, returns:</P>
<DIV class=exampleInner><PRE>$sourceSeq[fn:round($startingLoc) le $p]
</PRE></DIV>
<P>In the three-argument case, returns:</P>
<DIV class=exampleInner><PRE>$sourceSeq[fn:round($startingLoc) le $p 
     and $p lt fn:round($startingLoc) + fn:round($length)]
</PRE></DIV>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>If <CODE>$sourceSeq</CODE> is the empty sequence, the empty sequence is 
returned.</P>
<P>If <CODE>$startingLoc</CODE> is zero or negative, the subsequence includes 
items from the beginning of the <CODE>$sourceSeq</CODE>.</P>
<P>If <CODE>$length</CODE> is not specified, the subsequence includes items to 
the end of <CODE>$sourceSeq</CODE>.</P>
<P>If <CODE>$length</CODE> is greater than the number of items in the value of 
<CODE>$sourceSeq</CODE> following <CODE>$startingLoc</CODE>, the subsequence 
includes items to the end of <CODE>$sourceSeq</CODE>.</P>
<P>The first item of a sequence is located at position 1, not position 0.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_subsequence">Section 7.2.13 
The fn:subsequence function</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<P>The reason the function accepts arguments of type <CODE>xs:double</CODE> is 
that many computations on untyped data return an <CODE>xs:double</CODE> result; 
and the reason for the rounding rules is to compensate for any imprecision in 
these floating-point computations.</P></DIV>
<DIV class=div4>
<H5><A id=func-subsequence-examples name=func-subsequence-examples></A>15.1.10.1 
Examples</H5>
<P>Assume <CODE>$seq = ($item1, $item2, $item3, $item4, ...)</CODE></P>
<UL>
  <LI>
  <P><CODE>fn:subsequence($seq, 4)</CODE> returns <CODE>($item4, ...)</CODE></P>
  <LI>
  <P><CODE>fn:subsequence($seq, 3, 2)</CODE> returns <CODE>($item3, 
  $item4)</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-unordered name=func-unordered></A>15.1.11 fn:unordered</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:unordered</CODE>(<CODE 
class=arg>$sourceSeq</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()*</CODE></DIV></DIV>
<P>Summary: Returns the items of <CODE>$sourceSeq</CODE> in an <A class=termref 
title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A> 
order.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>Query optimizers may be able to do a better job if the order of the output 
sequence is not specified. For example, when retrieving prices from a purchase 
order, if an index exists on prices, it may be more efficient to return the 
prices in index order rather than in document order.</P></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=cardinality-functions name=cardinality-functions></A>15.2 Functions 
That Test the Cardinality of Sequences</H3>
<P>The following functions test the cardinality of their sequence arguments.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-zero-or-one"><CODE>fn:zero-or-one</CODE></A></TD>
    <TD>Returns the input sequence if it contains zero or one items. Raises an 
      error otherwise.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-one-or-more"><CODE>fn:one-or-more</CODE></A></TD>
    <TD>Returns the input sequence if it contains one or more items. Raises an 
      error otherwise.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-exactly-one"><CODE>fn:exactly-one</CODE></A></TD>
    <TD>Returns the input sequence if it contains exactly one item. Raises an 
      error otherwise.</TD></TR></TBODY></TABLE>
<P>The functions <A 
href="REC-xpath-functions-20070123.htm#func-zero-or-one"><CODE>fn:zero-or-one</CODE></A>, 
<A 
href="REC-xpath-functions-20070123.htm#func-one-or-more"><CODE>fn:one-or-more</CODE></A>, 
and <A 
href="REC-xpath-functions-20070123.htm#func-exactly-one"><CODE>fn:exactly-one</CODE></A> 
defined in this section, check that the cardinality of a sequence is in the 
expected range. They are particularly useful with regard to static typing. For 
example, the XML Schema <A 
href="REC-xpath-functions-20070123.htm#xmlschema-1">[XML 
Schema Part 1: Structures Second Edition]</A> describing the output of a query 
may require a sequence of length one-or-more in some position, but the static 
type system may not be able to infer this; inserting a call to <A 
href="REC-xpath-functions-20070123.htm#func-one-or-more"><CODE>fn:one-or-more</CODE></A> 
at the appropriate place will provide a suitable static type at query analysis 
time, and confirm that the length is correct with a dynamic check at query 
execution time.</P>
<DIV class=div3>
<H4><A id=func-zero-or-one name=func-zero-or-one></A>15.2.1 fn:zero-or-one</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:zero-or-one</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()?</CODE></DIV></DIV>
<P>Summary: Returns <CODE>$arg</CODE> if it contains zero or one items. 
Otherwise, raises an error [<A title=err:FORG0003 
href="REC-xpath-functions-20070123.htm#ERRFORG0003">err:FORG0003</A>].</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_cardinality_funcs">Section 
7.2.16 The fn:zero-or-one, fn:one-or-more, and fn:exactly-one 
functions</A><SUP><SMALL>FS</SMALL></SUP></P></DIV>
<DIV class=div3>
<H4><A id=func-one-or-more name=func-one-or-more></A>15.2.2 fn:one-or-more</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:one-or-more</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()+</CODE></DIV></DIV>
<P>Summary: Returns <CODE>$arg</CODE> if it contains one or more items. 
Otherwise, raises an error [<A title=err:FORG0004 
href="REC-xpath-functions-20070123.htm#ERRFORG0004">err:FORG0004</A>].</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_cardinality_funcs">Section 
7.2.16 The fn:zero-or-one, fn:one-or-more, and fn:exactly-one 
functions</A><SUP><SMALL>FS</SMALL></SUP></P></DIV>
<DIV class=div3>
<H4><A id=func-exactly-one name=func-exactly-one></A>15.2.3 fn:exactly-one</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:exactly-one</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>item()</CODE></DIV></DIV>
<P>Summary: Returns <CODE>$arg</CODE> if it contains exactly one item. 
Otherwise, raises an error [<A title=err:FORG0005 
href="REC-xpath-functions-20070123.htm#ERRFORG0005">err:FORG0005</A>].</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_cardinality_funcs">Section 
7.2.16 The fn:zero-or-one, fn:one-or-more, and fn:exactly-one 
functions</A><SUP><SMALL>FS</SMALL></SUP></P></DIV></DIV>
<DIV class=div2>
<H3><A id=union-intersection-except name=union-intersection-except></A>15.3 
Equals, Union, Intersection and Except</H3>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-deep-equal"><CODE>fn:deep-equal</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if the two arguments have items that compare 
      equal in corresponding positions.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-union"><CODE>op:union</CODE></A></TD>
    <TD>Returns the union of the two sequence arguments, eliminating 
      duplicates.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-intersect"><CODE>op:intersect</CODE></A></TD>
    <TD>Returns the intersection of the two sequence arguments, eliminating 
      duplicates.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-except"><CODE>op:except</CODE></A></TD>
    <TD>Returns the difference of the two sequence arguments, eliminating 
      duplicates.</TD></TR></TBODY></TABLE>
<P>As in the previous sections, for the illustrative examples below, assume an 
XQuery or transformation operating on a Purchase Order document containing a 
number of line-item elements. The variables <CODE>$item1</CODE>, 
<CODE>$item2</CODE>, etc. are bound to individual line-item nodes in the 
sequence. We use sequences of these nodes in some of the examples below.</P>
<DIV class=div3>
<H4><A id=func-deep-equal name=func-deep-equal></A>15.3.1 fn:deep-equal</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:deep-equal</CODE>(<CODE 
class=arg>$parameter1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>, <CODE class=arg>$parameter2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>item()*</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:boolean</CODE></DIV>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=3><CODE 
class=function>fn:deep-equal</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$parameter1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$parameter2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: This function assesses whether two sequences are deep-equal to each 
other. To be deep-equal, they must contain items that are pairwise deep-equal; 
and for two items to be deep-equal, they must either be atomic values that 
compare equal, or nodes of the same kind, with the same name, whose children are 
deep-equal. This is defined in more detail below. The <CODE>$collation</CODE> 
argument identifies a collation which is used at all levels of recursion when 
strings are compared (but not when names are compared), according to the rules 
in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>.</P>
<P>If the two sequences are both empty, the function returns 
<CODE>true</CODE>.</P>
<P>If the two sequences are of different lengths, the function returns 
<CODE>false</CODE>.</P>
<P>If the two sequences are of the same length, the function returns 
<CODE>true</CODE> if and only if every item in the sequence 
<CODE>$parameter1</CODE> is deep-equal to the item at the same position in the 
sequence <CODE>$parameter2</CODE>. The rules for deciding whether two items are 
deep-equal follow.</P>
<P>Call the two items <CODE>$i1</CODE> and <CODE>$i2</CODE> respectively.</P>
<P>If <CODE>$i1</CODE> and <CODE>$i2</CODE> are both atomic values, they are 
deep-equal if and only if <CODE>($i1 eq $i2)</CODE> is <CODE>true</CODE>, or if 
both values are <CODE>NaN</CODE>. If the <CODE>eq</CODE> operator is not defined 
for <CODE>$i1</CODE> and <CODE>$i2</CODE>, the function returns 
<CODE>false</CODE>.</P>
<P>If one of the pair <CODE>$i1</CODE> or <CODE>$i2</CODE> is an atomic value 
and the other is a node, the function returns <CODE>false</CODE>.</P>
<P>If <CODE>$i1</CODE> and <CODE>$i2</CODE> are both nodes, they are compared as 
described below:</P>
<P>If the two nodes are of different kinds, the result is 
<CODE>false</CODE>.</P>
<P>If the two nodes are both document nodes then they are deep-equal if and only 
if the sequence <CODE>$i1/(*|text())</CODE> is deep-equal to the sequence 
<CODE>$i2/(*|text())</CODE>.</P>
<P>If the two nodes are both element nodes then they are deep-equal if and only 
if all of the following conditions are satisfied:</P>
<OL class=enumar>
  <LI>
  <P>the two nodes have the same name, that is <CODE>(node-name($i1) eq 
  node-name($i2))</CODE>.</P>
  <LI>
  <P>the two nodes are both annotated as having simple content or both nodes are 
  annotated as having complex content.</P>
  <LI>
  <P>the two nodes have the same number of attributes, and for every attribute 
  <CODE>$a1</CODE> in <CODE>$i1/@*</CODE> there exists an attribute 
  <CODE>$a2</CODE> in <CODE>$i2/@*</CODE> such that <CODE>$a1</CODE> and 
  <CODE>$a2</CODE> are deep-equal.</P>
  <LI>
  <P>One of the following conditions holds:</P>
  <UL>
    <LI>
    <P>Both element nodes have a type annotation that is simple content, and the 
    typed value of <CODE>$i1</CODE> is deep-equal to the typed value of 
    <CODE>$i2</CODE>.</P>
    <LI>
    <P>Both element nodes have a type annotation that is complex content with 
    elementOnly content, and each child element of <CODE>$i1</CODE> is 
    deep-equal to the corresponding child element of <CODE>$i2</CODE>.</P>
    <LI>
    <P>Both element nodes have a type annotation that is complex content with 
    mixed content, and the sequence <CODE>$i1/(*|text())</CODE> is deep-equal to 
    the sequence <CODE>$i2/(*|text())</CODE>.</P>
    <LI>
    <P>Both element nodes have a type annotation that is complex content with 
    empty content.</P></LI></UL></LI></OL>
<P>If the two nodes are both attribute nodes then they are deep-equal if and 
only if both the following conditions are satisfied:</P>
<OL class=enumar>
  <LI>
  <P>the two nodes have the same name, that is <CODE>(node-name($i1) eq 
  node-name($i2))</CODE>.</P>
  <LI>
  <P>the typed value of <CODE>$i1</CODE> is deep-equal to the typed value of 
  <CODE>$i2</CODE>.</P></LI></OL>
<P>If the two nodes are both processing instruction nodes or namespace bindings, 
then they are deep-equal if and only if both the following conditions are 
satisfied:</P>
<OL class=enumar>
  <LI>
  <P>the two nodes have the same name, that is <CODE>(node-name($i1) eq 
  node-name($i2))</CODE>.</P>
  <LI>
  <P>the string value of <CODE>$i1</CODE> is equal to the string value of 
  <CODE>$i2</CODE>.</P></LI></OL>
<P>If the two nodes are both text nodes or comment nodes, then they are 
deep-equal if and only if their string-values are equal.</P>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>The two nodes are not required to have the same type annotation, and they are 
not required to have the same in-scope namespaces. They may also differ in their 
parent, their base URI, and the values returned by the <CODE>is-id</CODE> and 
<CODE>is-idrefs</CODE> accessors (see <A 
href="http://www.w3.org/TR/xpath-datamodel/#dm-is-id">Section 5.5 is-id 
Accessor</A><SUP><SMALL>DM</SMALL></SUP> and <A 
href="http://www.w3.org/TR/xpath-datamodel/#dm-is-idrefs">Section 5.6 is-idrefs 
Accessor</A><SUP><SMALL>DM</SMALL></SUP>). The order of children is significant, 
but the order of attributes is insignificant.</P>
<P>The contents of comments and processing instructions are significant only if 
these nodes appear directly as items in the two sequences being compared. The 
content of a comment or processing instruction that appears as a descendant of 
an item in one of the sequences being compared does not affect the result. 
However, the presence of a comment or processing instruction, if it causes a 
text node to be split into two text nodes, may affect the result.</P>
<P>The result of <CODE>fn:deep-equal(1, current-dateTime())</CODE> is 
<CODE>false</CODE>; it does not raise an error.</P></DIV>
<DIV class=div4>
<H5><A id=func-deep-equal-examples name=func-deep-equal-examples></A>15.3.1.1 
Examples</H5>
<DIV class=exampleInner><PRE>let $at := &lt;attendees&gt; &lt;name last='Parker'
                                first='Peter'/&gt; &lt;name last='Barker' first='Bob'/&gt;
                                &lt;name last='Parker' first='Peter'/&gt; &lt;/attendees&gt;
</PRE></DIV>
<UL>
  <LI>
  <P><CODE>fn:deep-equal($at, $at/*)</CODE> returns <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>fn:deep-equal($at/name[1], $at/name[2])</CODE> returns 
  <CODE>false</CODE>.</P>
  <LI>
  <P><CODE>fn:deep-equal($at/name[1], $at/name[3])</CODE> returns 
  <CODE>true</CODE>.</P>
  <LI>
  <P><CODE>fn:deep-equal($at/name[1], 'Peter Parker')</CODE> returns 
  <CODE>false</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-union name=func-union></A>15.3.2 op:union</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:union</CODE>(<CODE 
class=arg>$parameter1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()*</CODE>, <CODE class=arg>$parameter2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()*</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>node()*</CODE></DIV></DIV>
<P>Summary: Constructs a sequence containing every node that occurs in the 
values of either <CODE>$parameter1</CODE> or <CODE>$parameter2</CODE>, 
eliminating duplicate nodes. Nodes are returned in document order. Two nodes are 
duplicates if they are <A 
href="REC-xpath-functions-20070123.htm#func-is-same-node"><CODE>op:is-same-node()</CODE></A>.</P>
<P>If either operand is the empty sequence, a sequence is returned containing 
the nodes in the other operand in document order after eliminating 
duplicates.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_op_union_intersect_except">Section 
7.2.14 The op:union, op:intersect, and op:except 
operators</A><SUP><SMALL>FS</SMALL></SUP></P>
<P>This function backs up the "union" or "|" operator.</P>
<DIV class=div4>
<H5><A id=func-union-examples name=func-union-examples></A>15.3.2.1 
Examples</H5>
<P>Assume <CODE>$seq1 = ($item1, $item2), $seq2 = ($item1, $item2)</CODE> and 
<CODE>$seq3 = ($item2, $item3)</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:union($seq1, $seq1)</CODE> returns the sequence <CODE>($item1, 
  $item2)</CODE>.</P>
  <LI>
  <P><CODE>op:union($seq2, $seq3)</CODE> returns the sequence consisting of 
  <CODE>($item1, $item2, $item3)</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-intersect name=func-intersect></A>15.3.3 op:intersect</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:intersect</CODE>(<CODE 
class=arg>$parameter1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()*</CODE>, <CODE class=arg>$parameter2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()*</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>node()*</CODE></DIV></DIV>
<P>Summary: Constructs a sequence containing every node that occurs in the 
values of both <CODE>$parameter1</CODE> and <CODE>$parameter2</CODE>, 
eliminating duplicate nodes. Nodes are returned in document order.</P>
<P>If either operand is the empty sequence, the empty sequence is returned.</P>
<P>Two nodes are duplicates if they are <A 
href="REC-xpath-functions-20070123.htm#func-is-same-node"><CODE>op:is-same-node()</CODE></A>.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_op_union_intersect_except">Section 
7.2.14 The op:union, op:intersect, and op:except 
operators</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<P>This function backs up the "intersect" operator.</P>
<DIV class=div4>
<H5><A id=func-intersect-examples name=func-intersect-examples></A>15.3.3.1 
Examples</H5>
<P>Assume <CODE>$seq1 = ($item1, $item2), $seq2 = ($item1, $item2)</CODE> and 
<CODE>$seq3 = ($item2, $item3)</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:intersect($seq1, $seq1)</CODE> returns the sequence <CODE>($item1, 
  $item2)</CODE>.</P>
  <LI>
  <P><CODE>op:intersect($seq2, $seq3)</CODE> returns the sequence 
  <CODE>($item2)</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-except name=func-except></A>15.3.4 op:except</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:except</CODE>(<CODE 
class=arg>$parameter1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()*</CODE>, <CODE class=arg>$parameter2</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()*</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>node()*</CODE></DIV></DIV>
<P>Summary: Constructs a sequence containing every node that occurs in the value 
of <CODE>$parameter1</CODE>, but not in the value of <CODE>$parameter2</CODE>, 
eliminating duplicate nodes. Nodes are returned in document order.</P>
<P>If <CODE>$parameter1</CODE> is the empty sequence, the empty sequence is 
returned. If <CODE>$parameter2</CODE> is the empty sequence, a sequence is 
returned containing the nodes in <CODE>$parameter1</CODE> in document order 
after eliminating duplicates.</P>
<P>Two nodes are duplicates if they are <A 
href="REC-xpath-functions-20070123.htm#func-is-same-node"><CODE>op:is-same-node()</CODE></A>.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_op_union_intersect_except">Section 
7.2.14 The op:union, op:intersect, and op:except 
operators</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<P>This function backs up the "except" operator.</P>
<DIV class=div4>
<H5><A id=func-except-examples name=func-except-examples></A>15.3.4.1 
Examples</H5>
<P>Assume <CODE>$seq1 = ($item1, $item2), $seq2 = ($item1, $item2)</CODE> and 
<CODE>$seq3 = ($item2, $item3)</CODE>.</P>
<UL>
  <LI>
  <P><CODE>op:except($seq1, $seq2)</CODE> returns the empty sequence.</P>
  <LI>
  <P><CODE>op:except($seq2, $seq3)</CODE> returns the sequence 
  <CODE>($item1)</CODE>.</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=aggregate-functions name=aggregate-functions></A>15.4 Aggregate 
Functions</H3>
<P>Aggregate functions take a sequence as argument and return a single value 
computed from values in the sequence. Except for <A 
href="REC-xpath-functions-20070123.htm#func-count"><CODE>fn:count</CODE></A>, 
the sequence must consist of values of a single type or one if its subtypes, or 
they must be numeric. <CODE>xs:untypedAtomic</CODE> values are permitted in the 
input sequence and handled by special conversion rules. The type of the items in 
the sequence must also support certain operations.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-count"><CODE>fn:count</CODE></A></TD>
    <TD>Returns the number of items in a sequence.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-avg"><CODE>fn:avg</CODE></A></TD>
    <TD>Returns the average of a sequence of values.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-max"><CODE>fn:max</CODE></A></TD>
    <TD>Returns the maximum value from a sequence of comparable values.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-min"><CODE>fn:min</CODE></A></TD>
    <TD>Returns the minimum value from a sequence of comparable values.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-sum"><CODE>fn:sum</CODE></A></TD>
    <TD>Returns the sum of a sequence of values.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-count name=func-count></A>15.4.1 fn:count</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:count</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer</CODE></DIV></DIV>
<P>Summary: Returns the number of items in the value of <CODE>$arg</CODE>.</P>
<P>Returns 0 if <CODE>$arg</CODE> is the empty sequence.</P>
<DIV class=div4>
<H5><A id=func-count-examples name=func-count-examples></A>15.4.1.1 
Examples</H5>
<P>Assume <CODE>$seq1 = ($item1, $item2)</CODE> and <CODE>$seq3 = ()</CODE>, the 
empty sequence.</P>
<UL>
  <LI>
  <P><CODE>fn:count($seq1)</CODE> returns <CODE>2</CODE>.</P>
  <LI>
  <P><CODE>fn:count($seq3)</CODE> returns <CODE>0</CODE>.</P></LI></UL>
<P>Assume <CODE>$seq2 = (98.5, 98.3, 98.9)</CODE>.</P>
<UL>
  <LI>
  <P><CODE>fn:count($seq2)</CODE> returns <CODE>3</CODE>.</P>
  <LI>
  <P><CODE>fn:count($seq2[. &gt; 100])</CODE> returns 
<CODE>0</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-avg name=func-avg></A>15.4.2 fn:avg</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:avg</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType?</CODE></DIV></DIV>
<P>Summary: Returns the average of the values in the input sequence 
<CODE>$arg</CODE>, that is, the sum of the values divided by the number of 
values.</P>
<P>If <CODE>$arg</CODE> is the empty sequence, the empty sequence is 
returned.</P>
<P>If <CODE>$arg</CODE> contains values of type <CODE>xs:untypedAtomic</CODE> 
they are cast to <CODE>xs:double</CODE>.</P>
<P>Duration values must either all be <CODE>xs:yearMonthDuration</CODE> values 
or must all be <CODE>xs:dayTimeDuration</CODE> values. For numeric values, the 
numeric promotion rules defined in <A 
href="REC-xpath-functions-20070123.htm#op.numeric"><B>6.2 
Operators on Numeric Values</B></A> are used to promote all values to a single 
common type. After these operations, <CODE>$arg</CODE> must contain items of a 
single type, which must be one of the four numeric types, 
<CODE>xs:yearMonthDuration</CODE> or <CODE>xs:dayTimeDuration</CODE> or one if 
its subtypes.</P>
<P>If the above conditions are not met, then a type error is raised [<A 
title=err:FORG0006 
href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
<P>Otherwise, returns the average of the values as <CODE>sum($arg) div 
count($arg)</CODE>; but the implementation may use an otherwise equivalent 
algorithm that avoids arithmetic overflow.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_aggregates">Section 7.2.10 
The fn:min, fn:max, fn:avg, and fn:sum 
functions</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=div4>
<H5><A id=func-avg-examples name=func-avg-examples></A>15.4.2.1 Examples</H5>
<P>Assume <CODE>$d1 = xs:yearMonthDuration("P20Y")</CODE> and <CODE>$d2 = 
xs:yearMonthDuration("P10M")</CODE> and <CODE>$seq3 = (3, 4, 5)</CODE>.</P>
<UL>
  <LI>
  <P><CODE>fn:avg($seq3)</CODE> returns <CODE>4.0</CODE>.</P>
  <LI>
  <P><CODE>fn:avg(($d1, $d2))</CODE> returns a <CODE>yearMonthDuration</CODE> 
  with value <CODE>125</CODE> months.</P>
  <LI>
  <P><CODE>fn:avg(($d1, $seq3))</CODE> raises a type error [<A 
  title=err:FORG0006 
  href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
  <LI>
  <P><CODE>fn:avg(())</CODE> returns <CODE>()</CODE>.</P>
  <LI>
  <P><CODE>fn:avg((xs:float('INF'), xs:float('-INF')))</CODE> returns 
  <CODE>NaN</CODE>.</P>
  <LI>
  <P><CODE>fn:avg(($seq3, xs:float('NaN')))</CODE> returns 
  <CODE>NaN</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-max name=func-max></A>15.4.3 fn:max</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:max</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType?</CODE></DIV>
<DIV class=proto><CODE class=function>fn:max</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType*</CODE>, <CODE class=arg>$collation</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType?</CODE></DIV></DIV>
<P>Summary: Selects an item from the input sequence <CODE>$arg</CODE> whose 
value is greater than or equal to the value of every other item in the input 
sequence. If there are two or more such items, then the specific item whose 
value is returned is <A class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<P>The following rules are applied to the input sequence:</P>
<UL>
  <LI>
  <P>Values of type <CODE>xs:untypedAtomic</CODE> in <CODE>$arg</CODE> are cast 
  to <CODE>xs:double</CODE>.</P>
  <LI>
  <P>Numeric and <CODE>xs:anyURI</CODE> values are converted to the least common 
  type that supports the <CODE>ge</CODE> operator by a combination of type 
  promotion and subtype substitution. See <A 
  href="http://www.w3.org/TR/xpath20/#promotion">Section B.1 Type 
  Promotion</A><SUP><SMALL>XP</SMALL></SUP> and <A 
  href="http://www.w3.org/TR/xpath20/#mapping">Section B.2 Operator 
  Mapping</A><SUP><SMALL>XP</SMALL></SUP>.</P></LI></UL>
<P>The items in the resulting sequence may be reordered in an arbitrary order. 
The resulting sequence is referred to below as the converted sequence. This 
function returns an item from the converted sequence rather than the input 
sequence.</P>
<P>If the converted sequence is empty, the empty sequence is returned.</P>
<P>All items in <CODE>$arg</CODE> must be numeric or derived from a single base 
type for which the <CODE>ge</CODE> operator is defined. In addition, the values 
in the sequence must have a total order. If date/time values do not have a 
timezone, they are considered to have the implicit timezone provided by the 
dynamic context for purposes of comparison. Duration values must either all be 
<CODE>xs:yearMonthDuration</CODE> values or must all be 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<P>If any of these conditions is not met, then a type error is raised [<A 
title=err:FORG0006 
href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
<P>If the converted sequence contains the value <CODE>NaN</CODE>, the value 
<CODE>NaN</CODE> is returned.</P>
<P>If the items in the value of <CODE>$arg</CODE> are of type 
<CODE>xs:string</CODE> or types derived by restriction from 
<CODE>xs:string</CODE>, then the determination of the item with the largest 
value is made according to the collation that is used. If the type of the items 
in <CODE>$arg</CODE> is not <CODE>xs:string</CODE> and <CODE>$collation</CODE> 
is specified, the collation is ignored.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>.</P>
<P>Otherwise, the result of the function is the result of the expression:</P>
<DIV class=exampleInner><PRE>   if (every $v in $c satisfies $c[1] ge $v)
   then $c[1] 
   else fn:max(fn:subsequence($c, 2))
</PRE></DIV>
<P>evaluated with <CODE>$collation</CODE> as the default collation if specified, 
and with <CODE>$c</CODE> as the converted sequence.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_aggregates">Section 7.2.10 
The fn:min, fn:max, fn:avg, and fn:sum 
functions</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>If the converted sequence contains exactly one value then that value is 
returned.</P>
<P>The default type when the <CODE>fn:max</CODE> function is applied to 
<CODE>xs:untypedAtomic</CODE> values is <CODE>xs:double</CODE>. This differs 
from the default type for operators such as <CODE>gt</CODE>, and for sorting in 
XQuery and XSLT, which is <CODE>xs:string</CODE>.</P></DIV>
<DIV class=div4>
<H5><A id=func-max-examples name=func-max-examples></A>15.4.3.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:max((3,4,5))</CODE> returns <CODE>5</CODE>.</P>
  <LI>
  <P><CODE>fn:max((5, 5.0e0))</CODE> returns <CODE>5.0e0</CODE>.</P>
  <LI>
  <P><CODE>fn:max((3,4,"Zero"))</CODE> raises a type error [<A 
  title=err:FORG0006 
  href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
  <LI>
  <P><CODE>fn:max((fn:current-date(), xs:date("2001-01-01")))</CODE> typically 
  returns the current date.</P>
  <LI>
  <P><CODE>fn:max(("a", "b", "c"))</CODE> returns "c" under a typical default 
  collation.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-min name=func-min></A>15.4.4 fn:min</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:min</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType?</CODE></DIV>
<DIV class=proto><CODE class=function>fn:min</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType*</CODE>, <CODE class=arg>$collation</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>string</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType?</CODE></DIV></DIV>
<P>Summary: selects an item from the input sequence <CODE>$arg</CODE> whose 
value is less than or equal to the value of every other item in the input 
sequence. If there are two or more such items, then the specific item whose 
value is returned is <A class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<P>The following rules are applied to the input sequence:</P>
<UL>
  <LI>
  <P>Values of type <CODE>xs:untypedAtomic</CODE> in <CODE>$arg</CODE> are cast 
  to <CODE>xs:double</CODE>.</P>
  <LI>
  <P>Numeric and <CODE>xs:anyURI</CODE> values are converted to the least common 
  type that supports the <CODE>le</CODE> operator by a combination of type 
  promotion and subtype substitution. See <A 
  href="http://www.w3.org/TR/xpath20/#promotion">Section B.1 Type 
  Promotion</A><SUP><SMALL>XP</SMALL></SUP> and <A 
  href="http://www.w3.org/TR/xpath20/#mapping">Section B.2 Operator 
  Mapping</A><SUP><SMALL>XP</SMALL></SUP>.</P></LI></UL>
<P>The items in the resulting sequence may be reordered in an arbitrary order. 
The resulting sequence is referred to below as the converted sequence. This 
function returns an item from the converted sequence rather than the input 
sequence.</P>
<P>If the converted sequence is empty, the empty sequence is returned.</P>
<P>All items in <CODE>$arg</CODE> must be numeric or derived from a single base 
type for which the <CODE>le</CODE> operator is defined. In addition, the values 
in the sequence must have a total order. If date/time values do not have a 
timezone, they are considered to have the implicit timezone provided by the 
dynamic context for the purpose of comparison. Duration values must either all 
be <CODE>xs:yearMonthDuration</CODE> values or must all be 
<CODE>xs:dayTimeDuration</CODE> values.</P>
<P>If any of these conditions is not met, a type error is raised [<A 
title=err:FORG0006 
href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
<P>If the converted sequence contains the value <CODE>NaN</CODE>, the value 
<CODE>NaN</CODE> is returned.</P>
<P>If the items in the value of <CODE>$arg</CODE> are of type 
<CODE>xs:string</CODE> or types derived by restriction from 
<CODE>xs:string</CODE>, then the determination of the item with the smallest 
value is made according to the collation that is used. If the type of the items 
in <CODE>$arg</CODE> is not <CODE>xs:string</CODE> and <CODE>$collation</CODE> 
is specified, the collation is ignored.</P>
<P>The collation used by the invocation of this function is determined according 
to the rules in <A 
href="REC-xpath-functions-20070123.htm#collations"><B>7.3.1 
Collations</B></A>.</P>
<P>Otherwise, the result of the function is the result of the expression:</P>
<DIV class=exampleInner><PRE>   if (every $v in $c satisfies $c[1] le $v) 
   then $c[1] 
   else fn:min(fn:subsequence($c, 2))
</PRE></DIV>
<P>evaluated with <CODE>$collation</CODE> as the default collation if specified, 
and with <CODE>$c</CODE> as the converted sequence.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_aggregates">Section 7.2.10 
The fn:min, fn:max, fn:avg, and fn:sum 
functions</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>If the converted sequence contains exactly one value then that value is 
returned.</P>
<P>The default type when the <CODE>fn:min</CODE> function is applied to 
<CODE>xs:untypedAtomic</CODE> values is <CODE>xs:double</CODE>. This differs 
from the default type for operators such as <CODE>lt</CODE>, and for sorting in 
XQuery and XSLT, which is <CODE>xs:string</CODE>.</P></DIV>
<DIV class=div4>
<H5><A id=func-min-examples name=func-min-examples></A>15.4.4.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>fn:min((3,4,5))</CODE> returns <CODE>3</CODE>.</P>
  <LI>
  <P><CODE>fn:min((5, 5.0e0))</CODE> returns <CODE>5.0e0</CODE>.</P>
  <LI>
  <P><CODE>fn:min((3,4,"Zero"))</CODE> raises a type error [<A 
  title=err:FORG0006 
  href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
  <LI>
  <P><CODE>fn:min((xs:float(0.0E0), xs:float(-0.0E0)))</CODE> can return either 
  positive or negative zero. <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> does not distinguish between the 
  values positive zero and negative zero. The result is <A class=termref 
  title="implementation dependent" 
  href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
  class=arrow>·</SPAN>implementation dependent<SPAN 
class=arrow>·</SPAN></A>.</P>
  <LI>
  <P><CODE>fn:min((fn:current-date(), xs:date("2001-01-01")))</CODE> typically 
  returns <CODE>xs:date("2001-01-01")</CODE>.</P>
  <LI>
  <P><CODE>fn:min(("a", "b", "c"))</CODE> returns "a" under a typical default 
  collation.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-sum name=func-sum></A>15.4.5 fn:sum</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:sum</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:anyAtomicType*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-varies>xs:anyAtomicType</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE class=function>fn:sum</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$zero</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>xs:anyAtomicType?</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>Summary: Returns a value obtained by adding together the values in 
<CODE>$arg</CODE>. If <CODE>$zero</CODE> is not specified, then the value 
returned for an empty sequence is the <CODE>xs:integer</CODE> value 0. If 
<CODE>$zero</CODE> is specified, then the value returned for an empty sequence 
is <CODE>$zero</CODE>.</P>
<P>Any values of type <CODE>xs:untypedAtomic</CODE> in <CODE>$arg</CODE> are 
cast to <CODE>xs:double</CODE>. The items in the resulting sequence may be 
reordered in an arbitrary order. The resulting sequence is referred to below as 
the converted sequence.</P>
<P>If the converted sequence is empty, then the single-argument form of the 
function returns the <CODE>xs:integer</CODE> value <CODE>0</CODE>; the 
two-argument form returns the value of the argument <CODE>$zero</CODE>.</P>
<P>If the converted sequence contains the value <CODE>NaN</CODE>, 
<CODE>NaN</CODE> is returned.</P>
<P>All items in <CODE>$arg</CODE> must be numeric or derived from a single base 
type. In addition, the type must support addition. Duration values must either 
all be <CODE>xs:yearMonthDuration</CODE> values or must all be 
<CODE>xs:dayTimeDuration</CODE> values. For numeric values, the numeric 
promotion rules defined in <A 
href="REC-xpath-functions-20070123.htm#op.numeric"><B>6.2 
Operators on Numeric Values</B></A> are used to promote all values to a single 
common type. The sum of a sequence of integers will therefore be an integer, 
while the sum of a numeric sequence that includes at least one xs:double will be 
an xs:double.</P>
<P>If the above conditions are not met, a type error is raised [<A 
title=err:FORG0006 
href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P>
<P>Otherwise, the result of the function, using the second signature, is the 
result of the expression:</P>
<DIV class=exampleInner><PRE>if (fn:count($c) eq 0) then
    $zero
else if (fn:count($c) eq 1) then
    $c[1]
else
    $c[1] + fn:sum(subsequence($c, 2))
</PRE></DIV>
<P>where <CODE>$c</CODE> is the converted sequence.</P>
<P>The result of the function, using the first signature, is the result of the 
expression: <CODE>fn:sum($arg, 0)</CODE>.</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_aggregates">Section 7.2.10 
The fn:min, fn:max, fn:avg, and fn:sum 
functions</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>The second argument allows an appropriate value to be defined to represent 
the sum of an empty sequence. For example, when summing a sequence of durations 
it would be appropriate to return a zero-length duration of the appropriate 
type. This argument is necessary because a system that does dynamic typing 
cannot distinguish "an empty sequence of integers", for example, from "an empty 
sequence of durations".</P>
<P>If the converted sequence contains exactly one value then that value is 
returned.</P></DIV>
<DIV class=div4>
<H5><A id=func-sum-examples name=func-sum-examples></A>15.4.5.1 Examples</H5>
<P>Assume:</P>
<DIV class=exampleInner><PRE>$d1 = xs:yearMonthDuration("P20Y")
$d2 = xs:yearMonthDuration("P10M")
$seq1 = ($d1, $d2)
$seq3 = (3, 4, 5)
</PRE></DIV>
<UL>
  <LI>
  <P><CODE>fn:sum(($d1, $d2))</CODE> returns an 
  <CODE>xs:yearMonthDuration</CODE> with a value of <CODE>250</CODE> months.</P>
  <LI>
  <P><CODE>fn:sum($seq1[. &lt; xs:yearMonthDuration('P3M')], 
  xs:yearMonthDuration('P0M'))</CODE> returns an 
  <CODE>xs:yearMonthDuration</CODE> with a value of <CODE>0</CODE> months.</P>
  <LI>
  <P><CODE>fn:sum($seq3)</CODE> returns <CODE>12</CODE>.</P>
  <LI>
  <P><CODE>fn:sum(())</CODE> returns <CODE>0</CODE>.</P>
  <LI>
  <P><CODE>fn:sum((),())</CODE> returns <CODE>()</CODE>.</P>
  <LI>
  <P><CODE>fn:sum((1 to 100)[.&lt;0], 0)</CODE> returns <CODE>0</CODE>.</P>
  <LI>
  <P><CODE>fn:sum(($d1, 9E1))</CODE> raises an error [<A title=err:FORG0006 
  href="REC-xpath-functions-20070123.htm#ERRFORG0006">err:FORG0006</A>].</P></LI></UL></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=fns-that-generate-sequences name=fns-that-generate-sequences></A>15.5 
Functions and Operators that Generate Sequences</H3>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-to"><CODE>op:to</CODE></A></TD>
    <TD>Returns the sequence containing every <CODE>xs:integer</CODE> between 
      the values of the operands.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-id"><CODE>fn:id</CODE></A></TD>
    <TD>Returns the sequence of element nodes having an ID value matching the 
      one or more of the supplied IDREF values.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-idref"><CODE>fn:idref</CODE></A></TD>
    <TD>Returns the sequence of element or attribute nodes with an IDREF value 
      matching one or more of the supplied ID values.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc</CODE></A></TD>
    <TD>Returns a document node retrieved using the specified URI.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-doc-available"><CODE>fn:doc-available</CODE></A></TD>
    <TD>Returns <CODE>true</CODE> if a document node can be retrieved using 
      the specified URI.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection</CODE></A></TD>
    <TD>Returns a sequence of nodes retrieved using the specified URI or the 
      nodes in the default collection.</TD></TR></TBODY></TABLE>
<DIV class=div3>
<H4><A id=func-to name=func-to></A>15.5.1 op:to</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>op:to</CODE>(<CODE 
class=arg>$firstval</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:integer</CODE>, <CODE class=arg>$lastval</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:integer</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer*</CODE></DIV></DIV>
<P>Summary: Returns the sequence containing every <CODE>xs:integer</CODE> whose 
value is between the value of <CODE>$firstval</CODE> (inclusive) and the value 
of <CODE>$lastval</CODE> (inclusive), in monotonic order. If the value of the 
first operand is greater than the value of the second, the empty sequence is 
returned. If the values of the two operands are equal, a sequence containing a 
single <CODE>xs:integer</CODE> equal to the value is returned.</P>
<P>This function backs up the "to" operator.</P>
<DIV class=div4>
<H5><A id=func-to-examples name=func-to-examples></A>15.5.1.1 Examples</H5>
<UL>
  <LI>
  <P><CODE>1 to 3</CODE> returns <CODE>(1, 2, 3)</CODE></P>
  <LI>
  <P><CODE>3 to 1</CODE> returns <CODE>()</CODE></P>
  <LI>
  <P><CODE>5 to 5</CODE> returns <CODE>5</CODE></P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=func-id name=func-id></A>15.5.2 fn:id</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:id</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>element()*</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:id</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string*</CODE>, <CODE class=arg>$node</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type> node()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>element()*</CODE></DIV></DIV>
<P>Summary: Returns the sequence of element nodes that have an <CODE>ID</CODE> 
value matching the value of one or more of the <CODE>IDREF</CODE> values 
supplied in <CODE>$arg</CODE> .</P>
<P>The function returns a sequence, in document order with duplicates 
eliminated, containing every element node <CODE>E</CODE> that satisfies all the 
following conditions:</P>
<OL class=enumar>
  <LI>
  <P><CODE>E</CODE> is in the target document. The target document is the 
  document containing <CODE>$node</CODE>, or the document containing the context 
  item (<CODE>.</CODE>) if the second argument is omitted. The behavior of the 
  function if <CODE>$node</CODE> is omitted is exactly the same as if the 
  context item had been passed as <CODE>$node</CODE>. If <CODE>$node</CODE>, or 
  the context item if the second argument is omitted, is a node in a tree whose 
  root is not a document node [<A title=err:FODC0001 
  href="REC-xpath-functions-20070123.htm#ERRFODC0001">err:FODC0001</A>] 
  is raised. If the second argument is the context item, or is omitted, the 
  following errors may be raised: if there is no context item, [<A 
  title=err:XPDY0002 
  href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
  if the context item is not a node [<A title=err:XPTY0004 
  href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
  <LI>
  <P><CODE>E</CODE> has an <CODE>ID</CODE> value equal to one of the candidate 
  <CODE>IDREF</CODE> values, where:</P>
  <UL>
    <LI>
    <P>An element has an <CODE>ID</CODE> value equal to <CODE>V</CODE> if either 
    or both of the following conditions are true:</P>
    <UL>
      <LI>
      <P>The <CODE>is-id</CODE> property (See <A 
      href="http://www.w3.org/TR/xpath-datamodel/#dm-is-id">Section 5.5 is-id 
      Accessor</A><SUP><SMALL>DM</SMALL></SUP>.) of the element node is true, 
      and the typed value of the element node is equal to V under the rules of 
      the <CODE>eq</CODE> operator using the Unicode code point collation 
      (<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>).</P>
      <LI>
      <P>The element has an attribute node whose <CODE>is-id</CODE> property 
      (See <A href="http://www.w3.org/TR/xpath-datamodel/#dm-is-id">Section 5.5 
      is-id Accessor</A><SUP><SMALL>DM</SMALL></SUP>.) is true and whose typed 
      value is equal to <CODE>V</CODE> under the rules of the <CODE>eq</CODE> 
      operator using the Unicode code point collation 
      (<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>).</P></LI></UL>
    <LI>
    <P>Each <CODE>xs:string</CODE> in <CODE>$arg</CODE> is parsed as if it were 
    of type <CODE>IDREFS</CODE>, that is, each <CODE>xs:string</CODE> in 
    <CODE>$arg</CODE> is treated as a whitespace-separated sequence of tokens, 
    each acting as an <CODE>IDREF</CODE>. These tokens are then included in the 
    list of candidate <CODE>IDREF</CODE>s. If any of the tokens is not a 
    lexically valid <CODE>IDREF</CODE> (that is, if it is not lexically an 
    <CODE>xs:NCName</CODE>), it is ignored. Formally, the candidate 
    <CODE>IDREF</CODE> values are the strings in the sequence given by the 
    expression:</P>
    <DIV class=exampleInner><PRE>for $s in $arg return fn:tokenize(fn:normalize-space($s), ' ')
                 [. castable as xs:IDREF]
</PRE></DIV></LI></UL>
  <LI>
  <P>If several elements have the same <CODE>ID</CODE> value, then 
  <CODE>E</CODE> is the one that is first in document order.</P></LI></OL>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>If the data model is constructed from an Infoset, an attribute will have the 
<CODE>is-id</CODE> property if the corresponding attribute in the Infoset had an 
attribute type of <CODE>ID</CODE>: typically this means the attribute was 
declared as an <CODE>ID</CODE> in a DTD.</P>
<P>If the data model is constructed from a PSVI, an element or attribute will 
have the <CODE>is-id</CODE> property if its schema-defined type is 
<CODE>xs:ID</CODE> or a type derived by restriction from <CODE>xs:ID</CODE>.</P>
<P>No error is raised in respect of a candidate <CODE>IDREF</CODE> value that 
does not match the <CODE>ID</CODE> of any element in the document. If no 
candidate <CODE>IDREF</CODE> value matches the <CODE>ID</CODE> value of any 
element, the function returns the empty sequence.</P>
<P>It is not necessary that the supplied argument should have type 
<CODE>xs:IDREF</CODE> or <CODE>xs:IDREFS</CODE>, or that it should be derived 
from a node with the <CODE>is-idrefs</CODE> property.</P>
<P>An element may have more than one <CODE>ID</CODE> value. This can occur with 
synthetic data models or with data models constructed from a PSVI where the 
element and one of its attributes are both typed as <CODE>xs:ID</CODE>.</P>
<P>If the source document is well-formed but not valid, it is possible for two 
or more elements to have the same <CODE>ID</CODE> value. In this situation, the 
function will select the first such element.</P>
<P>It is also possible in a well-formed but invalid document to have an element 
or attribute that has the is-id property but whose value does not conform to the 
lexical rules for the <CODE>xs:ID</CODE> type. Such a node will never be 
selected by this function.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=func-idref name=func-idref></A>15.5.3 fn:idref</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:idref</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>node()*</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:idref</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string*</CODE>, <CODE class=arg>$node</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type> node()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>node()*</CODE></DIV></DIV>
<P>Summary: Returns the sequence of element or attribute nodes with an 
<CODE>IDREF</CODE> value matching the value of one or more of the 
<CODE>ID</CODE> values supplied in <CODE>$arg</CODE>.</P>
<P>The function returns a sequence, in document order with duplicates 
eliminated, containing every element or attribute node <CODE>$N</CODE> that 
satisfies all the following conditions:</P>
<OL class=enumar>
  <LI>
  <P><CODE>$N</CODE> is in the target document. The target document is the 
  document containing <CODE>$node</CODE> or the document containing the context 
  item (<CODE>.</CODE>) if the second argument is omitted. The behavior of the 
  function if <CODE>$node</CODE> is omitted is exactly the same as if the 
  context item had been passed as <CODE>$node</CODE>. If <CODE>$node</CODE>, or 
  the context item if the second argument is omitted, is a node in a tree whose 
  root is not a document node [<A title=err:FODC0001 
  href="REC-xpath-functions-20070123.htm#ERRFODC0001">err:FODC0001</A>] 
  is raised. If the second argument is the context item, or is omitted, the 
  following errors may be raised: if there is no context item [<A 
  title=err:XPDY0002 
  href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>; 
  if the context item is not a node [<A title=err:XPTY0004 
  href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
  <LI>
  <P><CODE>$N</CODE> has an <CODE>IDREF</CODE> value equal to one of the 
  candidate <CODE>ID</CODE> values, where:</P>
  <UL>
    <LI>
    <P>A node <CODE>$N</CODE> has an <CODE>IDREF</CODE> value equal to 
    <CODE>V</CODE> if both of the following conditions are true:</P>
    <UL>
      <LI>
      <P>The <CODE>is-idrefs</CODE> property (See <A 
      href="http://www.w3.org/TR/xpath-datamodel/#dm-is-idrefs">Section 5.6 
      is-idrefs Accessor</A><SUP><SMALL>DM</SMALL></SUP>.)of <CODE>$N</CODE> is 
      <CODE>true</CODE></P>
      <LI>
      <P>The sequence</P>
      <DIV class=exampleInner><PRE>fn:tokenize(fn:normalize-space($N),
                                                  ' ')
</PRE></DIV>contains a string that is equal to <CODE>V</CODE> under the 
      rules of the <CODE>eq</CODE> operator using the Unicode code point 
      collation 
      (<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>). 
      </LI></UL>
    <LI>
    <P>Each <CODE>xs:string</CODE> in <CODE>$arg</CODE> is parsed as if it were 
    of lexically of type <CODE>xs:ID</CODE>. These <CODE>xs:string</CODE>s are 
    then included in the list of candidate <CODE>xs:ID</CODE>s. If any of the 
    strings in <CODE>$arg</CODE> is not a lexically valid <CODE>xs:ID</CODE> 
    (that is, if it is not lexically an <CODE>xs:NCName</CODE>), it is ignored. 
    More formally, the candidate <CODE>ID</CODE> values are the strings in the 
    sequence</P>
    <DIV class=exampleInner><PRE>$arg[. castable as xs:NCName]
</PRE></DIV></LI></UL></LI></OL>
<DIV class=note>
<P class=prefix><B>Notes:</B></P>
<P>An element or attribute typically acquires the <CODE>is-idrefs</CODE> 
property by being validated against the schema type <CODE>xs:IDREF</CODE> or 
<CODE>xs:IDREFS</CODE>, or (for attributes only) by being described as of type 
<CODE>IDREF</CODE> or <CODE>IDREFS</CODE> in a DTD.</P>
<P>No error is raised in respect of a candidate <CODE>ID</CODE> value that does 
not match the <CODE>IDREF</CODE> value of any element or attribute in the 
document. If no candidate <CODE>ID</CODE> value matches the <CODE>IDREF</CODE> 
value of any element or attribute, the function returns the empty sequence.</P>
<P>It is possible for two or more nodes to have an <CODE>IDREF</CODE> value that 
matches a given candidate <CODE>ID</CODE> value. In this situation, the function 
will return all such nodes. However, each matching node will be returned at most 
once, regardless how many candidate <CODE>ID</CODE> values it matches.</P>
<P>It is possible in a well-formed but invalid document to have a node whose 
<CODE>is-idrefs</CODE> property is true but that does not conform to the lexical 
rules for the <CODE>xs:IDREF</CODE> type. The effect of the above rules is that 
ill-formed candidate <CODE>ID</CODE> values and ill-formed <CODE>IDREF</CODE> 
values are ignored.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=func-doc name=func-doc></A>15.5.4 fn:doc</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:doc</CODE>(<CODE 
class=arg>$uri</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>document-node()?</CODE></DIV></DIV>
<P>Summary: Retrieves a document using an <CODE>xs:anyURI</CODE>, which may 
include a fragment identifier, supplied as an <CODE>xs:string</CODE>. If 
<CODE>$uri</CODE> is not a valid <CODE>xs:anyURI</CODE>, an error is raised [<A 
title=err:FODC0005 
href="REC-xpath-functions-20070123.htm#ERRFODC0005">err:FODC0005</A>]. 
If it is a relative URI Reference, it is resolved relative to the value of the 
base URI property from the static context. The resulting absolute URI Reference 
is promoted to an <CODE>xs:string</CODE>. If the <B>Available documents</B> 
discussed in <A href="http://www.w3.org/TR/xpath20/#eval_context">Section 2.1.2 
Dynamic Context</A><SUP><SMALL>XP</SMALL></SUP> provides a mapping from this 
string to a document node, the function returns that document node. If the 
<B>Available documents</B> provides no mapping for the string, an error is 
raised [<A title=err:FODC0005 
href="REC-xpath-functions-20070123.htm#ERRFODC0005">err:FODC0005</A>].</P>
<P>If <CODE>$uri</CODE> is the empty sequence, the result is an empty 
sequence.</P>
<P>By default, this function is <A class=termref title=stable 
href="REC-xpath-functions-20070123.htm#stable"><SPAN 
class=arrow>·</SPAN>stable<SPAN class=arrow>·</SPAN></A>. Two calls on this 
function return the same document node if the same URI Reference (after 
resolution to an absolute URI Reference) is supplied to both calls. Thus, the 
following expression (if it does not raise an error) will always be true:</P>
<DIV class=exampleInner><PRE>doc("foo.xml") is doc("foo.xml")
</PRE></DIV>
<P>However, for performance reasons, implementations may provide a user option 
to evaluate the function without a guarantee of stability. The manner in which 
any such option is provided is implementation-defined. If the user has not 
selected such an option, a call of the function must either return a stable 
result or must raise an error: [<A title=err:FODC0003 
href="REC-xpath-functions-20070123.htm#ERRFODC0003">err:FODC0003</A>].</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_doc_collection">Section 
7.2.5 The fn:collection and fn:doc 
functions</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>If <CODE>$uri</CODE> is read from a source document, it is generally 
appropriate to resolve it relative to the base URI property of the relevant node 
in the source document. This can be achieved by calling the <A 
href="REC-xpath-functions-20070123.htm#func-resolve-uri"><CODE>fn:resolve-uri</CODE></A> 
function, and passing the resulting absolute URI as an argument to the 
<CODE>fn:doc</CODE> function.</P></DIV>
<P>If two calls to this function supply different absolute URI References as 
arguments, the same document node may be returned if the implementation can 
determine that the two arguments refer to the same resource.</P>
<P>By defining the semantics of this function in terms of a 
string-to-document-node mapping in the dynamic context, the specification is 
acknowledging that the results of this function are outside the purview of the 
language specification itself, and depend entirely on the run-time environment 
in which the expression is evaluated. This run-time environment includes not 
only an unpredictable collection of resources ("the web"), but configurable 
machinery for locating resources and turning their contents into document nodes 
within the XPath data model. Both the set of resources that are reachable, and 
the mechanisms by which those resources are parsed and validated, are <A 
class=termref title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<P>One possible processing model for this function is as follows. The resource 
identified by the URI Reference is retrieved. If the resource cannot be 
retrieved, an error is raised [<A title=err:FODC0002 
href="REC-xpath-functions-20070123.htm#ERRFODC0002">err:FODC0002</A>]. 
The data resulting from the retrieval action is then parsed as an XML document 
and a tree is constructed in accordance with the <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A>. If the top-level media type is known and is 
"text", the content is parsed in the same way as if the media type were 
text/xml; otherwise, it is parsed in the same way as if the media type were 
application/xml. If the contents cannot be parsed successfully, an error is 
raised [<A title=err:FODC0002 
href="REC-xpath-functions-20070123.htm#ERRFODC0002">err:FODC0002</A>]. 
Otherwise, the result of the function is the document node at the root of the 
resulting tree. This tree is then optionally validated against a schema.</P>
<P>Various aspects of this processing are <A class=termref 
title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. 
Implementations may provide external configuration options that allow any aspect 
of the processing to be controlled by the user. In particular:</P>
<UL>
  <LI>
  <P>The set of URI schemes that the implementation recognizes is 
  implementation-defined. Implementations may allow the mapping of URIs to 
  resources to be configured by the user, using mechanisms such as catalogs or 
  user-written URI handlers.</P>
  <LI>
  <P>The handling of non-XML media types is implementation-defined. 
  Implementations may allow instances of the data model to be constructed from 
  non-XML resources, under user control.</P>
  <LI>
  <P>It is <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  whether DTD validation and/or schema validation is applied to the source 
  document.</P>
  <LI>
  <P>Implementations may provide user-defined error handling options that allow 
  processing to continue following an error in retrieving a resource, or in 
  parsing and validating its content. When errors have been handled in this way, 
  the function may return either an empty sequence, or a fallback document 
  provided by the error handler.</P>
  <LI>
  <P>Implementations may provide user options that relax the requirement for the 
  function to return stable results.</P></LI></UL></DIV>
<DIV class=div3>
<H4><A id=func-doc-available name=func-doc-available></A>15.5.5 
fn:doc-available</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:doc-available</CODE>(<CODE 
class=arg>$uri</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:boolean</CODE></DIV></DIV>
<P>Summary: If <A 
href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc($uri)</CODE></A> 
returns a document node, this function returns <CODE>true</CODE>. If 
<CODE>$uri</CODE> is not a valid <CODE>xs:anyURI</CODE>, an error is raised [<A 
title=err:FODC0005 
href="REC-xpath-functions-20070123.htm#ERRFODC0005">err:FODC0005</A>]. 
Otherwise, this function returns <CODE>false</CODE>.</P>
<P>If this function returns <CODE>true</CODE>, then calling <A 
href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc($uri)</CODE></A> 
within the same <A class=termref title="execution scope" 
href="REC-xpath-functions-20070123.htm#execution-scope"><SPAN 
class=arrow>·</SPAN>execution scope<SPAN class=arrow>·</SPAN></A> must return a 
document node. However, if non-stable processing has been selected for the <A 
href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc</CODE></A> 
function, this guarantee is lost.</P></DIV>
<DIV class=div3>
<H4><A id=func-collection name=func-collection></A>15.5.6 fn:collection</H4>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:collection</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>node()*</CODE></DIV></DIV>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:collection</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>node()*</CODE></DIV></DIV>
<P>Summary: This function takes an <CODE>xs:string</CODE> as argument and 
returns a sequence of nodes obtained by interpreting <CODE>$arg</CODE> as an 
<CODE>xs:anyURI</CODE> and resolving it according to the mapping specified in 
<B>Available collections</B> described in <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>. If <B>Available 
collections</B> provides a mapping from this string to a sequence of nodes, the 
function returns that sequence. If <B>Available collections</B> maps the string 
to an empty sequence, then the function returns an empty sequence. If 
<B>Available collections</B> provides no mapping for the string, an error is 
raised [<A title=err:FODC0004 
href="REC-xpath-functions-20070123.htm#ERRFODC0004">err:FODC0004</A>]. 
If <CODE>$arg</CODE> is not specified, the function returns the sequence of the 
nodes in the default collection in the dynamic context. See <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>. If the value of 
the default collection is undefined an error is raised [<A title=err:FODC0002 
href="REC-xpath-functions-20070123.htm#ERRFODC0002">err:FODC0002</A>].</P>
<P>If the <CODE>$arg</CODE> is a relative <CODE>xs:anyURI</CODE>, it is resolved 
against the value of the base-URI property from the static context. If 
<CODE>$arg</CODE> is not a valid <CODE>xs:anyURI</CODE>, an error is raised [<A 
title=err:FODC0004 
href="REC-xpath-functions-20070123.htm#ERRFODC0004">err:FODC0004</A>].</P>
<P>If <CODE>$arg</CODE> is the empty sequence, the function behaves as if it had 
been called without an argument. See above.</P>
<P>By default, this function is <A class=termref title=stable 
href="REC-xpath-functions-20070123.htm#stable"><SPAN 
class=arrow>·</SPAN>stable<SPAN class=arrow>·</SPAN></A>. This means that 
repeated calls on the function with the same argument will return the same 
result. However, for performance reasons, implementations may provide a user 
option to evaluate the function without a guarantee of stability. The manner in 
which any such option is provided is <A class=termref 
title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. If the 
user has not selected such an option, a call to this function must either return 
a stable result or must raise an error: [<A title=err:FODC0003 
href="REC-xpath-functions-20070123.htm#ERRFODC0003">err:FODC0003</A>].</P>
<P>For detailed type semantics, see <A 
href="http://www.w3.org/TR/xquery-semantics/#sec_fn_doc_collection">Section 
7.2.5 The fn:collection and fn:doc 
functions</A><SUP><SMALL>FS</SMALL></SUP>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>This function provides a facility for users to work with a collection of 
documents which may be contained in a directory or rows of a Relational table or 
other implementation-specific construct. An implementation may also use external 
variables to identify external resources, but <CODE>fn:collection()</CODE> 
provides functionality not provided by external variables. Specifying resources 
using URIs is useful because URIs are dynamic, can be parameterized, and do not 
rely on an external environment.</P></DIV></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=context name=context></A>16 Context Functions</H2>
<P>The following functions are defined to obtain information from the dynamic 
context.</P>
<TABLE summary="Function/operator summary" border=1>
  <THEAD>
  <TR>
    <TH>Function</TH>
    <TH>Meaning</TH></TR></THEAD>
  <TBODY>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-position"><CODE>fn:position</CODE></A></TD>
    <TD>Returns the position of the context item within the sequence of items 
      currently being processed.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-last"><CODE>fn:last</CODE></A></TD>
    <TD>Returns the number of items in the sequence of items currently being 
      processed.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-current-dateTime"><CODE>fn:current-dateTime</CODE></A></TD>
    <TD>Returns the current <CODE>xs:dateTime</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-current-date"><CODE>fn:current-date</CODE></A></TD>
    <TD>Returns the current <CODE>xs:date</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-current-time"><CODE>fn:current-time</CODE></A></TD>
    <TD>Returns the current <CODE>xs:time</CODE>.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-implicit-timezone"><CODE>fn:implicit-timezone</CODE></A></TD>
    <TD>Returns the value of the implicit timezone property from the dynamic 
      context.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-default-collation"><CODE>fn:default-collation</CODE></A></TD>
    <TD>Returns the value of the default collation property from the static 
      context.</TD></TR>
  <TR>
    <TD><A 
      href="REC-xpath-functions-20070123.htm#func-static-base-uri"><CODE>fn:static-base-uri</CODE></A></TD>
    <TD>Returns the value of the Base URI property from the static 
  context.</TD></TR></TBODY></TABLE>
<DIV class=div2>
<H3><A id=func-position name=func-position></A>16.1 fn:position</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:position</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer</CODE></DIV></DIV>
<P>Summary: Returns the context position from the dynamic context. (See <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>.) If the context 
item is undefined, an error is raised: [<A title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>.</P></DIV>
<DIV class=div2>
<H3><A id=func-last name=func-last></A>16.2 fn:last</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:last</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer</CODE></DIV></DIV>
<P>Summary: Returns the context size from the dynamic context. (See <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>.) If the context 
item is undefined, an error is raised: [<A title=err:XPDY0002 
href="http://www.w3.org/TR/xpath20/#ERRXPDY0002">err:XPDY0002</A>]<SUP><SMALL>XP</SMALL></SUP>.</P></DIV>
<DIV class=div2>
<H3><A id=func-current-dateTime name=func-current-dateTime></A>16.3 
fn:current-dateTime</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:current-dateTime</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dateTime</CODE></DIV></DIV>
<P>Summary: Returns the current dateTime (with timezone) from the dynamic 
context. (See <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>.) This is an 
<CODE>xs:dateTime</CODE> that is current at some time during the evaluation of a 
query or transformation in which <CODE>fn:current-dateTime()</CODE> is executed. 
This function is <A class=termref title=stable 
href="REC-xpath-functions-20070123.htm#stable"><SPAN 
class=arrow>·</SPAN>stable<SPAN class=arrow>·</SPAN></A>. The precise instant 
during the query or transformation represented by the value of 
<CODE>fn:current-dateTime()</CODE> is <A class=termref 
title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<DIV class=div3>
<H4><A id=func-current-dateTime-examples 
name=func-current-dateTime-examples></A>16.3.1 Examples</H4>
<UL>
  <LI>
  <P><CODE>fn:current-dateTime()</CODE> returns an <CODE>xs:dateTime</CODE> 
  corresponding to the current date and time. For example, an invocation of 
  <CODE>fn:current-dateTime()</CODE> might return 
  <CODE>2004-05-12T18:17:15.125Z</CODE> corresponding to the current time on May 
  12, 2004 in timezone <CODE>Z</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-current-date name=func-current-date></A>16.4 fn:current-date</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:current-date</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:date</CODE></DIV></DIV>
<P>Summary: Returns <CODE>xs:date(fn:current-dateTime())</CODE>. This is an 
<CODE>xs:date</CODE> (with timezone) that is current at some time during the 
evaluation of a query or transformation in which <CODE>fn:current-date()</CODE> 
is executed. This function is <A class=termref title=stable 
href="REC-xpath-functions-20070123.htm#stable"><SPAN 
class=arrow>·</SPAN>stable<SPAN class=arrow>·</SPAN></A>. The precise instant 
during the query or transformation represented by the value of 
<CODE>fn:current-date()</CODE> is <A class=termref 
title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<DIV class=div3>
<H4><A id=func-current-date-examples name=func-current-date-examples></A>16.4.1 
Examples</H4>
<UL>
  <LI>
  <P><CODE>fn:current-date()</CODE> returns an <CODE>xs:date</CODE> 
  corresponding to the current date and time. For example, an invocation of 
  <CODE>fn:current-date()</CODE> might return 
  <CODE>2004-05-12+01:00</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-current-time name=func-current-time></A>16.5 fn:current-time</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:current-time</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=return-type>xs:time</CODE></DIV></DIV>
<P>Summary: Returns <CODE>xs:time(fn:current-dateTime())</CODE>. This is an 
<CODE>xs:time</CODE> (with timezone) that is current at some time during the 
evaluation of a query or transformation in which <CODE>fn:current-time()</CODE> 
is executed. This function is <A class=termref title=stable 
href="REC-xpath-functions-20070123.htm#stable"><SPAN 
class=arrow>·</SPAN>stable<SPAN class=arrow>·</SPAN></A>. The precise instant 
during the query or transformation represented by the value of 
<CODE>fn:current-time()</CODE> is <A class=termref 
title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<DIV class=div3>
<H4><A id=func-current-time-examples name=func-current-time-examples></A>16.5.1 
Examples</H4>
<UL>
  <LI>
  <P><CODE>fn:current-time()</CODE> returns an <CODE>xs:time</CODE> 
  corresponding to the current date and time. For example, an invocation of 
  <CODE>fn:current-time()</CODE> might return 
  <CODE>23:17:00.000-05:00</CODE>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=func-implicit-timezone name=func-implicit-timezone></A>16.6 
fn:implicit-timezone</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:implicit-timezone</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:dayTimeDuration</CODE></DIV></DIV>
<P>Summary: Returns the value of the implicit timezone property from the dynamic 
context. Components of the dynamic context are discussed in <A 
href="http://www.w3.org/TR/xpath20/#id-xp-evaluation-context-components">Section 
C.2 Dynamic Context Components</A><SUP><SMALL>XP</SMALL></SUP>.</P></DIV>
<DIV class=div2>
<H3><A id=func-default-collation name=func-default-collation></A>16.7 
fn:default-collation</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:default-collation</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Summary: Returns the value of the default collation property from the static 
context. Components of the static context are discussed in <A 
href="http://www.w3.org/TR/xpath20/#id-xp-static-context-components">Section C.1 
Static Context Components</A><SUP><SMALL>XP</SMALL></SUP>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The default collation property can never be undefined. If it is not 
explicitly defined, a system defined default can be invoked. If this is not 
provided, the Unicode code point collation 
(<CODE>http://www.w3.org/2005/xpath-functions/collation/codepoint</CODE>) is 
used.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=func-static-base-uri name=func-static-base-uri></A>16.8 
fn:static-base-uri</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:static-base-uri</CODE>()<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:anyURI?</CODE></DIV></DIV>
<P>Summary: Returns the value of the Base URI property from the static context. 
If the Base URI property is undefined, the empty sequence is returned. 
Components of the static context are discussed in <A 
href="http://www.w3.org/TR/xpath20/#id-xp-static-context-components">Section C.1 
Static Context Components</A><SUP><SMALL>XP</SMALL></SUP> .</P></DIV></DIV>
<DIV class=div1>
<H2><A id=casting name=casting></A>17 Casting</H2>
<P>Constructor functions and cast expressions accept an expression and return a 
value of a given type. They both convert a source value, <EM>SV</EM>, of a 
source type, <EM>ST</EM>, to a target value, <EM>TV</EM>, of the given target 
type, <EM>TT</EM>, with identical semantics and different syntax. The name of 
the constructor function is the same as the name of the built-in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> datatype or the datatype defined in 
<A href="http://www.w3.org/TR/xpath-datamodel/#types">Section 2.6 
Types</A><SUP><SMALL>DM</SMALL></SUP> of <A 
href="REC-xpath-functions-20070123.htm#xpath-datamodel">[XQuery 
1.0 and XPath 2.0 Data Model]</A> (see <A 
href="REC-xpath-functions-20070123.htm#constructor-functions-for-xsd-types"><B>5.1 
Constructor Functions for XML Schema Built-in Types</B></A>) or the user-derived 
datatype (see <A 
href="REC-xpath-functions-20070123.htm#constructor-functions-for-user-defined-types"><B>5.4 
Constructor Functions for User-Defined Types</B></A>) that is the target for the 
conversion, and the semantics are exactly the same as for a cast expression; for 
example," <CODE>xs:date("2003-01-01")</CODE> " means exactly the same as " 
<CODE>"2003-01-01"</CODE> cast as <CODE>xs:date?</CODE> ".</P>
<P>The cast expression takes a type name to indicate the target type of the 
conversion. See <A href="http://www.w3.org/TR/xpath20/#id-cast">Section 3.10.2 
Cast</A><SUP><SMALL>XP</SMALL></SUP>. If the type name allows the empty sequence 
and the expression to be cast is the empty sequence, the empty sequence is 
returned. If the type name does not allow the empty sequence and the expression 
to be cast is the empty sequence, a type error is raised [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>Where the argument to a cast is a literal, the result of the function may be 
evaluated statically; if an error is encountered during such evaluation, it may 
be reported as a static error.</P>
<P>Casting from primitive type to primitive type is discussed in <A 
href="REC-xpath-functions-20070123.htm#casting-from-primitive-to-primitive"><B>17.1 
Casting from primitive types to primitive types</B></A>. Casting to derived 
types is discussed in <A 
href="REC-xpath-functions-20070123.htm#casting-to-derived-types"><B>17.2 
Casting to derived types</B></A>. Casting from derived types is discussed in <A 
href="REC-xpath-functions-20070123.htm#casting-from-derived-to-parent"><B>17.3 
Casting from derived types to parent types</B></A>, <A 
href="REC-xpath-functions-20070123.htm#casting-within-branch"><B>17.4 
Casting within a branch of the type hierarchy</B></A> and <A 
href="REC-xpath-functions-20070123.htm#casting-across-hierarchy"><B>17.5 
Casting across the type hierarchy</B></A>.</P>
<P>When casting from <CODE>xs:string</CODE> the semantics in <A 
href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
Casting from xs:string and xs:untypedAtomic</B></A> apply, regardless of target 
type.</P>
<DIV class=div2>
<H3><A id=casting-from-primitive-to-primitive 
name=casting-from-primitive-to-primitive></A>17.1 Casting from primitive types 
to primitive types</H3>
<P>This section defines casting between the 19 primitive types defined in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> as well as 
<CODE>xs:untypedAtomic</CODE>, <CODE>xs:integer</CODE> and the two derived types 
of <CODE>xs:duration</CODE> (<CODE>xs:yearMonthDuration</CODE> and 
<CODE>xs:dayTimeDuration</CODE>). These four types are not primitive types but 
they are treated as primitive types in this section. The type conversions that 
are supported are indicated in the table below. In this table, there is a row 
for each primitive type with that type as the source of the conversion and there 
is a column for each primitive type as the target of the conversion. The 
intersections of rows and columns contain one of three characters: "Y" indicates 
that a conversion from values of the type to which the row applies to the type 
to which the column applies is supported; "N" indicates that there are no 
supported conversions from values of the type to which the row applies to the 
type to which the column applies; and "M" indicates that a conversion from 
values of the type to which the row applies to the type to which the column 
applies may succeed for some values in the value space and fails for others.</P>
<P><A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> defines <CODE>xs:NOTATION</CODE> as 
an abstract type. Thus, casting to <CODE>xs:NOTATION</CODE> from any other type 
including <CODE>xs:NOTATION</CODE> is not permitted and raises [<A 
title=err:XPST0080 
href="http://www.w3.org/TR/xpath20/#ERRXPST0080">err:XPST0080</A>]<SUP><SMALL>XP</SMALL></SUP>. 
However, casting from one subtype of <CODE>xs:NOTATION</CODE> to another subtype 
of <CODE>xs:NOTATION</CODE> is permitted.</P>
<P>Casting is not supported to or from <CODE>xs:anySimpleType</CODE>. Thus, 
there is no row or column for this type in the table below. For any node that 
has not been validated or has been validated as <CODE>xs:anySimpleType</CODE>, 
the typed value of the node is an atomic value of type 
<CODE>xs:untypedAtomic</CODE>. There are no atomic values with the type 
annotation <CODE>xs:anySimpleType</CODE> at runtime. Casting to a type that is 
not atomic raises [<A title=err:XPST0051 
href="http://www.w3.org/TR/xpath20/#ERRXPST0051">err:XPST0051</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>Similarly, casting is not supported to or from <CODE>xs:anyAtomicType</CODE> 
and will raise error [<A title=err:XPST0080 
href="http://www.w3.org/TR/xpath20/#ERRXPST0080">err:XPST0080</A>]<SUP><SMALL>XP</SMALL></SUP>. 
There are no atomic values with the type annotation 
<CODE>xs:anyAtomicType</CODE> at runtime, although this can be a statically 
inferred type.</P>
<P>If casting is attempted from an <EM>ST</EM> to a <EM>TT</EM> for which 
casting is not supported, as defined in the table below, a type error is raised 
[<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP>.</P>
<P>In the following table, the columns and rows are identified by short codes 
that identify simple types as follows:</P>
<BLOCKQUOTE>
  <P>uA = xs:untypedAtomic<BR>aURI = xs:anyURI<BR>b64 = xs:base64Binary<BR>bool 
  = xs:boolean<BR>dat = xs:date<BR>gDay = xs:gDay<BR>dbl = xs:double<BR>dec = 
  xs:decimal<BR>dT = xs:dateTime<BR>dTD = xs:dayTimeDuration<BR>dur = 
  xs:duration<BR>flt = xs:float<BR>hxB = xs:hexBinary<BR>gMD = 
  xs:gMonthDay<BR>gMon = xs:gMonth<BR>int = xs:integer<BR>NOT = 
  xs:NOTATION<BR>QN = xs:QName<BR>str = xs:string<BR>tim = xs:time<BR>gYM = 
  xs:gYearMonth<BR>yMD = xs:yearMonthDuration<BR>gYr = xs:gYear</P></BLOCKQUOTE>
<P>In the following table, the notation "S\T" indicates that the source ("S") of 
the conversion is indicated in the column below the notation and that the target 
("T") is indicated in the row to the right of the notation.</P>
<TABLE class=casting id=casting-to-primitives-table cellPadding=1 
summary="Casting table" border=1>
  <COLGROUP>
  <COL width="5%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <COL width="3%">
  <THEAD>
  <TR>
    <TH><SPAN class=cancast title=S\T>S\T</SPAN></TH>
    <TH><SPAN class=cancast title=untypedAtomic>uA</SPAN></TH>
    <TH><SPAN class=cancast title=string>str</SPAN></TH>
    <TH><SPAN class=cancast title=float>flt</SPAN></TH>
    <TH><SPAN class=cancast title=double>dbl</SPAN></TH>
    <TH><SPAN class=cancast title=decimal>dec</SPAN></TH>
    <TH><SPAN class=cancast title=integer>int</SPAN></TH>
    <TH><SPAN class=cancast title=duration>dur</SPAN></TH>
    <TH><SPAN class=cancast title=yearMonthDuration>yMD</SPAN></TH>
    <TH><SPAN class=cancast title=dayTimeDuration>dTD</SPAN></TH>
    <TH><SPAN class=cancast title=dateTime>dT</SPAN></TH>
    <TH><SPAN class=cancast title=time>tim</SPAN></TH>
    <TH><SPAN class=cancast title=date>dat</SPAN></TH>
    <TH><SPAN class=cancast title=gYearMonth>gYM</SPAN></TH>
    <TH><SPAN class=cancast title=gYear>gYr</SPAN></TH>
    <TH><SPAN class=cancast title=gMonthDay>gMD</SPAN></TH>
    <TH><SPAN class=cancast title=gDay>gDay</SPAN></TH>
    <TH><SPAN class=cancast title=gMonth>gMon</SPAN></TH>
    <TH><SPAN class=cancast title=boolean>bool</SPAN></TH>
    <TH><SPAN class=cancast title=base64Binary>b64</SPAN></TH>
    <TH><SPAN class=cancast title=hexBinary>hxB</SPAN></TH>
    <TH><SPAN class=cancast title=anyURI>aURI</SPAN></TH>
    <TH><SPAN class=cancast title=QName>QN</SPAN></TH>
    <TH><SPAN class=cancast title=NOTATION>NOT</SPAN></TH></TR></THEAD>
  <TBODY>
  <TR>
    <TH><SPAN class=cancast title=untypedAtomic>uA</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to string? Yes">Y</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to float? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to double? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to decimal? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to integer? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to duration? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to yearMonthDuration? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to dayTimeDuration? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to dateTime? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to time? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to date? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to gYearMonth? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to gYear? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to gMonthDay? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to gDay? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to gMonth? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to boolean? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to base64Binary? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to hexBinary? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to anyURI? Maybe">M</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast untypedAtomic to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=string>str</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to string? Yes">Y</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to float? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to double? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to decimal? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to integer? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to duration? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to yearMonthDuration? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to dayTimeDuration? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to dateTime? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to time? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to date? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to gYearMonth? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to gYear? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to gMonthDay? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to gDay? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to gMonth? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to boolean? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to base64Binary? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to hexBinary? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to anyURI? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to QName? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast string to NOTATION? Maybe">M</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=float>flt</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to string? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to float? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to double? Yes">Y</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to decimal? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to integer? Maybe">M</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to gMonth? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to boolean? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast float to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=double>dbl</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to string? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to float? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to double? Yes">Y</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to decimal? Maybe">M</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to integer? Maybe">M</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to gMonth? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to boolean? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast double to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=decimal>dec</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to string? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to float? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to double? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to decimal? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to integer? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to gMonth? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to boolean? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast decimal to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=integer>int</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to string? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to float? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to double? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to decimal? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to integer? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to gMonth? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to boolean? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast integer to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=duration>dur</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to integer? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to duration? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to yearMonthDuration? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to dayTimeDuration? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast duration to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=yearMonthDuration>yMD</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to integer? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to duration? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to yearMonthDuration? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to dayTimeDuration? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast yearMonthDuration to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=dayTimeDuration>dTD</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to integer? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to duration? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to yearMonthDuration? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to dayTimeDuration? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dayTimeDuration to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=dateTime>dT</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to dateTime? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to time? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to date? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to gYearMonth? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to gYear? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to gMonthDay? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to gDay? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to gMonth? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast dateTime to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=time>tim</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to dateTime? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to time? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast time to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=date>dat</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to dateTime? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to time? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to date? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to gYearMonth? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to gYear? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to gMonthDay? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to gDay? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to gMonth? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast date to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=gYearMonth>gYM</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to date? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to gYearMonth? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYearMonth to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=gYear>gYr</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to gYearMonth? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to gYear? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gYear to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=gMonthDay>gMD</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to gYear? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to gMonthDay? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonthDay to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=gDay>gDay</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to gMonthDay? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to gDay? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gDay to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=gMonth>gMon</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to gDay? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to gMonth? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast gMonth to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=boolean>bool</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to string? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to float? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to double? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to decimal? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to integer? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to gMonth? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to boolean? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast boolean to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=base64Binary>b64</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to boolean? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to base64Binary? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to hexBinary? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast base64Binary to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=hexBinary>hxB</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to boolean? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to base64Binary? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to hexBinary? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast hexBinary to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=anyURI>aURI</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to hexBinary? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to anyURI? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to QName? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast anyURI to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=QName>QN</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to anyURI? No">N</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to QName? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast QName to NOTATION? No">N</SPAN></TD></TR>
  <TR>
    <TH><SPAN class=cancast title=NOTATION>NOT</SPAN></TH>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to untypedAtomic? Yes">Y</SPAN></TD>
    <TD class=castY vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to string? Yes">Y</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to float? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to double? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to decimal? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to integer? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to duration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to yearMonthDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to dayTimeDuration? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to dateTime? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to time? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to date? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to gYearMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to gYear? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to gMonthDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to gDay? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to gMonth? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to boolean? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to base64Binary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to hexBinary? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to anyURI? No">N</SPAN></TD>
    <TD class=castN vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to QName? No">N</SPAN></TD>
    <TD class=castM vAlign=center align=middle><SPAN class=cancast 
      title="Cast NOTATION to NOTATION? Maybe">M</SPAN></TD></TR></TBODY></TABLE>
<P>The following sub-sections define the semantics of casting from a primitive 
type to a primitive type. Semantics of casting to and from a derived type are 
defined in sections <A 
href="REC-xpath-functions-20070123.htm#casting-to-derived-types"><B>17.2 
Casting to derived types</B></A>, <A 
href="REC-xpath-functions-20070123.htm#casting-from-derived-to-parent"><B>17.3 
Casting from derived types to parent types</B></A>, <A 
href="REC-xpath-functions-20070123.htm#casting-within-branch"><B>17.4 
Casting within a branch of the type hierarchy</B></A> and <A 
href="REC-xpath-functions-20070123.htm#casting-across-hierarchy"><B>17.5 
Casting across the type hierarchy</B></A>.</P>
<DIV class=div3>
<H4><A id=casting-from-strings name=casting-from-strings></A>17.1.1 Casting from 
xs:string and xs:untypedAtomic</H4>
<P>When the supplied value is an instance of <CODE>xs:string</CODE> or an 
instance of <CODE>xs:untypedAtomic</CODE>, it is treated as being a string value 
and mapped to a typed value of the target type as defined in <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>. Whitespace normalization is 
applied as indicated by the whiteSpace facet for the datatype. The resulting 
whitespace-normalized string must be a valid lexical form for the datatype. The 
semantics of casting are identical to XML Schema validation. For example, 
<CODE>"13" cast as xs:unsignedInt</CODE> returns the <CODE>xs:unsignedInt</CODE> 
typed value <CODE>13</CODE>. This could also be written 
<CODE>xs:unsignedInt("13")</CODE>.</P>
<P>When casting from <CODE>xs:string</CODE> or <CODE>xs:untypedAtomic</CODE> to 
a derived type where the derived type is restricted by a pattern facet, the 
lexical form is first checked against the pattern before further casting is 
attempted (See <A 
href="REC-xpath-functions-20070123.htm#casting-to-derived-types"><B>17.2 
Casting to derived types</B></A>). If the lexical form does not conform to the 
pattern, error [<A title=err:FORG0001 
href="REC-xpath-functions-20070123.htm#ERRFORG0001">err:FORG0001</A>] 
is raised.</P>
<P>Consider a user-defined Schema whose target namespace is bound to the prefix 
<CODE>mySchema</CODE> which defines a restriction of <CODE>xs:boolean</CODE> 
called <CODE>trueBool</CODE> which allows only the lexical forms 
"<CODE>1</CODE>" and "<CODE>0</CODE>". <CODE>"true" cast as 
mySchema:trueBool</CODE> would fail with [<A title=err:FORG0001 
href="REC-xpath-functions-20070123.htm#ERRFORG0001">err:FORG0001</A>]. 
If the Schema also defines a datatype called <CODE>height</CODE> as a 
restriction of <CODE>xs:integer</CODE> with a maximum value of <CODE>84</CODE> 
then <CODE>"100" cast as mySchema:height</CODE> would also fail with [<A 
title=err:FORG0001 
href="REC-xpath-functions-20070123.htm#ERRFORG0001">err:FORG0001</A>].</P>
<P>Casting is permitted from <CODE>xs:string</CODE> and 
<CODE>xs:untypedAtomic</CODE> to any primitive atomic type or any atomic type 
derived by restriction, except <CODE>xs:QName</CODE> or 
<CODE>xs:NOTATION</CODE>. Casting to <CODE>xs:NOTATION</CODE> is not permitted 
because it is an abstract type.</P>
<P>Casting is permitted from <CODE>xs:string</CODE> literals to 
<CODE>xs:QName</CODE> and types derived from <CODE>xs:NOTATION</CODE>. If the 
argument to such a cast is computed dynamically, [<A title=err:XPTY0004 
href="http://www.w3.org/TR/xpath20/#ERRXPTY0004">err:XPTY0004</A>]<SUP><SMALL>XP</SMALL></SUP> 
is raised if the value is of any type other than <CODE>xs:QName</CODE> or 
<CODE>xs:NOTATION</CODE> respectively (including the case where it is an 
<CODE>xs:string</CODE>).</P>
<P>In casting to numerics, if the value is too large or too small to be 
accurately represented by the implementation, it is handled as an overflow or 
underflow as defined in <A 
href="REC-xpath-functions-20070123.htm#op.numeric"><B>6.2 
Operators on Numeric Values</B></A>.</P>
<P>In casting to <CODE>xs:decimal</CODE> or to a type derived from 
<CODE>xs:decimal</CODE>, if the value is not too large or too small but 
nevertheless cannot be represented accurately with the number of decimal digits 
available to the implementation, the implementation may round to the nearest 
representable value or may raise a dynamic error [<A title=err:FOCA0006 
href="REC-xpath-functions-20070123.htm#ERRFOCA0006">err:FOCA0006</A>]. 
The choice of rounding algorithm and the choice between rounding and error 
behavior and is implementation-defined.</P>
<P>In casting to a date or time value, if the value is too large or too small to 
be represented by the implementation, error [<A title=err:FODT0001 
href="REC-xpath-functions-20070123.htm#ERRFODT0001">err:FODT0001</A>] 
is raised.</P>
<P>In casting to a duration value, if the value is too large or too small to be 
represented by the implementation, error [<A title=err:FODT0002 
href="REC-xpath-functions-20070123.htm#ERRFODT0002">err:FODT0002</A>] 
is raised.</P>
<P>For <CODE>xs:anyURI</CODE>, the extent to which an implementation validates 
the lexical form of <CODE>xs:anyURI</CODE> is <A class=termref 
title="implementation dependent" 
href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A>.</P>
<P>If the cast fails for any other reason, error [<A title=err:FORG0001 
href="REC-xpath-functions-20070123.htm#ERRFORG0001">err:FORG0001</A>] 
is raised.</P></DIV>
<DIV class=div3>
<H4><A id=casting-to-string name=casting-to-string></A>17.1.2 Casting to 
xs:string and xs:untypedAtomic</H4>
<P>Casting is permitted from any primitive type to the primitive types 
<CODE>xs:string</CODE> and <CODE>xs:untypedAtomic</CODE>.</P>
<P>When a value of any simple type is cast as <CODE>xs:string</CODE>, the 
derivation of the <CODE>xs:string</CODE> value <EM>TV</EM> depends on the 
<EM>ST</EM> and on the <EM>SV</EM>, as follows.</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:string</CODE> or a type derived from 
  <CODE>xs:string</CODE>, <EM>TV</EM> is <EM>SV</EM>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:anyURI</CODE>, the type conversion is performed 
  without escaping any characters.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:QName</CODE> or <CODE>xs:NOTATION</CODE>:</P>
  <UL>
    <LI>
    <P>if the qualified name has a prefix <EM>TV</EM> is <CODE>(</CODE><A 
    href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat(fn:prefix-from-QName(</CODE></A><EM><CODE> 
    SV</CODE></EM><CODE>)</CODE>, <CODE>":"</CODE>, <A 
    href="REC-xpath-functions-20070123.htm#func-local-name-from-QName"><CODE>fn:local-name-from-QName(</CODE></A><EM> 
    <CODE>SV</CODE></EM><CODE>))</CODE>.</P>
    <LI>
    <P>otherwise <EM>TV</EM> is the local-name.</P></LI></UL>
  <LI>
  <P>If <EM>ST</EM> is a numeric type, the following rules apply:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:integer</CODE>, <EM>TV</EM> is the canonical 
    lexical representation of <EM>SV</EM> as defined in <A 
    href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
    Schema Part 2: Datatypes Second Edition]</A>. There is no decimal point.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:decimal</CODE>, then:</P>
    <UL>
      <LI>
      <P>If <EM>SV</EM> is in the value space of <CODE>xs:integer</CODE>, that 
      is, if there are no significant digits after the decimal point, then the 
      value is converted from an <CODE>xs:decimal</CODE> to an 
      <CODE>xs:integer</CODE> and the resulting <CODE>xs:integer</CODE> is 
      converted to an <CODE>xs:string</CODE> using the rule above.</P>
      <LI>
      <P>Otherwise, the canonical lexical representation of <EM>SV</EM> is 
      returned, as defined in <A 
      href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
      Schema Part 2: Datatypes Second Edition]</A>.</P></LI></UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:float</CODE> or <CODE>xs:double</CODE>, 
    then:</P>
    <UL>
      <LI>
      <P><EM>TV</EM> will be an <CODE>xs:string</CODE> in the lexical space of 
      <CODE>xs:double</CODE> or <CODE>xs:float</CODE> that when converted to an 
      <CODE>xs:double</CODE> or <CODE>xs:float</CODE> under the rules of <A 
      href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
      Casting from xs:string and xs:untypedAtomic</B></A> produces a value that 
      is equal to <EM>SV</EM>, or is "NaN" if <EM>SV</EM> is <CODE>NaN</CODE>. 
      In addition, <EM>TV</EM> must satisfy the constraints in the following 
      sub-bullets.</P>
      <UL>
        <LI>
        <P>If <EM>SV</EM> has an absolute value that is greater than or equal to 
        0.000001 (one millionth) and less than 1000000 (one million), then the 
        value is converted to an <CODE>xs:decimal</CODE> and the resulting 
        <CODE>xs:decimal</CODE> is converted to an <CODE>xs:string</CODE> 
        according to the rules above, as though using an implementation of 
        <CODE>xs:decimal</CODE> that imposes no limits on the 
        <CODE>totalDigits</CODE> or <CODE>fractionDigits</CODE> facets.</P>
        <LI>
        <P>If <EM>SV</EM> has the value positive or negative zero, <EM>TV</EM> 
        is "0" or "-0" respectively.</P>
        <LI>
        <P>If <EM>SV</EM> is positive or negative infinity, <EM>TV</EM> is the 
        string "<CODE>INF</CODE>" or "<CODE>-INF</CODE>" respectively.</P>
        <LI>
        <P>In other cases, the result consists of a mantissa, which has the 
        lexical form of an <CODE>xs:decimal</CODE>, followed by the letter "E", 
        followed by an exponent which has the lexical form of an 
        <CODE>xs:integer</CODE>. Leading zeroes and "+" signs are prohibited in 
        the exponent. For the mantissa, there must be a decimal point, and there 
        must be exactly one digit before the decimal point, which must be 
        non-zero. The "+" sign is prohibited. There must be at least one digit 
        after the decimal point. Apart from this mandatory digit, trailing zero 
        digits are prohibited.</P></LI></UL></LI></UL>
    <DIV class=note>
    <P class=prefix><B>Note:</B></P>
    <P>The above rules allow more than one representation of the same value. For 
    example, the <CODE>xs:float</CODE> value whose exact decimal representation 
    is 1.26743223E15 might be represented by any of the strings "1.26743223E15", 
    "1.26743222E15" or "1.26743224E15" (inter alia). It is 
    implementation-dependent which of these representations is 
    chosen.</P></DIV></LI></UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, <CODE>xs:date</CODE> or 
  <CODE>xs:time</CODE>, <EM>TV</EM> is the local value. The components of 
  <EM>TV</EM> are individually cast to <CODE>xs:string</CODE> using the 
  functions described in <A 
  href="REC-xpath-functions-20070123.htm#casting-to-datetimes">[casting-to-datetimes]</A> 
  and the results are concatenated together. The <CODE>year</CODE> component is 
  cast to <CODE>xs:string</CODE> using <CODE>eg:convertYearToString</CODE>. The 
  <CODE>month</CODE>, <CODE>day</CODE>, <CODE>hour</CODE> and 
  <CODE>minute</CODE> components are cast to <CODE>xs:string</CODE> using 
  <CODE>eg:convertTo2CharString</CODE>. The <CODE>second</CODE> component is 
  cast to <CODE>xs:string</CODE> using <CODE>eg:convertSecondsToString</CODE>. 
  The timezone component, if present, is cast to <CODE>xs:string</CODE> using 
  <CODE>eg:convertTZtoString</CODE>.</P>
  <P>Note that the hours component of the resulting string will never be 
  <CODE>"24"</CODE>. Midnight is always represented as 
  <CODE>"00:00:00"</CODE>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:yearMonthDuration</CODE> or 
  <CODE>xs:dayTimeDuration</CODE>, <EM>TV</EM> is the canonical representation 
  of <EM>SV</EM> as defined in <A 
  href="REC-xpath-functions-20070123.htm#dt-yearMonthDuration"><B>10.3.1 
  xs:yearMonthDuration</B></A> or <A 
  href="REC-xpath-functions-20070123.htm#dt-dayTimeDuration"><B>10.3.2 
  xs:dayTimeDuration</B></A>, respectively.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:duration</CODE> then let <EM>SYM</EM> be 
  <EM><CODE>SV</CODE></EM> <CODE>cast as xs:yearMonthDuration</CODE>, and let 
  <EM>SDT</EM> be <EM><CODE>SV</CODE></EM> <CODE>cast as 
  xs:dayTimeDuration</CODE>; Now, let the next intermediate value, <EM>TYM</EM>, 
  be <EM><CODE>SYM</CODE></EM> <CODE>cast as</CODE> <EM><CODE>TT</CODE></EM>, 
  and let <EM>TDT</EM> be <EM><CODE>SDT</CODE></EM> <CODE>cast as</CODE> 
  <EM><CODE>TT</CODE></EM>. If <EM>TYM</EM> is "P0M", then <EM>TV</EM> is 
  <EM>TDT</EM>. Otherwise, <EM>TYM</EM> and <EM>TDT</EM> are merged according to 
  the following rules:</P>
  <OL class=enumar>
    <LI>
    <P>If <EM>TDT</EM> is "PT0S", then <EM>TV</EM> is <EM>TYM</EM>.</P>
    <LI>
    <P>Otherwise, <EM>TV</EM> is the concatenation of all the characters in 
    <EM>TYM</EM> and all the characters except the first "P" and the optional 
    negative sign in <EM>TDT</EM>.</P></LI></OL>
  <LI>
  <P>In all other cases, <EM>TV</EM> is the <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> canonical representation of 
  <EM>SV</EM>. For datatypes that do not have a canonical lexical representation 
  defined an <A class=termref title="implementation dependent" 
  href="REC-xpath-functions-20070123.htm#implementation-dependent"><SPAN 
  class=arrow>·</SPAN>implementation dependent<SPAN class=arrow>·</SPAN></A> 
  canonical representation may be used.</P></LI></UL>
<P>To cast as <CODE>xs:untypedAtomic</CODE> the value is cast as 
<CODE>xs:string</CODE>, as described above, and the type annotation changed to 
<CODE>xs:untypedAtomic</CODE>.</P>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>The string representations of numeric values are backwards compatible with 
XPath 1.0 except for the special values positive and negative infinity, negative 
zero and values outside the range <CODE>1.0e-6</CODE> to 
<CODE>1.0e+6</CODE>.</P></DIV></DIV>
<DIV class=div3>
<H4><A id=casting-to-numerics name=casting-to-numerics></A>17.1.3 Casting to 
numeric types</H4>
<DIV class=div4>
<H5><A id=casting-to-float name=casting-to-float></A>17.1.3.1 Casting to 
xs:float</H5>
<P>When a value of any simple type is cast as <CODE>xs:float</CODE>, the 
<CODE>xs:float</CODE> <EM>TV</EM> is derived from the <EM>ST</EM> and the 
<EM>SV</EM> as follows:</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:float</CODE>, then <EM>TV</EM> is <EM>SV</EM> 
  and the conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:double</CODE>, then <EM>TV</EM> is obtained as 
  follows:</P>
  <UL>
    <LI>
    <P>if <EM>SV</EM> is the <CODE>xs:double</CODE> value <CODE>INF</CODE>, 
    <CODE>-INF</CODE>, <CODE>NaN</CODE>, positive zero, or negative zero, then 
    <EM>TV</EM> is the <CODE>xs:float</CODE> value <CODE>INF</CODE>, 
    <CODE>-INF</CODE>, <CODE>NaN</CODE>, positive zero, or negative zero 
    respectively.</P>
    <LI>
    <P>otherwise, <EM>SV</EM> can be expressed in the form <CODE>m × 2^e</CODE> 
    where the mantissa <CODE>m</CODE> and exponent <CODE>e</CODE> are signed 
    <CODE>xs:integer</CODE>s whose value range is defined in <A 
    href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
    Schema Part 2: Datatypes Second Edition]</A>, and the following rules 
    apply:</P>
    <UL>
      <LI>
      <P>if <CODE>m</CODE> (the mantissa of <EM>SV</EM>) is outside the 
      permitted range for the mantissa of an <CODE>xs:float</CODE> value 
      <CODE>(-2^24-1 to +2^24-1)</CODE>, then it is divided by <CODE>2^N</CODE> 
      where <CODE>N</CODE> is the lowest positive <CODE>xs:integer</CODE> that 
      brings the result of the division within the permitted range, and the 
      exponent <CODE>e</CODE> is increased by <CODE>N</CODE>. This is integer 
      division (in effect, the binary value of the mantissa is truncated on the 
      right). Let <CODE>M</CODE> be the mantissa and <CODE>E</CODE> the exponent 
      after this adjustment.</P>
      <LI>
      <P>if <CODE>E</CODE> exceeds <CODE>104</CODE> (the maximum exponent value 
      in the value space of <CODE>xs:float</CODE>) then <EM>TV</EM> is the 
      <CODE>xs:float</CODE> value <CODE>INF</CODE> or <CODE>-INF</CODE> 
      depending on the sign of <CODE>M</CODE>.</P>
      <LI>
      <P>if <CODE>E</CODE> is less than <CODE>-149</CODE> (the minimum exponent 
      value in the value space of <CODE>xs:float</CODE>) then <EM>TV</EM> is the 
      <CODE>xs:float</CODE> value positive or negative zero depending on the 
      sign of <CODE>M</CODE></P>
      <LI>
      <P>otherwise, <EM>TV</EM> is the <CODE>xs:float</CODE> value <CODE>M × 
      2^E</CODE>.</P></LI></UL></LI></UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:decimal</CODE>, or <CODE>xs:integer</CODE>, then 
  <EM>TV</EM> is <CODE>xs:float(</CODE> <EM>SV</EM> <CODE>cast as 
  xs:string)</CODE> and the conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:boolean</CODE>, <EM>SV</EM> is converted to 
  <CODE>1.0E0</CODE> if <EM>SV</EM> is <CODE>true</CODE> and to 
  <CODE>0.0E0</CODE> if <EM>SV</EM> is <CODE>false</CODE> and the conversion is 
  complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE>, 
  see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>Implementations <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> return negative zero for 
<CODE>"-0.0E0" cast as xs:float</CODE>. <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> does not distinguish between the 
values positive zero and negative zero.</P></DIV></DIV>
<DIV class=div4>
<H5><A id=casting-to-double name=casting-to-double></A>17.1.3.2 Casting to 
xs:double</H5>
<P>When a value of any simple type is cast as <CODE>xs:double</CODE>, the 
<CODE>xs:double</CODE> value <EM>TV</EM> is derived from the <EM>ST</EM> and the 
<EM>SV</EM> as follows:</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:double</CODE>, then <EM>TV</EM> is <EM>SV</EM> 
  and the conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:float</CODE> or a type derived from 
  <CODE>xs:float</CODE>, then <EM>TV</EM> is obtained as follows:</P>
  <UL>
    <LI>
    <P>if <EM>SV</EM> is the <CODE>xs:float</CODE> value <CODE>INF</CODE>, 
    <CODE>-INF</CODE>, <CODE>NaN</CODE>, positive zero, or negative zero, then 
    <EM>TV</EM> is the <CODE>xs:double</CODE> value <CODE>INF</CODE>, 
    <CODE>-INF</CODE>, <CODE>NaN</CODE>, positive zero, or negative zero 
    respectively.</P>
    <LI>
    <P>otherwise, <EM>SV</EM> can be expressed in the form <CODE>m × 2^e</CODE> 
    where the mantissa <CODE>m</CODE> and exponent <CODE>e</CODE> are signed 
    <CODE>xs:integer</CODE> values whose value range is defined in <A 
    href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
    Schema Part 2: Datatypes Second Edition]</A>, and <EM>TV</EM> is the 
    <CODE>xs:double</CODE> value <CODE>m × 2^e</CODE>.</P></LI></UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:decimal</CODE> or <CODE>xs:integer</CODE>, then 
  <EM>TV</EM> is <CODE>xs:double(</CODE> <EM>SV</EM> <CODE>cast as 
  xs:string)</CODE> and the conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:boolean</CODE>, <EM>SV</EM> is converted to 
  <CODE>1.0E0</CODE> if <EM>SV</EM> is <CODE>true</CODE> and to 
  <CODE>0.0E0</CODE> if <EM>SV</EM> is <CODE>false</CODE> and the conversion is 
  complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE>, 
  see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
<DIV class=note>
<P class=prefix><B>Note:</B></P>
<P>Implementations <A class=termref title=may 
href="REC-xpath-functions-20070123.htm#may"><SPAN 
class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> return negative zero for 
<CODE>"-0.0E0" cast as xs:double</CODE>. <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> does not distinguish between the 
values positive zero and negative zero.</P></DIV></DIV>
<DIV class=div4>
<H5><A id=casting-to-decimal name=casting-to-decimal></A>17.1.3.3 Casting to 
xs:decimal</H5>
<P>When a value of any simple type is cast as <CODE>xs:decimal</CODE>, the 
<CODE>xs:decimal</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
<EM>SV</EM> as follows:</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:decimal</CODE>, <CODE>xs:integer</CODE> or a 
  type derived from them, then <EM>TV</EM> is <EM>SV</EM>, converted to an 
  <CODE>xs:decimal</CODE> value if need be, and the conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:float</CODE> or <CODE>xs:double</CODE>, then 
  <EM>TV</EM> is the <CODE>xs:decimal</CODE> value, within the set of 
  <CODE>xs:decimal</CODE> values that the implementation is capable of 
  representing, that is numerically closest to <EM>SV</EM>. If two values are 
  equally close, then the one that is closest to zero is chosen. If <EM>SV</EM> 
  is too large to be accommodated as an <CODE>xs:decimal</CODE>, (see <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> for <A class=termref 
  title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  limits on numeric values) an error is raised [<A title=err:FOCA0001 
  href="REC-xpath-functions-20070123.htm#ERRFOCA0001">err:FOCA0001</A>]. 
  If <EM>SV</EM> is one of the special <CODE>xs:float</CODE> or 
  <CODE>xs:double</CODE> values <CODE>NaN</CODE>, <CODE>INF</CODE>, or 
  <CODE>-INF</CODE>, an error is raised [<A title=err:FOCA0002 
  href="REC-xpath-functions-20070123.htm#ERRFOCA0002">err:FOCA0002</A>].</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:boolean</CODE>, <EM>SV</EM> is converted to 
  <CODE>1.0</CODE> if <EM>SV</EM> is <CODE>1</CODE> or <CODE>true</CODE> and to 
  <CODE>0.0</CODE> if <EM>SV</EM> is <CODE>0</CODE> or <CODE>false</CODE> and 
  the conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE>, 
  see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL></DIV>
<DIV class=div4>
<H5><A id=casting-to-integer name=casting-to-integer></A>17.1.3.4 Casting to 
xs:integer</H5>
<P>When a value of any simple type is cast as <CODE>xs:integer</CODE>, the 
<CODE>xs:integer</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
<EM>SV</EM> as follows:</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:integer</CODE>, or a type derived from 
  <CODE>xs:integer</CODE>, then <EM>TV</EM> is <EM>SV</EM>, converted to an 
  <CODE>xs:integer</CODE> value if need be, and the conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:decimal</CODE>, <CODE>xs:float</CODE> or 
  <CODE>xs:double</CODE>, then <EM>TV</EM> is <EM>SV</EM> with the fractional 
  part discarded and the value converted to <CODE>xs:integer</CODE>. Thus, 
  casting <CODE>3.1456</CODE> returns <CODE>3</CODE> and <CODE>-17.89</CODE> 
  returns <CODE>-17</CODE>. Casting <CODE>3.124E1</CODE> returns 
  <CODE>31</CODE>. If <EM>SV</EM> is too large to be accommodated as an integer, 
  (see <A 
  href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
  Schema Part 2: Datatypes Second Edition]</A> for <A class=termref 
  title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  limits on numeric values) an error is raised [<A title=err:FOCA0003 
  href="REC-xpath-functions-20070123.htm#ERRFOCA0003">err:FOCA0003</A>]. 
  If <EM>SV</EM> is one of the special <CODE>xs:float</CODE> or 
  <CODE>xs:double</CODE> values <CODE>NaN</CODE>, <CODE>INF</CODE>, or 
  <CODE>-INF</CODE>, an error is raised [<A title=err:FOCA0002 
  href="REC-xpath-functions-20070123.htm#ERRFOCA0002">err:FOCA0002</A>].</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:boolean</CODE>, <EM>SV</EM> is converted to 
  <CODE>1</CODE> if <EM>SV</EM> is <CODE>1</CODE> or <CODE>true</CODE> and to 
  <CODE>0</CODE> if <EM>SV</EM> is <CODE>0</CODE> or <CODE>false</CODE> and the 
  conversion is complete.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE>, 
  see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL></DIV></DIV>
<DIV class=div3>
<H4><A id=casting-to-durations name=casting-to-durations></A>17.1.4 Casting to 
duration types</H4>
<P>When a value of type <CODE>xs:untypedAtomic</CODE>, <CODE>xs:string</CODE>, a 
type derived from <CODE>xs:string</CODE>, <CODE>xs:yearMonthDuration</CODE> or 
<CODE>xs:dayTimeDuration</CODE> is cast as <CODE>xs:duration</CODE>, 
<CODE>xs:yearMonthDuration</CODE> or <CODE>xs:dayTimeDuration</CODE>, 
<EM>TV</EM> is derived from <EM>ST</EM> and <EM>SV</EM> as follows:</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is the same as <EM>TT</EM>, then <EM>TV</EM> is 
  <EM>SV</EM>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:duration</CODE>, or a type derived from 
  <CODE>xs:duration</CODE>, but not <CODE>xs:dayTimeDuration</CODE> or a type 
  derived from <CODE>xs:dayTimeDuration</CODE>, and <EM>TT</EM> is 
  <CODE>xs:yearMonthDuration</CODE>, then <EM>TV</EM> is derived from 
  <EM>SV</EM> by removing the day, hour, minute and second components from 
  <EM>SV</EM>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:duration</CODE>, or a type derived from 
  <CODE>duration</CODE>, but not <CODE>xs:yearMonthDuration</CODE> or a type 
  derived from <CODE>xs:yearMonthDuration</CODE>, and <EM>TT</EM> is 
  <CODE>xs:dayTimeDuration</CODE>, then <EM>TV</EM> is derived from <EM>SV</EM> 
  by removing the year and month components from <EM>SV</EM>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:yearMonthDuration</CODE> or 
  <CODE>xs:dayTimeDuration</CODE>, and <EM>TT</EM> is <CODE>xs:duration</CODE>, 
  then <EM>TV</EM> is derived from <EM>SV</EM> as discussed in <A 
  href="REC-xpath-functions-20070123.htm#casting-from-derived-to-parent"><B>17.3 
  Casting from derived types to parent types</B></A>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:yearMonthDuration</CODE> and <EM>TT</EM> is 
  <CODE>xs:dayTimeDuration</CODE>, the cast is permitted and returns a 
  <CODE>xs:dayTimeDuration</CODE> with value 0.0 seconds.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:dayTimeDuration</CODE> and <EM>TT</EM> is 
  <CODE>xs:yearMonthDuration</CODE>, the cast is permitted and returns a 
  <CODE>xs:yearMonthDuration</CODE> with value 0 months.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE>, 
  see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
<P>Note that casting from <CODE>xs:duration</CODE> to 
<CODE>xs:yearMonthDuration</CODE> or <CODE>xs:dayTimeDuration</CODE> loses 
information. To avoid this, users can cast the <CODE>xs:duration</CODE> value to 
both an <CODE>xs:yearMonthDuration</CODE> and an <CODE>xs:dayTimeDuration</CODE> 
and work with both values.</P></DIV>
<DIV class=div3>
<H4><A id=casting-to-datetimes name=casting-to-datetimes></A>17.1.5 Casting to 
date and time types</H4>
<P>In several situations, casting to date and time types requires the extraction 
of a component from <EM>SV</EM> or from the result of <A 
href="REC-xpath-functions-20070123.htm#func-current-dateTime"><CODE>fn:current-dateTime</CODE></A> 
and converting it to an <CODE>xs:string</CODE>. These conversions must follow 
certain rules. For example, converting an <CODE>xs:integer</CODE> year value 
requires converting to an <CODE>xs:string</CODE> with four or more characters, 
preceded by a minus sign if the value is negative.</P>
<P>This document defines four functions to perform these conversions. These 
functions are for illustrative purposes only and make no recommendations as to 
style or efficiency. References to these functions from the following text are 
not normative.</P>
<P>The arguments to these functions come from functions defined in this 
document. Thus, the functions below assume that they are correct and do no range 
checking on them.</P>
<DIV class=exampleInner><PRE>declare function eg:convertYearToString($year as xs:integer) as xs:string
{
   let $plusMinus := if ($year &gt;= 0) then "" else "-"
   let $yearString := fn:abs($year) cast as xs:string
   let $length := fn:length($yearString)
   return
     if ($length = 1)  then fn:concat($plusMinus, "000", $yearString)
     else
     if ($length = 2)  then fn:concat($plusMinus, "00", $yearString)
       else
       if ($length = 3)  then fn:concat($plusMinus, "0", $yearString)
       else fn:concat($plusMinus, $yearString)
}
                    
</PRE></DIV>
<DIV class=exampleInner><PRE>declare function eg:convertTo2CharString($value as xs:integer) as xs:string
{
   let $string := $value cast as xs:string
   return 
     if (fn:length($string) = 1) then fn:concat("0", $string)
     else $string
}
                    
</PRE></DIV>
<DIV class=exampleInner><PRE>declare function eg:convertSecondsToString($seconds as xs:decimal) as xs:string
{
   let $string := $seconds cast as xs:string
   let $intLength := fn:length(($seconds cast as xs:integer) cast as xs:string)
   return 
     if ($intLength = 1) then fn:concat("0", $string)
     else $string
}
                    
</PRE></DIV>
<DIV class=exampleInner><PRE>declare function eg:convertTZtoString($tz as xs:dayTimeDuration?) as xs:string
{
   if (empty($tz)) then ""
   else 
     let $tzh := fn:hours-from-dayTimeDuration($tz)
     let $tzm := fn:minutes-from-dayTimeDuration($tz)
     let $plusMinus := if ($tzh &gt;= 0) then "+" else "-"
     let $tzhString := eg:convertTo2CharString(fn:abs($tzh))
     let $tzmString := eg:convertTo2CharString(fn:abs($tzm))
     return fn:concat($plusMinus, $tzhString, ":", $tzmString)
}

                    
</PRE></DIV>
<P>Conversion from primitive types to date and time types follows the rules 
below.</P>
<OL class=enumar>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:dateTime</CODE>, the 
  <CODE>xs:dateTime</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
  <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:date</CODE>, then let <EM>SYR</EM> be 
    <CODE>eg:convertYearToString( fn:year-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>, let <EM>SMO</EM> be <CODE>eg:convertTo2CharString( 
    fn:month-from-date(</CODE> <EM>SV</EM> <CODE>))</CODE>, let <EM>SDA</EM> be 
    <CODE>eg:convertTo2CharString( fn:day-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE> and let <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-date(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> is 
    <CODE>xs:dateTime( fn:concat(</CODE> <EM>SYR</EM> <CODE>, '-',</CODE> 
    <EM>SMO</EM> <CODE>, '-',</CODE> <EM>SDA</EM> <CODE>, 'T00:00:00 '</CODE>, 
    <EM>STZ</EM> <CODE>) )</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:time</CODE>, the 
  <CODE>xs:time</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
  <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:time</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, then <EM>TV</EM> is 
    <CODE>xs:time( fn:concat( eg:convertTo2CharString( 
    fn:hours-from-dateTime(</CODE> <EM>SV</EM> <CODE>)), ':', 
    eg:convertTo2CharString( fn:minutes-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>)), ':', eg:convertSecondsToString( fn:seconds-from-dateTime(</CODE> 
    <EM>SV</EM> <CODE>)), eg:convertTZtoString( 
    fn:timezone-from-dateTime(</CODE> <EM>SV</EM> <CODE>)) ))</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:date</CODE>, the 
  <CODE>xs:date</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
  <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:date</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, then let <EM>SYR</EM> be 
    <CODE>eg:convertYearToString( fn:year-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>, let <EM>SMO</EM> be <CODE>eg:convertTo2CharString( 
    fn:month-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE>, let <EM>SDA</EM> 
    be <CODE>eg:convertTo2CharString( fn:day-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE> and let <EM>STZ</EM> be 
    <CODE>eg:convertTZtoString(fn:timezone-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>; <EM>TV</EM> is <CODE>xs:date( fn:concat(</CODE> 
    <EM>SYR</EM> <CODE>, '-',</CODE> <EM>SMO</EM> <CODE>, '-',</CODE> 
    <EM>SDA</EM>, <EM>STZ</EM> <CODE>) )</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:gYearMonth</CODE>, 
  the <CODE>xs:gYearMonth</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> 
  and <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:gYearMonth</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, then let <EM>SYR</EM> be 
    <CODE>eg:convertYearToString( fn:year-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>, let <EM>SMO</EM> be <CODE>eg:convertTo2CharString( 
    fn:month-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE> and let 
    <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> 
    is <CODE>xs:gYearMonth( fn:concat(</CODE> <EM>SYR</EM> <CODE>, '-',</CODE> 
    <EM>SMO</EM>, <EM>STZ</EM> <CODE>) )</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:date</CODE>, then let <EM>SYR</EM> be 
    <CODE>eg:convertYearToString( fn:year-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>, let <EM>SMO</EM> be <CODE>eg:convertTo2CharString( 
    fn:month-from-date(</CODE> <EM>SV</EM> <CODE>))</CODE> and let <EM>STZ</EM> 
    be <CODE>eg:convertTZtoString( fn:timezone-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>; <EM>TV</EM> is <CODE>xs:gYearMonth( fn:concat(</CODE> 
    <EM>SYR</EM> <CODE>, '-',</CODE> <EM>SMO</EM>, <EM>STZ</EM> <CODE>) 
    )</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:gYear</CODE>, the 
  <CODE>xs:gYear</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
  <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:gYear</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, let <EM>SYR</EM> be 
    <CODE>eg:convertYearToString( fn:year-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE> and let <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> 
    is <CODE>xs:gYear(fn:concat(</CODE> <EM>SYR</EM>, <EM>STZ</EM> 
    <CODE>))</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:date</CODE>, let <EM>SYR</EM> be 
    <CODE>eg:convertYearToString( fn:year-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>; and let <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-date(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> is 
    <CODE>xs:gYear(fn:concat(</CODE> <EM>SYR</EM>, <EM>STZ</EM> 
    <CODE>))</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:gMonthDay</CODE>, 
  the <CODE>xs:gMonthDay</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> 
  and <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:gMonthDay</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, then let <EM>SMO</EM> be 
    <CODE>eg:convertTo2CharString( fn:month-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>, let <EM>SDA</EM> be <CODE>eg:convertTo2CharString( 
    fn:day-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE> and let 
    <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> 
    is <CODE>xs:gYearMonth( fn:concat(</CODE> <CODE>'--',</CODE> <EM>SMO</EM> 
    <CODE>'-',</CODE> <EM>SDA</EM>, <EM>STZ</EM> <CODE>) )</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:date</CODE>, then let <EM>SMO</EM> be 
    <CODE>eg:convertTo2CharString( fn:month-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>, let <EM>SDA</EM> be <CODE>eg:convertTo2CharString( 
    fn:day-from-date(</CODE> <EM>SV</EM> <CODE>))</CODE> and let <EM>STZ</EM> be 
    <CODE>eg:convertTZtoString( fn:timezone-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE>; <EM>TV</EM> is <CODE>xs:gYearMonth( fn:concat(</CODE> 
    <CODE>'--',</CODE> <EM>SMO</EM> <CODE>, '-',</CODE> <EM>SDA</EM>, 
    <EM>STZ</EM> <CODE>) )</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:gDay</CODE>, the 
  <CODE>xs:gDay</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
  <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:gDay</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, then let <EM>SDA</EM> be 
    <CODE>eg:convertTo2CharString( fn:day-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE> and let <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> 
    is <CODE>xs:gDay( fn:concat( '---'</CODE>, <EM>SDA</EM>, <EM>STZ</EM> 
    <CODE>))</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:date</CODE>, then let <EM>SDA</EM> be 
    <CODE>eg:convertTo2CharString( fn:day-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE> and let <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-date(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> is 
    <CODE>xs:gDay( fn:concat( '---'</CODE>, <EM>SDA</EM>, <EM>STZ</EM> 
    <CODE>))</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL>
  <LI>
  <P>When a value of any primitive type is cast as <CODE>xs:gMonth</CODE>, the 
  <CODE>xs:gMonth</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
  <EM>SV</EM> as follows:</P>
  <UL>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:gMonth</CODE>, then <EM>TV</EM> is 
    <EM>SV</EM>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:dateTime</CODE>, then let <EM>SMO</EM> be 
    <CODE>eg:convertTo2CharString( fn:month-from-dateTime(</CODE> <EM>SV</EM> 
    <CODE>))</CODE> and let <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-dateTime(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> 
    is <CODE>xs:gMonth( fn:concat( '--'</CODE> , <EM>SMO</EM>, <EM>STZ</EM> 
    <CODE>))</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:date</CODE>, then let <EM>SMO</EM> be 
    <CODE>eg:convertTo2CharString( fn:month-from-date(</CODE> <EM>SV</EM> 
    <CODE>))</CODE> and let <EM>STZ</EM> be <CODE>eg:convertTZtoString( 
    fn:timezone-from-date(</CODE> <EM>SV</EM> <CODE>))</CODE>; <EM>TV</EM> is 
    <CODE>xs:gMonth( fn:concat( '--'</CODE>, <EM>SMO</EM>, <EM>STZ</EM> 
    <CODE>))</CODE>.</P>
    <LI>
    <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or 
    <CODE>xs:string</CODE>, see <A 
    href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
    Casting from xs:string and 
xs:untypedAtomic</B></A>.</P></LI></UL></LI></OL></DIV>
<DIV class=div3>
<H4><A id=casting-boolean name=casting-boolean></A>17.1.6 Casting to 
xs:boolean</H4>
<P>When a value of any primitive type is cast as <CODE>xs:boolean</CODE>, the 
<CODE>xs:boolean</CODE> value <EM>TV</EM> is derived from <EM>ST</EM> and 
<EM>SV</EM> as follows:</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:boolean</CODE>, then <EM>TV</EM> is 
  <EM>SV</EM>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:float</CODE>, <CODE>xs:double</CODE>, 
  <CODE>xs:decimal</CODE> or <CODE>xs:integer</CODE> and <EM>SV</EM> is 
  <CODE>0</CODE>, <CODE>+0</CODE>, <CODE>-0</CODE>, <CODE>0.0</CODE>, 
  <CODE>0.0E0</CODE> or <CODE>NaN</CODE>, then <EM>TV</EM> is 
  <CODE>false</CODE>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:float</CODE>, <CODE>xs:double</CODE>, 
  <CODE>xs:decimal</CODE> or <CODE>xs:integer</CODE> and <EM>SV</EM> is not one 
  of the above values, then <EM>TV</EM> is <CODE>true</CODE>.</P>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE>, 
  see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL></DIV>
<DIV class=div3>
<H4><A id=casting-to-binary name=casting-to-binary></A>17.1.7 Casting to 
xs:base64Binary and xs:hexBinary</H4>
<P>Values of type <CODE>xs:base64Binary</CODE> can be cast as 
<CODE>xs:hexBinary</CODE> and vice versa, since the two types have the same 
value space. Casting to <CODE>xs:base64Binary</CODE> and 
<CODE>xs:hexBinary</CODE> is also supported from the same type and from 
<CODE>xs:untypedAtomic</CODE>, <CODE>xs:string</CODE> and subtypes of 
<CODE>xs:string</CODE> using <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> semantics.</P></DIV>
<DIV class=div3>
<H4><A id=casting-to-anyuri name=casting-to-anyuri></A>17.1.8 Casting to 
xs:anyURI</H4>
<P>Casting to <CODE>xs:anyURI</CODE> is supported only from the same type, 
<CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE>.</P>
<P>When a value of any primitive type is cast as <CODE>xs:anyURI</CODE>, the 
<CODE>xs:anyURI</CODE> value <EM>TV</EM> is derived from the <EM>ST</EM> and 
<EM>SV</EM> as follows:</P>
<UL>
  <LI>
  <P>If <EM>ST</EM> is <CODE>xs:untypedAtomic</CODE> or <CODE>xs:string</CODE> 
  see <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P></LI></UL></DIV></DIV>
<DIV class=div2>
<H3><A id=casting-to-derived-types name=casting-to-derived-types></A>17.2 
Casting to derived types</H3>
<P>Casting a value to a derived type can be separated into four cases. Note that 
<CODE>xs:untypedAtomic</CODE>, <CODE>xs:integer</CODE> and the two derived types 
of <CODE>xs:duration</CODE>:<CODE>xs:yearMonthDuration</CODE> and 
<CODE>xs:dayTimeDuration</CODE> are treated as primitive types.</P>
<OL class=enumar>
  <LI>
  <P>When <EM>SV</EM> is an instance of a type that is derived by restriction 
  from <EM>TT</EM>. This is described in section <A 
  href="REC-xpath-functions-20070123.htm#casting-from-derived-to-parent"><B>17.3 
  Casting from derived types to parent types</B></A>.</P>
  <LI>
  <P>When <EM>SV</EM> is an instance of a type derived by restriction from the 
  same primitive type as <EM>TT</EM>. This is described in <A 
  href="REC-xpath-functions-20070123.htm#casting-within-branch"><B>17.4 
  Casting within a branch of the type hierarchy</B></A>.</P>
  <LI>
  <P>When the derived type is derived, directly or indirectly, from a different 
  primitive type than the primitive type of <EM>ST</EM>. This is described in <A 
  href="REC-xpath-functions-20070123.htm#casting-across-hierarchy"><B>17.5 
  Casting across the type hierarchy</B></A>.</P>
  <LI>
  <P>When <EM>SV</EM> is an instance of the <EM>TT</EM>, the cast always 
  succeeds (Identity cast).</P></LI></OL></DIV>
<DIV class=div2>
<H3><A id=casting-from-derived-to-parent 
name=casting-from-derived-to-parent></A>17.3 Casting from derived types to 
parent types</H3>
<P>Except in the case of <CODE>xs:NOTATION</CODE>, it is always possible to cast 
a value of any atomic type to an atomic type from which it is derived, directly 
or indirectly, by restriction. For example, it is possible to cast an 
<CODE>xs:unsignedShort</CODE> to an <CODE>xs:unsignedInt</CODE>, an 
<CODE>xs:integer</CODE>, or an <CODE>xs:decimal</CODE>. Since the value space of 
the original type is a subset of the value space of the target type, such a cast 
is always successful. The result will have the same value as the original, but 
will have a new type annotation.</P></DIV>
<DIV class=div2>
<H3><A id=casting-within-branch name=casting-within-branch></A>17.4 Casting 
within a branch of the type hierarchy</H3>
<P>It is possible to cast an <EM>SV</EM> to a <EM>TT</EM> if the type of the 
<EM>SV</EM> and the <EM>TT</EM> type are both derived by restriction (directly 
or indirectly) from the same primitive type, provided that the supplied value 
conforms to the constraints implied by the facets of the target type. This 
includes the case where the target type is derived from the type of the supplied 
value, as well as the case where the type of the supplied value is derived from 
the target type. For example, an instance of <CODE>xs:byte</CODE> can be cast as 
<CODE>xs:unsignedShort</CODE>, provided the value is not negative.</P>
<P>If the value does not conform to the facets defined for the target type, then 
an error is raised [<A title=err:FORG0001 
href="REC-xpath-functions-20070123.htm#ERRFORG0001">err:FORG0001</A>]. 
See <A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A>. In the case of the pattern facet 
(which applies to the lexical space rather than the value space), the pattern is 
tested against the canonical lexical representation of the value, as defined for 
the source type (or the result of casting the value to an 
<CODE>xs:string</CODE>, in the case of types that have no canonical lexical 
representation defined for them).</P>
<P>Note that this will cause casts to fail if the pattern excludes the canonical 
lexical representation of the source type. For example, if the type 
<CODE>my:distance</CODE> is defined as a restriction of <CODE>xs:decimal</CODE> 
with a pattern that requires two digits after the decimal point, casting of an 
<CODE>xs:integer</CODE> to <CODE>my:distance</CODE> will always fail, because 
the canonical representation of an <CODE>xs:integer</CODE> does not conform to 
this pattern.</P>
<P>In some cases, casting from a parent type to a derived type requires special 
rules. See <A 
href="REC-xpath-functions-20070123.htm#casting-to-durations"><B>17.1.4 
Casting to duration types</B></A> for rules regarding casting to 
<CODE>xs:yearMonthDuration</CODE> and <CODE>xs:dayTimeDuration</CODE>. See <A 
href="REC-xpath-functions-20070123.htm#casting-to-ENTITY"><B>17.4.1 
Casting to xs:ENTITY</B></A>, below, for casting to <CODE>xs:ENTITY</CODE> and 
types derived from it.</P>
<DIV class=div3>
<H4><A id=casting-to-ENTITY name=casting-to-ENTITY></A>17.4.1 Casting to 
xs:ENTITY</H4>
<P><A 
href="REC-xpath-functions-20070123.htm#xmlschema-2">[XML 
Schema Part 2: Datatypes Second Edition]</A> says that "The value space of 
ENTITY is the set of all strings that match the NCName production ... and have 
been declared as an unparsed entity in a document type definition." However, <A 
href="REC-xpath-functions-20070123.htm#xslt20">[XSL 
Transformations (XSLT) Version 2.0]</A> and <A 
href="REC-xpath-functions-20070123.htm#xquery">[XQuery 
1.0: An XML Query Language]</A> do not check that constructed values of type 
<CODE>xs:ENTITY</CODE> match declared unparsed entities. Thus, this rule is 
relaxed in this specification and, in casting to <CODE>xs:ENTITY</CODE> and 
types derived from it, no check is made that the values correspond to declared 
unparsed entities.</P></DIV></DIV>
<DIV class=div2>
<H3><A id=casting-across-hierarchy name=casting-across-hierarchy></A>17.5 
Casting across the type hierarchy</H3>
<P>When the <EM>ST</EM> and the <EM>TT</EM> are derived, directly or indirectly, 
from different primitive types, this is called casting across the type 
hierarchy. Casting across the type hierarchy is logically equivalent to three 
separate steps performed in order. Errors can occur in either of the latter two 
steps.</P>
<OL class=enumar>
  <LI>
  <P>Cast the <EM>SV</EM>, up the hierarchy, to the primitive type of the 
  source, as described in <A 
  href="REC-xpath-functions-20070123.htm#casting-from-derived-to-parent"><B>17.3 
  Casting from derived types to parent types</B></A>.</P>
  <OL class=enumla>
    <LI>
    <P>If <EM>SV</EM> is an instance of <CODE>xs:string</CODE> or 
    <CODE>xs:untypedAtomic</CODE>, check its value against the pattern facet of 
    <EM>TT</EM>, and raise an error [<A title=err:FORG0001 
    href="REC-xpath-functions-20070123.htm#ERRFORG0001">err:FORG0001</A>] 
    if the check fails.</P></LI></OL>
  <LI>
  <P>Cast the value to the primitive type of <EM>TT</EM>, as described in <A 
  href="REC-xpath-functions-20070123.htm#casting-from-primitive-to-primitive"><B>17.1 
  Casting from primitive types to primitive types</B></A>.</P>
  <UL>
    <LI>
    <P>If <EM>TT</EM> is derived from <CODE>xs:NOTATION</CODE>, assume for the 
    purposes of this rule that casting to <CODE>xs:NOTATION</CODE> 
    succeeds.</P></LI></UL>
  <LI>
  <P>Cast the value down to the <EM>TT</EM>, as described in <A 
  href="REC-xpath-functions-20070123.htm#casting-within-branch"><B>17.4 
  Casting within a branch of the type 
hierarchy</B></A></P></LI></OL></DIV></DIV></DIV>
<DIV class=back>
<DIV class=div1>
<H2><A id=biblio name=biblio></A>A References</H2>
<DIV class=div2>
<H3><A id=normative-biblio name=normative-biblio></A>A.1 Normative 
References</H3>
<DL>
  <DT class=label><SPAN><A id=ieee754 name=ieee754></A>IEEE 754-1985</SPAN> 
  <DD>
  <DIV>IEEE. <EM>IEEE Standard for Binary Floating-Point Arithmetic.</EM></DIV>
  <DT class=label><SPAN><A id=LDML name=LDML></A>Locale Data Markup 
  Language</SPAN> 
  <DD>
  <DIV>Unicode Technical Standard #35, Locale Data Markup Language. Available 
  at: <A 
  href="http://www.unicode.org/unicode/reports/tr35/">http://www.unicode.org/unicode/reports/tr35/</A></DIV>
  <DT class=label><SPAN><A id=rfc2396 name=rfc2396></A>RFC 2396</SPAN> 
  <DD>
  <DIV>IETF. <EM>RFC 2396: Uniform Resource Identifiers (URI): Generic 
  Syntax.</EM> Available at: <A 
  href="http://www.ietf.org/rfc/rfc2396.txt">http://www.ietf.org/rfc/rfc2396.txt</A></DIV>
  <DT class=label><SPAN><A id=rfc3986 name=rfc3986></A>RFC 3986</SPAN> 
  <DD>
  <DIV>IETF. <EM>RFC 3986: Uniform Resource Identifiers (URI): Generic 
  Syntax.</EM> Available at: <A 
  href="http://www.ietf.org/rfc/rfc3986.txt">http://www.ietf.org/rfc/rfc3986.txt</A></DIV>
  <DT class=label><SPAN><A id=rfc3987 name=rfc3987></A>RFC 3987</SPAN> 
  <DD>
  <DIV>IETF. <EM>RFC 3987: Internationalized Resource Identifiers (IRIs).</EM> 
  Available at: <A 
  href="http://www.ietf.org/rfc/rfc3987.txt">http://www.ietf.org/rfc/rfc3987.txt</A></DIV>
  <DT class=label><SPAN><A id=charmod name=charmod></A>Character Model for the 
  World Wide Web 1.0: Fundamentals</SPAN> 
  <DD>
  <DIV>Character Model for the World Wide Web 1.0: Fundamentals. Available at: 
  <A 
  href="http://www.w3.org/TR/2005/REC-charmod-20050215/">http://www.w3.org/TR/2005/REC-charmod-20050215/</A></DIV>
  <DT class=label><SPAN><A id=charmod-normalization 
  name=charmod-normalization></A>Character Model for the World Wide Web 1.0: 
  Normalization</SPAN> 
  <DD>
  <DIV>Character Model for the World Wide Web 1.0: Normalization, Last Call 
  Working Draft. Available at: <A 
  href="http://www.w3.org/TR/2004/WD-charmod-norm-20040225/">http://www.w3.org/TR/2004/WD-charmod-norm-20040225/</A></DIV>
  <DT class=label><SPAN><A id=ISO10967 name=ISO10967></A>ISO 10967</SPAN> 
  <DD>
  <DIV>ISO (International Organization for Standardization). <EM>ISO/IEC 
  10967-1:1994, Information technology—Language Independent Arithmetic—Part 1: 
  Integer and floating point arithmetic</EM> [Geneva]: International 
  Organization for Standardization, 1994. Available from: <A 
  href="http://www.iso.ch/">http://www.iso.ch/</A></DIV>
  <DT class=label><SPAN><A id=Unicode4 name=Unicode4></A>The Unicode 
  Standard</SPAN> 
  <DD>
  <DIV>The Unicode Consortium, Reading, MA, Addison-Wesley, 2003. <EM>The 
  Unicode Standard</EM> as updated from time to time by the publication of new 
  versions. See <A 
  href="http://www.unicode.org/unicode/standard/versions">http://www.unicode.org/unicode/standard/versions</A> 
  for the latest version and additional information on versions of the standard 
  and of the Unicode Character Database. The version of Unicode to be used is <A 
  class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>, but 
  implementations are recommended to use the latest Unicode version; currently, 
  Version 4.0.00, Addison-Wesley, 2003 ISBN 0-321-18578-1</DIV>
  <DT class=label><SPAN><A id=Unicode-Collations 
  name=Unicode-Collations></A>Unicode Collation Algorithm</SPAN> 
  <DD>
  <DIV>Unicode Technical Standard #10, Unicode Collation Algorithm. Available 
  at: <A 
  href="http://www.unicode.org/unicode/reports/tr10/">http://www.unicode.org/unicode/reports/tr10/</A></DIV>
  <DT class=label><SPAN><A id=Unicode-Regex name=Unicode-Regex></A>Unicode 
  Regular Expressions</SPAN> 
  <DD>
  <DIV>Unicode Technical Standard #18, Unicode Regular Expressions. Available 
  at: <A 
  href="http://www.unicode.org/unicode/reports/tr18/">http://www.unicode.org/unicode/reports/tr18/</A></DIV>
  <DT class=label><SPAN><A id=REC-xml name=REC-xml></A>Extensible Markup 
  Language (XML) 1.0 Recommendation (Third Edition)</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. <EM>Extensible Markup Language (XML) 1.0 Third 
  Edition.</EM> Available at: <A 
  href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</A></DIV>
  <DT class=label><SPAN><A id=xml11 name=xml11></A>Extensible Markup Language 
  (XML) 1.1 Recommendation</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. <EM>Extensible Markup Language (XML) 1.1.</EM> 
  Available at: <A 
  href="http://www.w3.org/TR/2004/REC-xml11-20040204/">http://www.w3.org/TR/2004/REC-xml11-20040204/</A></DIV>
  <DT class=label><SPAN><A id=xpath20 name=xpath20></A>XML Path Language (XPath) 
  2.0</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. XML Path Language (XPath) Version 2.0. 
  Available at: <A 
  href="http://www.w3.org/TR/xpath20/">http://www.w3.org/TR/xpath20/</A></DIV>
  <DT class=label><SPAN><A id=xslt20 name=xslt20></A>XSL Transformations (XSLT) 
  Version 2.0</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. XSL Transformations Version 2.0. Available at: 
  <A href="http://www.w3.org/TR/xslt20/">http://www.w3.org/TR/xslt20/</A></DIV>
  <DT class=label><SPAN><A id=xpath-datamodel name=xpath-datamodel></A>XQuery 
  1.0 and XPath 2.0 Data Model</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. XQuery 1.0 and XPath 2.0 Data Model (XDM). 
  Available at: <A 
  href="http://www.w3.org/TR/query-datamodel/">http://www.w3.org/TR/query-datamodel/</A></DIV>
  <DT class=label><SPAN><A id=xquery-semantics name=xquery-semantics></A>XQuery 
  1.0 and XPath 2.0 Formal Semantics</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. XQuery 1.0 and XPath 2.0 Formal Semantics. 
  Available at: <A 
  href="http://www.w3.org/TR/query-semantics/">http://www.w3.org/TR/query-semantics/</A></DIV>
  <DT class=label><SPAN><A id=xquery name=xquery></A>XQuery 1.0: An XML Query 
  Language</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. XQuery 1.0: An XML Query Language. Available 
  at: <A 
  href="http://www.w3.org/TR/xquery/">http://www.w3.org/TR/xquery/</A></DIV>
  <DT class=label><SPAN><A id=xmlschema-1 name=xmlschema-1></A>XML Schema Part 
  1: Structures Second Edition</SPAN> 
  <DD>
  <DIV>XML Schema Part 1: Structures Second Edition, Oct 28 2004. Available at: 
  <A 
  href="http://www.w3.org/TR/xmlschema-1/">http://www.w3.org/TR/xmlschema-1/</A></DIV>
  <DT class=label><SPAN><A id=xmlschema-2 name=xmlschema-2></A>XML Schema Part 
  2: Datatypes Second Edition</SPAN> 
  <DD>
  <DIV>XML Schema Part 2: Datatypes Second Edition, Oct. 28 2004. Available at: 
  <A 
  href="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</A></DIV>
  <DT class=label><SPAN><A id=REC-xml-names name=REC-xml-names></A>Namespaces in 
  XML</SPAN> 
  <DD>
  <DIV>Namespaces in XML. Available at: <A 
  href="http://www.w3.org/TR/1999/REC-xml-names-19990114/">http://www.w3.org/TR/1999/REC-xml-names-19990114/</A></DIV></DD></DL></DIV>
<DIV class=div2>
<H3><A id=non-normative-biblio name=non-normative-biblio></A>A.2 Non-normative 
References</H3>
<DL>
  <DT class=label><SPAN><A id=HTML40 name=HTML40></A>HTML 4.0</SPAN> 
  <DD>
  <DIV>HTML 4.01 Recommendation, 24 December 1999. Available at: <A 
  href="http://www.w3.org/TR/REC-html40/">http://www.w3.org/TR/REC-html40/</A></DIV>
  <DT class=label><SPAN><A id=ISO8601 name=ISO8601></A>ISO 8601</SPAN> 
  <DD>
  <DIV>ISO (International Organization for Standardization). <EM>Representations 
  of dates and times, 2000-08-03.</EM> Available from: <A 
  href="http://www.iso.ch/">http://www.iso.ch/</A></DIV>
  <DT class=label><SPAN><A id=Working-With-Timezones 
  name=Working-With-Timezones></A>Working With Timezones</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium Working Group Note. <EM>Working With Timezones, 
  October 13, 2005.</EM> Available at: <A 
  href="http://www.w3.org/TR/2005/NOTE-timezone-20051013/">http://www.w3.org/TR/2005/NOTE-timezone-20051013/</A></DIV>
  <DT class=label><SPAN><A id=xpath name=xpath></A>XML Path Language (XPath) 
  Version 1.0</SPAN> 
  <DD>
  <DIV>World Wide Web Consortium. XML Path Language (XPath) Version 1.0 
  Available at: <A 
  href="http://www.w3.org/TR/xpath">http://www.w3.org/TR/xpath</A></DIV></DD></DL></DIV></DIV>
<DIV class=div1>
<H2><A id=changelog name=changelog></A>B Change Log for this Version of the 
Document</H2>
<P>This draft includes corrections and changes based on <A 
href="http://www.w3.org/Bugs/Public/buglist.cgi?query_format=advanced&amp;short_desc_type=allwordssubstr&amp;short_desc=&amp;product=XPath+%2F+XQuery+%2F+XSLT&amp;component=Functions+and+Operators&amp;version=Proposed+Recommendation&amp;long_desc_type=allwordssubstr&amp;long_desc=&amp;bug_file_loc_type=allwordssubstr&amp;bug_file_loc=&amp;status_whiteboard_type=allwordssubstr&amp;status_whiteboard=&amp;keywords_type=allwords&amp;keywords=&amp;bug_status=RESOLVED&amp;bug_status=VERIFIED&amp;bug_status=CLOSED&amp;emailtype1=substring&amp;email1=&amp;emailtype2=substring&amp;email2=&amp;bugidtype=include&amp;bug_id=&amp;votes=&amp;chfieldfrom=&amp;chfieldto=Now&amp;chfieldvalue=&amp;cmdtype=doit&amp;order=Reuse+same+sort+as+last+time&amp;field0-0-0=noop&amp;type0-0-0=noop&amp;value0-0-0=">public 
comments</A> recorded in the W3C public Bugzilla repository (<A 
href="http://www.w3.org/Bugs/Public/">http://www.w3.org/Bugs/Public/</A>) used 
for issue tracking on the <A 
href="http://www.w3.org/TR/2006/PR-xpath-functions-20061121/">Proposed 
Recommendation</A> of 21 November 2006. A list of changes since the publication 
of the <A href="http://www.w3.org/TR/2006/PR-xpath-functions-20061121/">Proposed 
Recommendation</A> appears below.</P>
<UL>
  <LI>
  <P><B>Bug 1207: Is unsignedInt("+123") an error?</B></P>
  <P>The rules for casting from <CODE>xs:string</CODE> to derived types were 
  felt to be unclear. This was resolved by adding a sentence at the end of <A 
  href="REC-xpath-functions-20070123.htm#casting"><B>17 
  Casting</B></A> that says "When casting from <CODE>xs:string</CODE> the 
  semantics in <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A> apply, regardless of 
  target type."</P>
  <LI>
  <P><B>Bug 4030: Ambiguity re. normalization of the result of fn:concat</B></P>
  <P>It was not clear whether the result of result of <A 
  href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A> 
  may not be normalized or must not be normalized. This was resolved by changing 
  the first setence in the note in <A 
  href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A> 
  to say "Unicode normalization is not automatically applied to the result of <A 
  href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A>".</P>
  <LI>
  <P><B>Bug 4036: Ambiguity re. matching of argument to fn:lang</B></P>
  <P>The rules for matching the argument to <A 
  href="REC-xpath-functions-20070123.htm#func-lang"><CODE>fn:lang</CODE></A> 
  with the value of the <CODE>xml:lang</CODE> attribute were felt to be 
  imprecise. This was resolved by changing the final paragraph to read 
  "Otherwise, the function returns true if and only if, based on a caseless 
  default match as specified in [The Unicode Standard], either (1) 
  <CODE>$testlang</CODE> is equal to the string-value of the relevant 
  <CODE>xml:lang</CODE> attribute, or (2) <CODE>$testlang</CODE> is equal to 
  some substring of the string-value of the relevant <CODE>xml:lang</CODE> 
  attribute that starts at the start of the string-value and ends immediately 
  before a hyphen (x2D)."</P>
  <LI>
  <P><B>fn:iri-to-uri</B></P>
  <P>Added a note that says that if the argument contains a character that is 
  prohibited in an IRI that character must be percent encoded.</P></LI></UL></DIV>
<DIV class=div1>
<H2><A id=error-summary name=error-summary></A>C Error Summary</H2>
<P>The error text provided with these errors is non-normative.</P>
<DL>
  <DT><A id=ERRFOER0000 name=ERRFOER0000></A>err:FOER0000, Unidentified error. 
  <DD>
  <P>Unidentified error.</P>
  <DT><A id=ERRFOAR0001 name=ERRFOAR0001></A>err:FOAR0001, Division by zero. 
  <DD>
  <P>This error is raised whenever an attempt is made to divide by zero.</P>
  <DT><A id=ERRFOAR0002 name=ERRFOAR0002></A>err:FOAR0002, Numeric operation 
  overflow/underflow. 
  <DD>
  <P>This error is raised whenever numeric operations result in an overflow or 
  underflow.</P>
  <DT><A id=ERRFOCA0001 name=ERRFOCA0001></A>err:FOCA0001, Input value too large 
  for decimal. 
  <DT><A id=ERRFOCA0002 name=ERRFOCA0002></A>err:FOCA0002, Invalid lexical 
  value. 
  <DT><A id=ERRFOCA0003 name=ERRFOCA0003></A>err:FOCA0003, Input value too large 
  for integer. 
  <DT><A id=ERRFOCA0005 name=ERRFOCA0005></A>err:FOCA0005, NaN supplied as 
  float/double value. 
  <DT><A id=ERRFOCA0006 name=ERRFOCA0006></A>err:FOCA0006, String to be cast to 
  decimal has too many digits of precision. 
  <DT><A id=ERRFOCH0001 name=ERRFOCH0001></A>err:FOCH0001, Code point not valid. 

  <DT><A id=ERRFOCH0002 name=ERRFOCH0002></A>err:FOCH0002, Unsupported 
  collation. 
  <DT><A id=ERRFOCH0003 name=ERRFOCH0003></A>err:FOCH0003, Unsupported 
  normalization form. 
  <DT><A id=ERRFOCH0004 name=ERRFOCH0004></A>err:FOCH0004, Collation does not 
  support collation units. 
  <DT><A id=ERRFODC0001 name=ERRFODC0001></A>err:FODC0001, No context document. 
  <DT><A id=ERRFODC0002 name=ERRFODC0002></A>err:FODC0002, Error retrieving 
  resource. 
  <DT><A id=ERRFODC0003 name=ERRFODC0003></A>err:FODC0003, Function stability 
  not defined. 
  <DT><A id=ERRFODC0004 name=ERRFODC0004></A>err:FODC0004, Invalid argument to 
  fn:collection. 
  <DT><A id=ERRFODC0005 name=ERRFODC0005></A>err:FODC0005, Invalid argument to 
  fn:doc or fn:doc-available. 
  <DT><A id=ERRFODT0001 name=ERRFODT0001></A>err:FODT0001, Overflow/underflow in 
  date/time operation. 
  <DT><A id=ERRFODT0002 name=ERRFODT0002></A>err:FODT0002, Overflow/underflow in 
  duration operation. 
  <DT><A id=ERRFODT0003 name=ERRFODT0003></A>err:FODT0003, Invalid timezone 
  value. 
  <DT><A id=ERRFONS0004 name=ERRFONS0004></A>err:FONS0004, No namespace found 
  for prefix. 
  <DT><A id=ERRFONS0005 name=ERRFONS0005></A>err:FONS0005, Base-uri not defined 
  in the static context. 
  <DT><A id=ERRFORG0001 name=ERRFORG0001></A>err:FORG0001, Invalid value for 
  cast/constructor. 
  <DT><A id=ERRFORG0002 name=ERRFORG0002></A>err:FORG0002, Invalid argument to 
  fn:resolve-uri(). 
  <DT><A id=ERRFORG0003 name=ERRFORG0003></A>err:FORG0003, fn:zero-or-one called 
  with a sequence containing more than one item. 
  <DT><A id=ERRFORG0004 name=ERRFORG0004></A>err:FORG0004, fn:one-or-more called 
  with a sequence containing no items. 
  <DT><A id=ERRFORG0005 name=ERRFORG0005></A>err:FORG0005, fn:exactly-one called 
  with a sequence containing zero or more than one item. 
  <DT><A id=ERRFORG0006 name=ERRFORG0006></A>err:FORG0006, Invalid argument 
  type. 
  <DT><A id=ERRFORG0008 name=ERRFORG0008></A>err:FORG0008, Both arguments to 
  fn:dateTime have a specified timezone. 
  <DT><A id=ERRFORG0009 name=ERRFORG0009></A>err:FORG0009, Error in resolving a 
  relative URI against a base URI in fn:resolve-uri. 
  <DT><A id=ERRFORX0001 name=ERRFORX0001></A>err:FORX0001, Invalid regular 
  expression. flags 
  <DT><A id=ERRFORX0002 name=ERRFORX0002></A>err:FORX0002, Invalid regular 
  expression. 
  <DT><A id=ERRFORX0003 name=ERRFORX0003></A>err:FORX0003, Regular expression 
  matches zero-length string. 
  <DT><A id=ERRFORX0004 name=ERRFORX0004></A>err:FORX0004, Invalid replacement 
  string. 
  <DT><A id=ERRFOTY0012 name=ERRFOTY0012></A>err:FOTY0012, Argument node does 
  not have a typed value. </DT></DL></DIV>
<DIV class=div1>
<H2><A id=xpath1-compatibility name=xpath1-compatibility></A>D Compatibility 
with XPath 1.0 (Non-Normative)</H2>
<P>This appendix summarizes the relationship between certain functions defined 
in <A href="REC-xpath-functions-20070123.htm#xpath">[XML 
Path Language (XPath) Version 1.0]</A> and the corresponding functions defined 
in this document. The first column of the table provides the signature of 
functions defined in this document. The second column provides the signature of 
the corresponding function in <A 
href="REC-xpath-functions-20070123.htm#xpath">[XML Path 
Language (XPath) Version 1.0]</A>. The third column discusses the differences in 
the semantics of the corresponding functions. The functions appear in the order 
they appear in <A 
href="REC-xpath-functions-20070123.htm#xpath">[XML Path 
Language (XPath) Version 1.0]</A>.</P>
<P>The evaluation of the arguments to the functions defined in this document 
depends on whether the XPath 1.0 compatibility mode is on or off. See <A 
href="REC-xpath-functions-20070123.htm#xpath20">[XML Path 
Language (XPath) 2.0]</A>. If the mode is on, the following conversions are 
applied, in order, before the argument value is passed to the function:</P>
<UL>
  <LI>
  <P>If the expected type is a single item or an optional single item, 
  (examples: <CODE>xs:string, xs:string?, xs:untypedAtomic, xs:untypedAtomic?, 
  node(), node()?, item(), item()?</CODE>), then the given value <CODE>V</CODE> 
  is effectively replaced by <A 
  href="REC-xpath-functions-20070123.htm#func-subsequence"><CODE>fn:subsequence(V, 
  1, 1)</CODE></A>.</P>
  <LI>
  <P>If the expected type is <CODE>xs:string</CODE> or <CODE>xs:string?</CODE>, 
  then the given value <CODE>V</CODE> is effectively replaced by <A 
  href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string(V)</CODE></A>.</P>
  <LI>
  <P>If the expected type is numeric or optional numeric, then the given value 
  <CODE>V</CODE> is effectively replaced by <A 
  href="REC-xpath-functions-20070123.htm#func-number"><CODE>fn:number(V)</CODE></A>.</P>
  <LI>
  <P>Otherwise, the given value is unchanged.</P></LI></UL>
<TABLE width="100%" summary="Issues list" border=1>
  <COLGROUP>
  <COL width="33%">
  <COL width="33%">
  <COL width="33%">
  <TBODY>
  <TR>
    <TH>XQuery 1.0 and XPath 2.0</TH>
    <TH>XPath 1.0</TH>
    <TH>Notes</TH></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:last</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:integer</CODE></DIV></TD>
    <TD><CODE>last() =&gt; number</CODE></TD>
    <TD>Precision of numeric results may be different.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:position</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:integer</CODE></DIV></TD>
    <TD><CODE>position() =&gt; number</CODE></TD>
    <TD>Precision of numeric results may be different.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:count</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:integer</CODE></DIV></TD>
    <TD><CODE>count(node-set) =&gt; number</CODE></TD>
    <TD>Precision of numeric results may be different.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:id</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>element()*</CODE></DIV></TD>
    <TD><CODE>id(object) =&gt; node-set</CODE></TD>
    <TD>XPath 2.0 behavior is different for boolean and numeric arguments. The 
      recognition of a node as an id value is sensitive to the manner in which 
      the datamodel is constructed. In XPath 1.0 the whole string is treated as 
      a unit. In XPath 2.0 each string is treated as a list.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:local-name</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD>
    <TD rowSpan=2><CODE>local-name(node-set?) =&gt; string</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if 
      argument has more than one node.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:local-name</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:namespace-uri</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD>
    <TD rowSpan=2><CODE>namespace-uri(node-set?) =&gt; string</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if 
      argument has more than one node.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:namespace-uri</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>node?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:name</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>node()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD>
    <TD><CODE>name(node-set?) =&gt; string</CODE></TD>
    <TD>If compatibility mode is off, an error will occur if argument has more 
      than one node. The rules for determining the prefix are more precisely 
      defined in <A 
      href="REC-xpath-functions-20070123.htm#xpath20">[XML 
      Path Language (XPath) 2.0]</A>. Function is not "well-defined" for 
      parentless attribute nodes.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:string</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD>
    <TD rowSpan=2><CODE>string(object) =&gt; string</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if 
      argument has more than one node. Representations of numeric values are 
      XPath 1.0 compatible except for the special values positive and negative 
      infinity, and for values outside the range 1.0e-6 to 1.0e+6.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:string</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=3><CODE 
          class=function>fn:concat</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:anyAtomicType?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:anyAtomicType?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><SPAN class=varargs>...</SPAN></TD>
          <TD vAlign=baseline>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></TD>
    <TD><CODE>concat(string, string, string*) =&gt; string</CODE></TD>
    <TD>If compatibility mode is off, an error will occur if an argument has 
      more than one node. If compatibility mode on, the first node in the 
      sequence is used.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:starts-with</CODE>(<CODE 
      class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></DIV></TD>
    <TD rowSpan=2><CODE>starts-with(string, string) =&gt; boolean</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if either 
      argument has more than one node or is a number or a boolean. If 
      compatibility mode is on, implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=3><CODE 
            class=function>fn:starts-with</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string</CODE>)<CODE 
            class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:contains</CODE>(<CODE 
      class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></DIV></TD>
    <TD rowSpan=2><CODE>contains(string, string) =&gt; boolean</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if either 
      argument has more than one node or is a number or a boolean. If 
      compatibility mode is on, implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=3><CODE 
            class=function>fn:contains</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string</CODE>)<CODE 
            class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:boolean</CODE></TD></TR></TBODY></TABLE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:substring-before</CODE>(<CODE 
      class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD>
    <TD rowSpan=2><CODE>substring-before(string, string) =&gt; 
string</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if either 
      argument has more than one node or is a number or a boolean. If 
      compatibility mode is on, implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=3><CODE 
            class=function>fn:substring-before</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string</CODE>)<CODE 
            class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:substring-after</CODE>(<CODE 
      class=arg>$arg1</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>, <CODE class=arg>$arg2</CODE><CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:string?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD>
    <TD rowSpan=2><CODE>substring-after(string, string) =&gt; string</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if either 
      argument has more than one node or is a number or a boolean. If 
      compatibility mode is on, implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=3><CODE 
            class=function>fn:substring-after</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$collation</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string</CODE>)<CODE 
            class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=2><CODE 
            class=function>fn:substring</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$sourceString</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$startingLoc</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:double</CODE>)<CODE 
            class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></TD>
    <TD rowSpan=2><CODE>substring(string, number, number?) =&gt; 
    string</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if 
      <CODE>$sourceString</CODE> has more than one node or is a number or a 
      boolean. If compatibility mode is on, implicit conversion is 
  performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=3><CODE 
            class=function>fn:substring</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$sourceString</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$startingLoc</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:double</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$length</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:double</CODE>)<CODE 
            class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:string-length</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:integer?</CODE></DIV></TD>
    <TD rowSpan=2><CODE>string-length(string?) =&gt; number</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, numbers and booleans will give 
      errors for first arg. Also, multiple nodes will give error.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:string-length</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:integer?</CODE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:normalize-space</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD>
    <TD rowSpan=2><CODE>normalize-space(string?) =&gt; string</CODE></TD>
    <TD rowSpan=2>If compatibility mode is off, an error will occur if 
      <CODE>$arg</CODE> has more than one node or is a number or a boolean. If 
      compatibility mode is on, implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:normalize-space</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:string</CODE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto>
      <TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
      border=0>
        <TBODY>
        <TR>
          <TD vAlign=baseline rowSpan=3><CODE 
            class=function>fn:translate</CODE>(</TD>
          <TD vAlign=baseline><CODE class=arg>$arg</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$mapString</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>,</TD></TR>
        <TR>
          <TD vAlign=baseline><CODE class=arg>$transString</CODE></TD>
          <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=type>xs:string?</CODE>)<CODE 
            class=as>&nbsp;as&nbsp;</CODE><CODE 
            class=return-type>xs:string</CODE></TD></TR></TBODY></TABLE></DIV></TD>
    <TD><CODE>translate(string, string, string)=&gt; string</CODE></TD>
    <TD>.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:boolean</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></DIV></TD>
    <TD><CODE>boolean(object) =&gt; boolean</CODE></TD>
    <TD></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:not</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>item()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></DIV></TD>
    <TD><CODE>not(boolean) =&gt; boolean</CODE></TD>
    <TD></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:true</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></DIV></TD>
    <TD><CODE>true() =&gt; boolean</CODE></TD>
    <TD></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:false</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></DIV></TD>
    <TD><CODE>false() =&gt; boolean</CODE></TD>
    <TD></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:lang</CODE>(<CODE 
      class=arg>$testlang</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:string</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:boolean</CODE></DIV></TD>
    <TD><CODE>lang(string) =&gt; boolean</CODE></TD>
    <TD>If compatibility mode is off, numbers and booleans will give errors. 
      Also, multiple nodes will give error. If compatibility mode is on, 
      implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:number</CODE>()<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:double</CODE></DIV></TD>
    <TD rowSpan=2><CODE>number(object?) =&gt; number</CODE></TD>
    <TD rowSpan=2>Error if argument has more than one node when not in 
      compatibility node.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:number</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType?</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:double</CODE></DIV></TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:sum</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>xs:anyAtomicType</CODE></DIV></TD>
    <TD><CODE>sum(node-set) =&gt; number</CODE></TD>
    <TD>2.0 raises an error if sequence contains values that cannot be added 
      together such as NMTOKENS and other subtypes of string. 1.0 returns 
      <CODE>NaN</CODE>.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:floor</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>numeric?</CODE></DIV></TD>
    <TD><CODE>floor(number)=&gt; number</CODE></TD>
    <TD>In 2.0, if argument is <CODE>()</CODE>, the result is <CODE>()</CODE>. 
      In 1.0, the result is <CODE>NaN</CODE>. If compatibility mode is off, an 
      error will occur with more than one node. If compatibility mode is on, 
      implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:ceiling</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>numeric?</CODE></DIV></TD>
    <TD><CODE>ceiling(number)=&gt; number</CODE></TD>
    <TD>In 2.0, if argument is <CODE>()</CODE>, the result is <CODE>()</CODE>. 
      In 1.0, the result is <CODE>NaN</CODE>. If compatibility mode is off, an 
      error will occur with more than one node. If compatibility mode is on, 
      implicit conversion is performed.</TD></TR>
  <TR>
    <TD>
      <DIV class=proto><CODE class=function>fn:round</CODE>(<CODE 
      class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>numeric?</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-varies>numeric?</CODE></DIV></TD>
    <TD><CODE>round(number)=&gt; number</CODE></TD>
    <TD>In 2.0, if argument is <CODE>()</CODE>, the result is <CODE>()</CODE>. 
      In 1.0, the result is <CODE>NaN</CODE>. If compatibility mode is off, an 
      error will occur with more than one node. If compatibility mode is on, 
      implicit conversion is performed.</TD></TR></TBODY></TABLE></DIV>
<DIV class=div1>
<H2><A id=examples name=examples></A>E Illustrative User-written Functions 
(Non-Normative)</H2>
<P>Certain functions that were proposed for inclusion in this function library 
have been excluded on the basis that it is straightforward for users to 
implement these functions themselves using XSLT 2.0 or XQuery 1.0.</P>
<P>This Appendix provides sample implementations of some of these functions.</P>
<P>To emphasize that these functions are examples of functions that vendors may 
write, their names carry the prefix 'eg'. Vendors are free to define such 
functions in any namespace. A group of vendors may also choose to create a 
collection of such useful functions and put them in a common namespace.</P>
<DIV class=div2>
<H3><A id=if-empty-if-absent name=if-empty-if-absent></A>E.1 eg:if-empty and 
eg:if-absent</H3>
<P>In some situations, users may want to provide default values for missing 
information that may be signaled by elements that are omitted, have no value or 
have the empty sequence as their value. For example, a missing middle initial 
may be indicated by omitting the element or a non-existent bonus signaled with 
an empty sequence. This section includes examples of functions that provide such 
defaults. These functions return <CODE>xs:anyAtomicType*</CODE>. Users may want 
to write functions that return more specific types.</P>
<DIV class=div3>
<H4><A id=if-empty name=if-empty></A>E.1.1 eg:if-empty</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE class=function>eg:if-empty</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$node</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>node()?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$value</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:anyAtomicType*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>If the first argument is the empty sequence or an element without simple or 
complex content, if-empty() returns the second argument; otherwise, it returns 
the content of the first argument.</P>
<P>XSLT implementation</P>
<DIV class=exampleInner><PRE>&lt;xsl:function name="eg:if-empty" as="xs:anyAtomicType*"&gt;
  &lt;xsl:param name="node" as="node()?"/&gt;
  &lt;xsl:param name="value" as="xs:anyAtomicType"/&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$node and $node/child::node()"&gt;
      &lt;xsl:sequence select="fn:data($node)"/&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;
      &lt;xsl:sequence select="$value"/&gt;
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:function&gt;
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function eg:if-empty (
  $node as node()?,
  $value as xs:anyAtomicType) as xs:anyAtomicType* 
{
  if ($node and $node/child::node())
            then fn:data($node)
            else $value
}
                    
</PRE></DIV></DIV>
<DIV class=div3>
<H4><A id=if-absent name=if-absent></A>E.1.2 eg:if-absent</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE class=function>eg:if-absent</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$node</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>node()?</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$value</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:anyAtomicType*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>If the first argument is the empty sequence, if-absent() returns the second 
argument; otherwise, it returns the content of the first argument.</P>
<P>XSLT implementation</P>
<DIV class=exampleInner><PRE>&lt;xsl:function name="eg:if-absent"&gt;
  &lt;xsl:param name="node" as="node()?"/&gt;
  &lt;xsl:param name="value" as="xs:anyAtomicType"/&gt;
  &lt;xsl:choose&gt;
    &lt;xsl:when test="$node"&gt;
      &lt;xsl:sequence select="fn:data($node)"/&gt;
    &lt;/xsl:when&gt;
    &lt;xsl:otherwise&gt;
      &lt;xsl:sequence select="$value"/&gt;
    &lt;/xsl:otherwise&gt;
  &lt;/xsl:choose&gt;
&lt;/xsl:function&gt;
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function eg:if-absent (
  $node as node()?,
  $value as xs:anyAtomicType) as xs:anyAtomicType* 
{
  if ($node)
    then fn:data($node)
    else $value
}
                    
</PRE></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=union-intersect-except-on-values 
name=union-intersect-except-on-values></A>E.2 union, intersect and except on 
sequences of values</H3>
<DIV class=div3>
<H4><A id=value-union name=value-union></A>E.2.1 eg:value-union</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
    class=function>eg:value-union</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:anyAtomicType*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>This function returns a sequence containing all the distinct items in $arg1 
and $arg2, in an undefined order.</P>
<P>XSLT implementation</P>
<DIV class=exampleInner><PRE>xsl:function name="eg:value-union" as="xs:anyAtomicType*"&gt;
  &lt;xsl:param name="arg1" as="xs:anyAtomicType*"/&gt;
  &lt;xsl:param name="arg2" as="xs:anyAtomicType*"/&gt;
  &lt;xsl:sequence
     select="fn:distinct-values(($arg1, $arg2))"/&gt; 
&lt;/xsl:function&gt;
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function eg:value-union (
  $arg1 as xs:anyAtomicType*,
  $arg2 as xs:anyAtomicType*) as xs:anyAtomicType* 
{
  fn:distinct-values(($arg1, $arg2))
}
                    
</PRE></DIV></DIV>
<DIV class=div3>
<H4><A id=value-intersect name=value-intersect></A>E.2.2 eg:value-intersect</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
      class=function>eg:value-intersect</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:anyAtomicType*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>This function returns a sequence containing all the distinct items that 
appear in both $arg1 and $arg2, in an undefined order.</P>
<P>XSLT implementation&gt;</P>
<DIV class=exampleInner><PRE>&lt;xsl:function name="eg:value-intersect" as="xs:anyAtomicType*"&gt;
  &lt;xsl:param name="arg1" as="xs:anyAtomicType*"/&gt;
  &lt;xsl:param name="arg2" as="xs:anyAtomicType*"/&gt;
  &lt;xsl:sequence 
     select="fn:distinct-values($arg1[.=$arg2])"/&gt;
&lt;/xsl:function&gt;
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function eg:value-intersect (
  $arg1 as xs:anyAtomicType*,
  $arg2 as xs:anyAtomicType* ) as xs:anyAtomicType* 
{
  fn:distinct-values($arg1[.=$arg2])
}
                    
</PRE></DIV></DIV>
<DIV class=div3>
<H4><A id=value-except name=value-except></A>E.2.3 eg:value-except</H4>
<DIV class=exampleInner>
<DIV class=proto>
<TABLE cellSpacing=0 cellPadding=0 summary="Function/operator prototype" 
border=0>
  <TBODY>
  <TR>
    <TD vAlign=baseline rowSpan=2><CODE 
    class=function>eg:value-except</CODE>(</TD>
    <TD vAlign=baseline><CODE class=arg>$arg1</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>,</TD></TR>
  <TR>
    <TD vAlign=baseline><CODE class=arg>$arg2</CODE></TD>
    <TD vAlign=baseline><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=type>xs:anyAtomicType*</CODE>)<CODE 
      class=as>&nbsp;as&nbsp;</CODE><CODE 
      class=return-type>xs:anyAtomicType*</CODE></TD></TR></TBODY></TABLE></DIV></DIV>
<P>This function returns a sequence containing all the distinct items that 
appear in $arg1 but not in $arg2, in an undefined order.</P>
<P>XSLT implementation</P>
<DIV class=exampleInner><PRE>&lt;xsl:function name="eg:value-except" as="xs:anyAtomicType*"&gt;
  &lt;xsl:param name="arg1" as="xs:anyAtomicType*"/&gt;
  &lt;xsl:param name="arg2" as="xs:anyAtomicType*"/&gt;
  &lt;xsl:sequence
     select="fn:distinct-values($arg1[not(.=$arg2)])"/&gt;
&lt;/xsl:function&gt;
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function eg:value-except (
  $arg1 as xs:anyAtomicType*,
  $arg2 as xs:anyAtomicType*) as xs:anyAtomicType* 
{
  fn:distinct-values($arg1[not(.=$arg2)])
}
</PRE></DIV></DIV></DIV>
<DIV class=div2>
<H3><A id=index-of-node name=index-of-node></A>E.3 eg:index-of-node</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>eg:index-of-node</CODE>(<CODE 
class=arg>$seqParam</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()*</CODE>, <CODE class=arg>$srchParam</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>node()</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:integer*</CODE></DIV></DIV>
<P>This function returns a sequence of positive integers giving the positions 
within the sequence <CODE>$seqParam</CODE> of nodes that are identical to 
<CODE>$srchParam</CODE>.</P>
<P>The nodes in the sequence <CODE>$seqParam</CODE> are compared with 
<CODE>$srchParam</CODE> under the rules for the <CODE>is</CODE> operator. If a 
node compares identical, then the position of that node in the sequence 
<CODE>$srchParam</CODE> is included in the result.</P>
<P>If the value of <CODE>$seqParam</CODE> is the empty sequence, or if no node 
in <CODE>$seqParam</CODE> matches $srchParam, then the empty sequence is 
returned.</P>
<P>The index is 1-based, not 0-based.</P>
<P>The result sequence is in ascending numeric order.</P>
<P>XSLT implementation</P>
<DIV class=exampleInner><PRE>&lt;xsl:function name="eg:index-of-node" as="xs:integer*"&gt;
  &lt;xsl:param name="sequence" as="node()*"/&gt;
  &lt;xsl:param name="srch" as="node()"/&gt;
  &lt;xsl:for-each select="$sequence"&gt;
    &lt;xsl:if test=". is $srch"&gt;
       &lt;xsl:sequence select="position()"/&gt;
    &lt;/xsl:if&gt;
  &lt;/xsl:for-each&gt;
&lt;/xsl:function&gt;
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function eg:index-of-node($sequence as node()*, $srch as node()) as xs:integer* 
{
  for $n at $i in $sequence where ($n is $srch) return $i
}
</PRE></DIV></DIV>
<DIV class=div2>
<H3><A id=string-pad name=string-pad></A>E.4 eg:string-pad</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>eg:string-pad</CODE>(<CODE 
class=arg>$padString</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>xs:string?</CODE>, <CODE class=arg>$padCount</CODE><CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE class=type>xs:integer</CODE>)<CODE 
class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>xs:string</CODE></DIV></DIV>
<P>Returns a <CODE>xs:string</CODE> consisting of a given number of copies of an 
<CODE>xs:string</CODE> argument concatenated together.</P>
<P>XSLT implementation</P>
<DIV class=exampleInner><PRE>&lt;xsl:function name="eg:string-pad" as="xs:string"&gt;
  &lt;xsl:param name="padString" as="xs:string?"/&gt;
  &lt;xsl:param name="padCount" as="xs:integer"/&gt;
  &lt;xsl:sequence select="fn:string-join((for $i in 1 to $padCount 
                                    return $padString), '')"/&gt;
 &lt;/xsl:function&gt;
                
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function eg:string-pad (
  $padString as xs:string?,
  $padCount as xs:integer) as xs:string 
{
   fn:string-join((for $i in 1 to $padCount return $padString), "")
}

                
</PRE></DIV>
<P>This returns the zero-length string if <CODE>$padString</CODE> is the empty 
sequence, which is consistent with the general principle that if an 
<CODE>xs:string</CODE> argument is the empty sequence it is treated as if it 
were the zero-length string.</P></DIV>
<DIV class=div2>
<H3><A id=func-distinct-nodes-stable name=func-distinct-nodes-stable></A>E.5 
eg:distinct-nodes-stable</H3>
<DIV class=exampleInner>
<DIV class=proto><CODE class=function>fn:eg:distinct-nodes-stable</CODE>(<CODE 
class=arg>$arg</CODE><CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=type>node()*</CODE>)<CODE class=as>&nbsp;as&nbsp;</CODE><CODE 
class=return-type>node()*</CODE></DIV></DIV>
<P>This function illustrates one possible implementation of a distinct-nodes 
function. It removes duplicate nodes by identity, preserving the first 
occurrence of each node.</P>
<P>XPath</P>
<DIV class=exampleInner><PRE>$arg[empty(subsequence($arg, 1, position()-1) intersect .)]
                
</PRE></DIV>
<P>XSLT implementation</P>
<DIV class=exampleInner><PRE>&lt;xsl:function name="eg:distinct-nodes-stable" as="node()*"&gt;
  &lt;xsl:param name="arg" as="node()*"/&gt;
  &lt;xsl:sequence 
    select="$arg[empty(subsequence($arg, 1, position()-1) intersect .)]"/&gt; &lt;/xsl:function&gt;
                
</PRE></DIV>
<P>XQuery implementation</P>
<DIV class=exampleInner><PRE>declare function distinct-nodes-stable ($arg as node()*) as node()* 
{ 
   for $a at $apos in $arg 
   let $before_a := fn:subsequence($arg, 1, $apos - 1) 
   where every $ba in $before_a satisfies not($ba is $a) 
   return $a 
}
</PRE></DIV></DIV></DIV>
<DIV class=div1>
<H2><A id=impl-def name=impl-def></A>F Checklist of Implementation-Defined 
Features (Non-Normative)</H2>
<P>This appendix provides a summary of features defined in this specification 
whose effect is explicitly <A class=termref title=implementation-defined 
href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. The 
conformance rules require vendors to provide documentation that explains how 
these choices have been exercised.</P>
<OL class=enumar>
  <LI>
  <P>The destination of the trace output is <A class=termref 
  title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. See 
  <A 
  href="REC-xpath-functions-20070123.htm#func-trace"><B>4 
  The Trace Function</B></A>.</P>
  <LI>
  <P>For <CODE>xs:integer</CODE> operations, implementations that support 
  limited-precision integer operations <A class=termref title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> either raise an error 
  [<A title=err:FOAR0002 
  href="REC-xpath-functions-20070123.htm#ERRFOAR0002">err:FOAR0002</A>] 
  or provide an <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  mechanism that allows users to choose between raising an error and returning a 
  result that is modulo the largest representable integer value. See <A 
  href="REC-xpath-functions-20070123.htm#op.numeric"><B>6.2 
  Operators on Numeric Values</B></A>.</P>
  <LI>
  <P>For <CODE>xs:decimal</CODE> values the number of digits of precision 
  returned by the numeric operators is <A class=termref 
  title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. See 
  <A 
  href="REC-xpath-functions-20070123.htm#op.numeric"><B>6.2 
  Operators on Numeric Values</B></A>. See also <A 
  href="REC-xpath-functions-20070123.htm#casting-to-decimal"><B>17.1.3.3 
  Casting to xs:decimal</B></A> and <A 
  href="REC-xpath-functions-20070123.htm#casting-to-integer"><B>17.1.3.4 
  Casting to xs:integer</B></A></P>
  <LI>
  <P>If the number of digits in the result of a numeric operation exceeds the 
  number of digits that the implementation supports, the result is truncated or 
  rounded in an <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  manner. See <A 
  href="REC-xpath-functions-20070123.htm#op.numeric"><B>6.2 
  Operators on Numeric Values</B></A>. See also <A 
  href="REC-xpath-functions-20070123.htm#casting-to-decimal"><B>17.1.3.3 
  Casting to xs:decimal</B></A> and <A 
  href="REC-xpath-functions-20070123.htm#casting-to-integer"><B>17.1.3.4 
  Casting to xs:integer</B></A></P>
  <LI>
  <P>It is <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> which 
  version of Unicode is supported by the features defined in this specification, 
  but it is recommended that the most recent version of Unicode be used. See <A 
  href="REC-xpath-functions-20070123.htm#string-types"><B>7.1 
  String Types</B></A>.</P>
  <LI>
  <P>For <A 
  href="REC-xpath-functions-20070123.htm#func-normalize-unicode"><B>7.4.6 
  fn:normalize-unicode</B></A>, conforming implementations <A class=termref 
  title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> support normalization 
  form "NFC" and <A class=termref title=may 
  href="REC-xpath-functions-20070123.htm#may"><SPAN 
  class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> support normalization 
  forms "NFD", "NFKC", "NFKD", "FULLY-NORMALIZED". They <A class=termref 
  title=may 
  href="REC-xpath-functions-20070123.htm#may"><SPAN 
  class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> also support other 
  normalization forms with <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  semantics.</P>
  <LI>
  <P>The ability to decompose strings into collation units suitable for 
  substring matching is an <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  property of a collation. See <A 
  href="REC-xpath-functions-20070123.htm#substring.functions"><B>7.5 
  Functions Based on Substring Matching</B></A>.</P>
  <LI>
  <P>All <EM>minimally conforming</EM> processors <A class=termref title=must 
  href="REC-xpath-functions-20070123.htm#must"><SPAN 
  class=arrow>·</SPAN>must<SPAN class=arrow>·</SPAN></A> support year values 
  with a minimum of 4 digits (i.e., YYYY) and a minimum fractional second 
  precision of 1 millisecond or three digits (i.e., s.sss). However, 
  <EM>conforming processors</EM> <A class=termref title=may 
  href="REC-xpath-functions-20070123.htm#may"><SPAN 
  class=arrow>·</SPAN>may<SPAN class=arrow>·</SPAN></A> set larger <A 
  class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A> 
  limits on the maximum number of digits they support in these two situations. 
  See <A 
  href="REC-xpath-functions-20070123.htm#date-time-duration-conformance"><B>10.1.1 
  Limits and Precision</B></A>.</P>
  <LI>
  <P>The result of casting a string to <CODE>xs:decimal</CODE>, when the 
  resulting value is not too large or too small but nevertheless has too many 
  decimal digits to be accurately represented, is implementation-defined. See <A 
  href="REC-xpath-functions-20070123.htm#casting-from-strings"><B>17.1.1 
  Casting from xs:string and xs:untypedAtomic</B></A>.</P>
  <LI>
  <P>Various aspects of the processing provided by <A 
  href="REC-xpath-functions-20070123.htm#func-doc"><B>15.5.4 
  fn:doc</B></A> are <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN class=arrow>·</SPAN></A>. 
  Implementations may provide external configuration options that allow any 
  aspect of the processing to be controlled by the user.</P>
  <LI>
  <P>The manner in which implementations provide options to weaken the <A 
  class=termref title=stable 
  href="REC-xpath-functions-20070123.htm#stable"><SPAN 
  class=arrow>·</SPAN>stable<SPAN class=arrow>·</SPAN></A> characteristic of <A 
  href="REC-xpath-functions-20070123.htm#func-collection"><B>15.5.6 
  fn:collection</B></A> and <A 
  href="REC-xpath-functions-20070123.htm#func-doc"><B>15.5.4 
  fn:doc</B></A> are <A class=termref title=implementation-defined 
  href="REC-xpath-functions-20070123.htm#implementation-defined"><SPAN 
  class=arrow>·</SPAN>implementation-defined<SPAN 
  class=arrow>·</SPAN></A>.</P></LI></OL></DIV>
<DIV class=div1>
<H2><A id=quickref name=quickref></A>G Function and Operator Quick Reference 
(Non-Normative)</H2>
<DIV class=div2>
<H3><A id=quickref-section name=quickref-section></A>G.1 Functions and Operators 
by Section</H3>
<DL>
  <DT class=label>2 Accessors 
  <DD>
  <DL>
    <DT class=label>2.1 fn:node-name 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-node-name"><CODE>fn:node-name</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:QName?</CODE></DIV>
    <DT class=label>2.2 fn:nilled 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-nilled"><CODE>fn:nilled</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean?</CODE></DIV>
    <DT class=label>2.3 fn:string 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DT class=label>2.4 fn:data 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-data"><CODE>fn:data</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE></DIV>
    <DT class=label>2.5 fn:base-uri 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-base-uri"><CODE>fn:base-uri</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-base-uri"><CODE>fn:base-uri</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI?</CODE></DIV>
    <DT class=label>2.6 fn:document-uri 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-document-uri"><CODE>fn:document-uri</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI?</CODE></DIV></DD></DL>
  <DT class=label>3 The Error Function 
  <DD>
  <DIV class=protoref><A 
  href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
  none</CODE></DIV>
  <DIV class=protoref><A 
  href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>(<CODE>$error</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
  xs:QName</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>none</CODE></DIV>
  <DIV class=protoref><A 
  href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>(<CODE>$error</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
  xs:QName?</CODE>, 
  <CODE>$description</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
  &nbsp;as&nbsp;</CODE><CODE>none</CODE></DIV>
  <DIV class=protoref><A 
  href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>(<CODE>$error</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
  xs:QName?</CODE>, 
  <CODE>$description</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
  <CODE>$error-object</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
  &nbsp;as&nbsp;</CODE><CODE>none</CODE></DIV>
  <DT class=label>4 The Trace Function 
  <DD>
  <DIV class=protoref><A 
  href="REC-xpath-functions-20070123.htm#func-trace"><CODE>fn:trace</CODE></A>(<CODE>$value</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
  item()*</CODE>, 
  <CODE>$label</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
  &nbsp;as&nbsp;</CODE><CODE>item()*</CODE></DIV>
  <DT class=label>5 Constructor Functions 
  <DD>
  <DL>
    <DT class=label>5.2 A Special Constructor Function for xs:dateTime 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-dateTime"><CODE>fn:dateTime</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE></DIV></DD></DL>
  <DT class=label>6 Functions and Operators on Numerics 
  <DD>
  <DL>
    <DT class=label>6.2 Operators on Numeric Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-add"><CODE>op:numeric-add</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-subtract"><CODE>op:numeric-subtract</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-multiply"><CODE>op:numeric-multiply</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-integer-divide"><CODE>op:numeric-integer-divide</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-mod"><CODE>op:numeric-mod</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-unary-plus"><CODE>op:numeric-unary-plus</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    numeric</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-unary-minus"><CODE>op:numeric-unary-minus</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    numeric</CODE></DIV>
    <DT class=label>6.3 Comparison Operators on Numeric Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-equal"><CODE>op:numeric-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-less-than"><CODE>op:numeric-less-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-numeric-greater-than"><CODE>op:numeric-greater-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DT class=label>6.4 Functions on Numeric Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-abs"><CODE>fn:abs</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-ceiling"><CODE>fn:ceiling</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-floor"><CODE>fn:floor</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-round"><CODE>fn:round</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-round-half-to-even"><CODE>fn:round-half-to-even</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    numeric?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-round-half-to-even"><CODE>fn:round-half-to-even</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE>, 
    <CODE>$precision</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>numeric?</CODE></DIV></DD></DL>
  <DT class=label>7 Functions on Strings 
  <DD>
  <DL>
    <DT class=label>7.2 Functions to Assemble and Disassemble Strings 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-codepoints-to-string"><CODE>fn:codepoints-to-string</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-string-to-codepoints"><CODE>fn:string-to-codepoints</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE></DIV>
    <DT class=label>7.3 Equality and Comparison of Strings 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare</CODE></A>(<CODE>$comparand1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$comparand2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare</CODE></A>(<CODE>$comparand1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$comparand2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-codepoint-equal"><CODE>fn:codepoint-equal</CODE></A>(<CODE>$comparand1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$comparand2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean?</CODE></DIV>
    <DT class=label>7.4 Functions on String Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A>(<CODE>$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE>, 
    <SPAN 
    class=varargs>...</SPAN>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-string-join"><CODE>fn:string-join</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-substring"><CODE>fn:substring</CODE></A>(<CODE>$sourceString</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-substring"><CODE>fn:substring</CODE></A>(<CODE>$sourceString</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>, 
    <CODE>$length</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-string-length"><CODE>fn:string-length</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-string-length"><CODE>fn:string-length</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-normalize-space"><CODE>fn:normalize-space</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-normalize-space"><CODE>fn:normalize-space</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-normalize-unicode"><CODE>fn:normalize-unicode</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-normalize-unicode"><CODE>fn:normalize-unicode</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$normalizationForm</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-upper-case"><CODE>fn:upper-case</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-lower-case"><CODE>fn:lower-case</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-translate"><CODE>fn:translate</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$mapString</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
    <CODE>$transString</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-encode-for-uri"><CODE>fn:encode-for-uri</CODE></A>(<CODE>$uri-part</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-iri-to-uri"><CODE>fn:iri-to-uri</CODE></A>(<CODE>$iri</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-escape-html-uri"><CODE>fn:escape-html-uri</CODE></A>(<CODE>$uri</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DT class=label>7.5 Functions Based on Substring Matching 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-starts-with"><CODE>fn:starts-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-starts-with"><CODE>fn:starts-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-ends-with"><CODE>fn:ends-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-ends-with"><CODE>fn:ends-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-substring-before"><CODE>fn:substring-before</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-substring-before"><CODE>fn:substring-before</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-substring-after"><CODE>fn:substring-after</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-substring-after"><CODE>fn:substring-after</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DT class=label>7.6 String Functions that Use Pattern Matching 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches</CODE></A>(<CODE>$input</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches</CODE></A>(<CODE>$input</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
    <CODE>$flags</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-replace"><CODE>fn:replace</CODE></A>(<CODE>$input</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
    <CODE>$replacement</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-replace"><CODE>fn:replace</CODE></A>(<CODE>$input</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
    <CODE>$replacement</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
    <CODE>$flags</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-tokenize"><CODE>fn:tokenize</CODE></A>(<CODE>$input</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-tokenize"><CODE>fn:tokenize</CODE></A>(<CODE>$input</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
    <CODE>$flags</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE></DIV></DD></DL>
  <DT class=label>8 Functions on anyURI 
  <DD>
  <DL>
    <DT class=label>8.1 fn:resolve-uri 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-resolve-uri"><CODE>fn:resolve-uri</CODE></A>(<CODE>$relative</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-resolve-uri"><CODE>fn:resolve-uri</CODE></A>(<CODE>$relative</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$base</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyURI?</CODE></DIV></DD></DL>
  <DT class=label>9 Functions and Operators on Boolean Values 
  <DD>
  <DL>
    <DT class=label>9.1 Additional Boolean Constructor Functions 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-true"><CODE>fn:true</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-false"><CODE>fn:false</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:boolean</CODE></DIV>
    <DT class=label>9.2 Operators on Boolean Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-boolean-equal"><CODE>op:boolean-equal</CODE></A>(<CODE>$value1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>, 
    <CODE>$value2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-boolean-less-than"><CODE>op:boolean-less-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-boolean-greater-than"><CODE>op:boolean-greater-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DT class=label>9.3 Functions on Boolean Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-not"><CODE>fn:not</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV></DD></DL>
  <DT class=label>10 Functions and Operators on Durations, Dates and Times 
  <DD>
  <DL>
    <DT class=label>10.4 Comparison Operators on Duration, Date and Time Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-less-than"><CODE>op:yearMonthDuration-less-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-greater-than"><CODE>op:yearMonthDuration-greater-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-less-than"><CODE>op:dayTimeDuration-less-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-greater-than"><CODE>op:dayTimeDuration-greater-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-duration-equal"><CODE>op:duration-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:duration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-dateTime-less-than"><CODE>op:dateTime-less-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-dateTime-greater-than"><CODE>op:dateTime-greater-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-date-equal"><CODE>op:date-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-date-less-than"><CODE>op:date-less-than</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-date-greater-than"><CODE>op:date-greater-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-time-equal"><CODE>op:time-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-time-less-than"><CODE>op:time-less-than</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-time-greater-than"><CODE>op:time-greater-than</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-gYearMonth-equal"><CODE>op:gYearMonth-equal</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gYearMonth</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gYearMonth</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-gYear-equal"><CODE>op:gYear-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:gYear</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gYear</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-gMonthDay-equal"><CODE>op:gMonthDay-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:gMonthDay</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gMonthDay</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-gMonth-equal"><CODE>op:gMonth-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:gMonth</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gMonth</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-gDay-equal"><CODE>op:gDay-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:gDay</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gDay</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DT class=label>10.5 Component Extraction Functions on Durations, Dates and 
    Times 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-years-from-duration"><CODE>fn:years-from-duration</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-months-from-duration"><CODE>fn:months-from-duration</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-days-from-duration"><CODE>fn:days-from-duration</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-hours-from-duration"><CODE>fn:hours-from-duration</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-minutes-from-duration"><CODE>fn:minutes-from-duration</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-seconds-from-duration"><CODE>fn:seconds-from-duration</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:decimal?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-year-from-dateTime"><CODE>fn:year-from-dateTime</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-month-from-dateTime"><CODE>fn:month-from-dateTime</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-day-from-dateTime"><CODE>fn:day-from-dateTime</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-hours-from-dateTime"><CODE>fn:hours-from-dateTime</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-minutes-from-dateTime"><CODE>fn:minutes-from-dateTime</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-seconds-from-dateTime"><CODE>fn:seconds-from-dateTime</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:decimal?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-timezone-from-dateTime"><CODE>fn:timezone-from-dateTime</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-year-from-date"><CODE>fn:year-from-date</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-month-from-date"><CODE>fn:month-from-date</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-day-from-date"><CODE>fn:day-from-date</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-timezone-from-date"><CODE>fn:timezone-from-date</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:dayTimeDuration?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-hours-from-time"><CODE>fn:hours-from-time</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-minutes-from-time"><CODE>fn:minutes-from-time</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-seconds-from-time"><CODE>fn:seconds-from-time</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:decimal?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-timezone-from-time"><CODE>fn:timezone-from-time</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:dayTimeDuration?</CODE></DIV>
    <DT class=label>10.6 Arithmetic Operators on Durations 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-add-yearMonthDurations"><CODE>op:add-yearMonthDurations</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDurations"><CODE>op:subtract-yearMonthDurations</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-multiply-yearMonthDuration"><CODE>op:multiply-yearMonthDuration</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration"><CODE>op:divide-yearMonthDuration</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration-by-yearMonthDuration"><CODE>op:divide-yearMonthDuration-by-yearMonthDuration</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:decimal</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-add-dayTimeDurations"><CODE>op:add-dayTimeDurations</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDurations"><CODE>op:subtract-dayTimeDurations</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-multiply-dayTimeDuration"><CODE>op:multiply-dayTimeDuration</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration"><CODE>op:divide-dayTimeDuration</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration-by-dayTimeDuration"><CODE>op:divide-dayTimeDuration-by-dayTimeDuration</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:decimal</CODE></DIV>
    <DT class=label>10.7 Timezone Adjustment Functions on Dates and Time Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone"><CODE>fn:adjust-dateTime-to-timezone</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone"><CODE>fn:adjust-dateTime-to-timezone</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>, 
    <CODE>$timezone</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone"><CODE>fn:adjust-date-to-timezone</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:date?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone"><CODE>fn:adjust-date-to-timezone</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>, 
    <CODE>$timezone</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone"><CODE>fn:adjust-time-to-timezone</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:time?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone"><CODE>fn:adjust-time-to-timezone</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>, 
    <CODE>$timezone</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE></DIV>
    <DT class=label>10.8 Arithmetic Operators on Durations, Dates and Times 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-dateTimes"><CODE>op:subtract-dateTimes</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-dates"><CODE>op:subtract-dates</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-times"><CODE>op:subtract-times</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-dateTime"><CODE>op:add-yearMonthDuration-to-dateTime</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-dateTime"><CODE>op:add-dayTimeDuration-to-dateTime</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-dateTime"><CODE>op:subtract-yearMonthDuration-from-dateTime</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-dateTime"><CODE>op:subtract-dayTimeDuration-from-dateTime</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-date"><CODE>op:add-yearMonthDuration-to-date</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-date"><CODE>op:add-dayTimeDuration-to-date</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-date"><CODE>op:subtract-yearMonthDuration-from-date</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-date"><CODE>op:subtract-dayTimeDuration-from-date</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:date</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-time"><CODE>op:add-dayTimeDuration-to-time</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:time</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-time"><CODE>op:subtract-dayTimeDuration-from-time</CODE></A>(<CODE> 
    $arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:time</CODE></DIV></DD></DL>
  <DT class=label>11 Functions Related to QNames 
  <DD>
  <DL>
    <DT class=label>11.1 Additional Constructor Functions for QNames 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-resolve-QName"><CODE>fn:resolve-QName</CODE></A>(<CODE>$qname</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$element</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>element()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-QName"><CODE>fn:QName</CODE></A>(<CODE>$paramURI</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$paramQName</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:QName</CODE></DIV>
    <DT class=label>11.2 Functions and Operators Related to QNames 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-QName-equal"><CODE>op:QName-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:QName</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-prefix-from-QName"><CODE>fn:prefix-from-QName</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:NCName?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-local-name-from-QName"><CODE>fn:local-name-from-QName</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:NCName?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-namespace-uri-from-QName"><CODE>fn:namespace-uri-from-QName</CODE></A>(<CODE> 
    $arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-namespace-uri-for-prefix"><CODE>fn:namespace-uri-for-prefix</CODE></A>(<CODE> 
    $prefix</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
    <CODE>$element</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>element()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyURI?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-in-scope-prefixes"><CODE>fn:in-scope-prefixes</CODE></A>(<CODE> 
    $element</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>element()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE></DIV></DD></DL>
  <DT class=label>12 Operators on base64Binary and hexBinary 
  <DD>
  <DL>
    <DT class=label>12.1 Comparisons of base64Binary and hexBinary Values 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-hexBinary-equal"><CODE>op:hexBinary-equal</CODE></A>(<CODE>$value1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:hexBinary</CODE>, 
    <CODE>$value2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:hexBinary</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-base64Binary-equal"><CODE>op:base64Binary-equal</CODE></A>(<CODE> 
    $value1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:base64Binary</CODE>, 
    <CODE>$value2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:base64Binary</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV></DD></DL>
  <DT class=label>13 Operators on NOTATION 
  <DD>
  <DL>
    <DT class=label>13.1 Operators on NOTATION 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-NOTATION-equal"><CODE>op:NOTATION-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:NOTATION</CODE>, 
    <CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:NOTATION</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV></DD></DL>
  <DT class=label>14 Functions and Operators on Nodes 
  <DD>
  <DL>
    <DT class=label>14.1 fn:name 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-name"><CODE>fn:name</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-name"><CODE>fn:name</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DT class=label>14.2 fn:local-name 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-local-name"><CODE>fn:local-name</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-local-name"><CODE>fn:local-name</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string</CODE></DIV>
    <DT class=label>14.3 fn:namespace-uri 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-namespace-uri"><CODE>fn:namespace-uri</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-namespace-uri"><CODE>fn:namespace-uri</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI</CODE></DIV>
    <DT class=label>14.4 fn:number 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-number"><CODE>fn:number</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:double</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-number"><CODE>fn:number</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE></DIV>
    <DT class=label>14.5 fn:lang 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-lang"><CODE>fn:lang</CODE></A>(<CODE>$testlang</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-lang"><CODE>fn:lang</CODE></A>(<CODE>$testlang</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string?</CODE>, 
    <CODE>$node</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DT class=label>14.6 op:is-same-node 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-is-same-node"><CODE>op:is-same-node</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DT class=label>14.7 op:node-before 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-node-before"><CODE>op:node-before</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DT class=label>14.8 op:node-after 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-node-after"><CODE>op:node-after</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DT class=label>14.9 fn:root 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-root"><CODE>fn:root</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    node()</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-root"><CODE>fn:root</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>node()?</CODE></DIV></DD></DL>
  <DT class=label>15 Functions and Operators on Sequences 
  <DD>
  <DL>
    <DT class=label>15.1 General Functions and Operators on Sequences 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-boolean"><CODE>fn:boolean</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-concatenate"><CODE>op:concatenate</CODE></A>(<CODE>$seq1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$seq2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-index-of"><CODE>fn:index-of</CODE></A>(<CODE>$seqParam</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>, 
    <CODE>$srchParam</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-index-of"><CODE>fn:index-of</CODE></A>(<CODE>$seqParam</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>, 
    <CODE>$srchParam</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-empty"><CODE>fn:empty</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-exists"><CODE>fn:exists</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-distinct-values"><CODE>fn:distinct-values</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-distinct-values"><CODE>fn:distinct-values</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-insert-before"><CODE>fn:insert-before</CODE></A>(<CODE>$target</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$position</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>, 
    <CODE>$inserts</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-remove"><CODE>fn:remove</CODE></A>(<CODE>$target</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$position</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-reverse"><CODE>fn:reverse</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subsequence"><CODE>fn:subsequence</CODE></A>(<CODE>$sourceSeq</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-subsequence"><CODE>fn:subsequence</CODE></A>(<CODE>$sourceSeq</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>, 
    <CODE>$length</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-unordered"><CODE>fn:unordered</CODE></A>(<CODE>$sourceSeq</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE></DIV>
    <DT class=label>15.2 Functions That Test the Cardinality of Sequences 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-zero-or-one"><CODE>fn:zero-or-one</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-one-or-more"><CODE>fn:one-or-more</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()+</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-exactly-one"><CODE>fn:exactly-one</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()</CODE></DIV>
    <DT class=label>15.3 Equals, Union, Intersection and Except 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-deep-equal"><CODE>fn:deep-equal</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-deep-equal"><CODE>fn:deep-equal</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-union"><CODE>op:union</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()*</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-intersect"><CODE>op:intersect</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()*</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-except"><CODE>op:except</CODE></A>(<CODE>$parameter1</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()*</CODE>, 
    <CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()*</CODE></DIV>
    <DT class=label>15.4 Aggregate Functions 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-count"><CODE>fn:count</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-avg"><CODE>fn:avg</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-max"><CODE>fn:max</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-max"><CODE>fn:max</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-min"><CODE>fn:min</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-min"><CODE>fn:min</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE>, 
    <CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>string</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-sum"><CODE>fn:sum</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-sum"><CODE>fn:sum</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyAtomicType*</CODE>, 
    <CODE>$zero</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE></DIV>
    <DT class=label>15.5 Functions and Operators that Generate Sequences 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-to"><CODE>op:to</CODE></A>(<CODE>$firstval</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer</CODE>, 
    <CODE>$lastval</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-id"><CODE>fn:id</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>element()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-id"><CODE>fn:id</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string*</CODE>, 
    <CODE>$node</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>element()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-idref"><CODE>fn:idref</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-idref"><CODE>fn:idref</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string*</CODE>, 
    <CODE>$node</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>node()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc</CODE></A>(<CODE>$uri</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>document-node()?</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-doc-available"><CODE>fn:doc-available</CODE></A>(<CODE>$uri</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:boolean</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    node()*</CODE></DIV>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection</CODE></A>(<CODE>$arg</CODE><CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    node()*</CODE></DIV></DD></DL>
  <DT class=label>16 Context Functions 
  <DD>
  <DL>
    <DT class=label>16.1 fn:position 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-position"><CODE>fn:position</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer</CODE></DIV>
    <DT class=label>16.2 fn:last 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-last"><CODE>fn:last</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:integer</CODE></DIV>
    <DT class=label>16.3 fn:current-dateTime 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-current-dateTime"><CODE>fn:current-dateTime</CODE></A>()<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE></DIV>
    <DT class=label>16.4 fn:current-date 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-current-date"><CODE>fn:current-date</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:date</CODE></DIV>
    <DT class=label>16.5 fn:current-time 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-current-time"><CODE>fn:current-time</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:time</CODE></DIV>
    <DT class=label>16.6 fn:implicit-timezone 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-implicit-timezone"><CODE>fn:implicit-timezone</CODE></A>()<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE></DIV>
    <DT class=label>16.7 fn:default-collation 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-default-collation"><CODE>fn:default-collation</CODE></A>()<CODE> 
    &nbsp;as&nbsp;</CODE><CODE>xs:string</CODE></DIV>
    <DT class=label>16.8 fn:static-base-uri 
    <DD>
    <DIV class=protoref><A 
    href="REC-xpath-functions-20070123.htm#func-static-base-uri"><CODE>fn:static-base-uri</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
    xs:anyURI?</CODE></DIV></DD></DL></DD></DL></DIV>
<DIV class=div2>
<H3><A id=quickref-alpha name=quickref-alpha></A>G.2 Functions and Operators 
Alphabetically</H3>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-abs"><CODE>fn:abs</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-abs">6.4.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-date"><CODE>op:add-dayTimeDuration-to-date</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-date">10.8.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-dateTime"><CODE>op:add-dayTimeDuration-to-dateTime</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-dateTime">10.8.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-time"><CODE>op:add-dayTimeDuration-to-time</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDuration-to-time">10.8.12</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDurations"><CODE>op:add-dayTimeDurations</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-add-dayTimeDurations">10.6.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-date"><CODE>op:add-yearMonthDuration-to-date</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-date">10.8.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-dateTime"><CODE>op:add-yearMonthDuration-to-dateTime</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDuration-to-dateTime">10.8.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDurations"><CODE>op:add-yearMonthDurations</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-add-yearMonthDurations">10.6.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone"><CODE>fn:adjust-date-to-timezone</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:date?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone">10.7.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone"><CODE>fn:adjust-date-to-timezone</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>, 
<CODE>$timezone</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-adjust-date-to-timezone">10.7.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone"><CODE>fn:adjust-dateTime-to-timezone</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone">10.7.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone"><CODE>fn:adjust-dateTime-to-timezone</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>, 
<CODE>$timezone</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-adjust-dateTime-to-timezone">10.7.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone"><CODE>fn:adjust-time-to-timezone</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:time?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone">10.7.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone"><CODE>fn:adjust-time-to-timezone</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>, 
<CODE>$timezone</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-adjust-time-to-timezone">10.7.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-avg"><CODE>fn:avg</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE> 
(§<A 
href="REC-xpath-functions-20070123.htm#func-avg">15.4.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-base-uri"><CODE>fn:base-uri</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-base-uri">2.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-base-uri"><CODE>fn:base-uri</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-base-uri">2.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-base64Binary-equal"><CODE>op:base64Binary-equal</CODE></A>(<CODE> 
$value1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:base64Binary</CODE>, 
<CODE>$value2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:base64Binary</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-base64Binary-equal">12.1.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-boolean"><CODE>fn:boolean</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-boolean">15.1.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-boolean-equal"><CODE>op:boolean-equal</CODE></A>(<CODE>$value1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>, 
<CODE>$value2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-boolean-equal">9.2.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-boolean-greater-than"><CODE>op:boolean-greater-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-boolean-greater-than">9.2.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-boolean-less-than"><CODE>op:boolean-less-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-boolean-less-than">9.2.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-ceiling"><CODE>fn:ceiling</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-ceiling">6.4.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-codepoint-equal"><CODE>fn:codepoint-equal</CODE></A>(<CODE>$comparand1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$comparand2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-codepoint-equal">7.3.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-codepoints-to-string"><CODE>fn:codepoints-to-string</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-codepoints-to-string">7.2.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
node()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-collection">15.5.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-collection"><CODE>fn:collection</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
node()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-collection">15.5.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare</CODE></A>(<CODE>$comparand1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$comparand2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-compare">7.3.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-compare"><CODE>fn:compare</CODE></A>(<CODE>$comparand1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$comparand2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-compare">7.3.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-concat"><CODE>fn:concat</CODE></A>(<CODE>$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE>, 
<SPAN class=varargs>...</SPAN>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> 
(§<A 
href="REC-xpath-functions-20070123.htm#func-concat">7.4.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-concatenate"><CODE>op:concatenate</CODE></A>(<CODE>$seq1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$seq2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-concatenate">15.1.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-contains">7.5.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-contains"><CODE>fn:contains</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-contains">7.5.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-count"><CODE>fn:count</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-count">15.4.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-current-date"><CODE>fn:current-date</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:date</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-current-date">16.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-current-dateTime"><CODE>fn:current-dateTime</CODE></A>()<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-current-dateTime">16.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-current-time"><CODE>fn:current-time</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:time</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-current-time">16.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-data"><CODE>fn:data</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-data">2.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-date-equal"><CODE>op:date-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-date-equal">10.4.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-date-greater-than"><CODE>op:date-greater-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-date-greater-than">10.4.11</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-date-less-than"><CODE>op:date-less-than</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-date-less-than">10.4.10</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-dateTime"><CODE>fn:dateTime</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-dateTime">5.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal"><CODE>op:dateTime-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-dateTime-equal">10.4.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-dateTime-greater-than"><CODE>op:dateTime-greater-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-dateTime-greater-than">10.4.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-dateTime-less-than"><CODE>op:dateTime-less-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-dateTime-less-than">10.4.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-day-from-date"><CODE>fn:day-from-date</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-day-from-date">10.5.16</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-day-from-dateTime"><CODE>fn:day-from-dateTime</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-day-from-dateTime">10.5.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-days-from-duration"><CODE>fn:days-from-duration</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-days-from-duration">10.5.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-greater-than"><CODE>op:dayTimeDuration-greater-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-greater-than">10.4.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-less-than"><CODE>op:dayTimeDuration-less-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-dayTimeDuration-less-than">10.4.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-deep-equal"><CODE>fn:deep-equal</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-deep-equal">15.3.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-deep-equal"><CODE>fn:deep-equal</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-deep-equal">15.3.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-default-collation"><CODE>fn:default-collation</CODE></A>()<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-default-collation">16.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-distinct-values"><CODE>fn:distinct-values</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-distinct-values">15.1.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-distinct-values"><CODE>fn:distinct-values</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-distinct-values">15.1.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration"><CODE>op:divide-dayTimeDuration</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration">10.6.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration-by-dayTimeDuration"><CODE>op:divide-dayTimeDuration-by-dayTimeDuration</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:decimal</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-divide-dayTimeDuration-by-dayTimeDuration">10.6.10</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration"><CODE>op:divide-yearMonthDuration</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration">10.6.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration-by-yearMonthDuration"><CODE>op:divide-yearMonthDuration-by-yearMonthDuration</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:decimal</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-divide-yearMonthDuration-by-yearMonthDuration">10.6.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-doc"><CODE>fn:doc</CODE></A>(<CODE>$uri</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>document-node()?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-doc">15.5.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-doc-available"><CODE>fn:doc-available</CODE></A>(<CODE>$uri</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-doc-available">15.5.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-document-uri"><CODE>fn:document-uri</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-document-uri">2.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-duration-equal"><CODE>op:duration-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:duration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-duration-equal">10.4.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-empty"><CODE>fn:empty</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-empty">15.1.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-encode-for-uri"><CODE>fn:encode-for-uri</CODE></A>(<CODE>$uri-part</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-encode-for-uri">7.4.10</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-ends-with"><CODE>fn:ends-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-ends-with">7.5.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-ends-with"><CODE>fn:ends-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-ends-with">7.5.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
none</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-error">3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>(<CODE>$error</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:QName</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>none</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-error">3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>(<CODE>$error</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:QName?</CODE>, 
<CODE>$description</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>none</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-error">3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-error"><CODE>fn:error</CODE></A>(<CODE>$error</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:QName?</CODE>, 
<CODE>$description</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
<CODE>$error-object</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>none</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-error">3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-escape-html-uri"><CODE>fn:escape-html-uri</CODE></A>(<CODE>$uri</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-escape-html-uri">7.4.12</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-exactly-one"><CODE>fn:exactly-one</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-exactly-one">15.2.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-except"><CODE>op:except</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-except">15.3.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-exists"><CODE>fn:exists</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-exists">15.1.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-false"><CODE>fn:false</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-false">9.1.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-floor"><CODE>fn:floor</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-floor">6.4.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-gDay-equal"><CODE>op:gDay-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:gDay</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gDay</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-gDay-equal">10.4.19</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-gMonth-equal"><CODE>op:gMonth-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:gMonth</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gMonth</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-gMonth-equal">10.4.18</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-gMonthDay-equal"><CODE>op:gMonthDay-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:gMonthDay</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gMonthDay</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-gMonthDay-equal">10.4.17</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-gYear-equal"><CODE>op:gYear-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:gYear</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gYear</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-gYear-equal">10.4.16</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-gYearMonth-equal"><CODE>op:gYearMonth-equal</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gYearMonth</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:gYearMonth</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-gYearMonth-equal">10.4.15</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-hexBinary-equal"><CODE>op:hexBinary-equal</CODE></A>(<CODE>$value1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:hexBinary</CODE>, 
<CODE>$value2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:hexBinary</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-hexBinary-equal">12.1.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-hours-from-dateTime"><CODE>fn:hours-from-dateTime</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-hours-from-dateTime">10.5.10</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-hours-from-duration"><CODE>fn:hours-from-duration</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-hours-from-duration">10.5.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-hours-from-time"><CODE>fn:hours-from-time</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-hours-from-time">10.5.18</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-id"><CODE>fn:id</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>element()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-id">15.5.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-id"><CODE>fn:id</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string*</CODE>, 
<CODE>$node</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>element()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-id">15.5.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-idref"><CODE>fn:idref</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-idref">15.5.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-idref"><CODE>fn:idref</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string*</CODE>, 
<CODE>$node</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-idref">15.5.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-implicit-timezone"><CODE>fn:implicit-timezone</CODE></A>()<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-implicit-timezone">16.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-in-scope-prefixes"><CODE>fn:in-scope-prefixes</CODE></A>(<CODE> 
$element</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>element()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-in-scope-prefixes">11.2.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-index-of"><CODE>fn:index-of</CODE></A>(<CODE>$seqParam</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>, 
<CODE>$srchParam</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-index-of">15.1.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-index-of"><CODE>fn:index-of</CODE></A>(<CODE>$seqParam</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType*</CODE>, 
<CODE>$srchParam</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-index-of">15.1.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-insert-before"><CODE>fn:insert-before</CODE></A>(<CODE>$target</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$position</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>, 
<CODE>$inserts</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-insert-before">15.1.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-intersect"><CODE>op:intersect</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-intersect">15.3.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-iri-to-uri"><CODE>fn:iri-to-uri</CODE></A>(<CODE>$iri</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-iri-to-uri">7.4.11</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-is-same-node"><CODE>op:is-same-node</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-is-same-node">14.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-lang"><CODE>fn:lang</CODE></A>(<CODE>$testlang</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-lang">14.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-lang"><CODE>fn:lang</CODE></A>(<CODE>$testlang</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string?</CODE>, 
<CODE>$node</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-lang">14.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-last"><CODE>fn:last</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-last">16.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-local-name"><CODE>fn:local-name</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-local-name">14.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-local-name"><CODE>fn:local-name</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-local-name">14.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-local-name-from-QName"><CODE>fn:local-name-from-QName</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:NCName?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-local-name-from-QName">11.2.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-lower-case"><CODE>fn:lower-case</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-lower-case">7.4.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches</CODE></A>(<CODE>$input</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-matches">7.6.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-matches"><CODE>fn:matches</CODE></A>(<CODE>$input</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
<CODE>$flags</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-matches">7.6.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-max"><CODE>fn:max</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE> 
(§<A 
href="REC-xpath-functions-20070123.htm#func-max">15.4.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-max"><CODE>fn:max</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-max">15.4.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-min"><CODE>fn:min</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE> 
(§<A 
href="REC-xpath-functions-20070123.htm#func-min">15.4.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-min"><CODE>fn:min</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-min">15.4.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-dateTime"><CODE>fn:minutes-from-dateTime</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-dateTime">10.5.11</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-duration"><CODE>fn:minutes-from-duration</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-duration">10.5.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-time"><CODE>fn:minutes-from-time</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-minutes-from-time">10.5.19</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-month-from-date"><CODE>fn:month-from-date</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-month-from-date">10.5.15</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-month-from-dateTime"><CODE>fn:month-from-dateTime</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-month-from-dateTime">10.5.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-months-from-duration"><CODE>fn:months-from-duration</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-months-from-duration">10.5.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-multiply-dayTimeDuration"><CODE>op:multiply-dayTimeDuration</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-multiply-dayTimeDuration">10.6.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-multiply-yearMonthDuration"><CODE>op:multiply-yearMonthDuration</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-multiply-yearMonthDuration">10.6.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-name"><CODE>fn:name</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-name">14.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-name"><CODE>fn:name</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-name">14.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri"><CODE>fn:namespace-uri</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri">14.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri"><CODE>fn:namespace-uri</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri">14.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri-for-prefix"><CODE>fn:namespace-uri-for-prefix</CODE></A>(<CODE> 
$prefix</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$element</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>element()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri-for-prefix">11.2.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri-from-QName"><CODE>fn:namespace-uri-from-QName</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-namespace-uri-from-QName">11.2.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-nilled"><CODE>fn:nilled</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-nilled">2.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-node-after"><CODE>op:node-after</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-node-after">14.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-node-before"><CODE>op:node-before</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-node-before">14.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-node-name"><CODE>fn:node-name</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:QName?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-node-name">2.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-normalize-space"><CODE>fn:normalize-space</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-normalize-space">7.4.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-normalize-space"><CODE>fn:normalize-space</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-normalize-space">7.4.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-normalize-unicode"><CODE>fn:normalize-unicode</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-normalize-unicode">7.4.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-normalize-unicode"><CODE>fn:normalize-unicode</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$normalizationForm</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-normalize-unicode">7.4.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-not"><CODE>fn:not</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-not">9.3.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-NOTATION-equal"><CODE>op:NOTATION-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:NOTATION</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:NOTATION</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-NOTATION-equal">13.1.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-number"><CODE>fn:number</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:double</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-number">14.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-number"><CODE>fn:number</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-number">14.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-add"><CODE>op:numeric-add</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-add">6.2.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-divide"><CODE>op:numeric-divide</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-divide">6.2.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-equal"><CODE>op:numeric-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-equal">6.3.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-greater-than"><CODE>op:numeric-greater-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-greater-than">6.3.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-integer-divide"><CODE>op:numeric-integer-divide</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-integer-divide">6.2.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-less-than"><CODE>op:numeric-less-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-less-than">6.3.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-mod"><CODE>op:numeric-mod</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-mod">6.2.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-multiply"><CODE>op:numeric-multiply</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-multiply">6.2.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-subtract"><CODE>op:numeric-subtract</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-subtract">6.2.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-minus"><CODE>op:numeric-unary-minus</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
numeric</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-minus">6.2.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-plus"><CODE>op:numeric-unary-plus</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
numeric</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-numeric-unary-plus">6.2.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-one-or-more"><CODE>fn:one-or-more</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()+</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-one-or-more">15.2.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-position"><CODE>fn:position</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-position">16.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-prefix-from-QName"><CODE>fn:prefix-from-QName</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:NCName?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-prefix-from-QName">11.2.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-QName"><CODE>fn:QName</CODE></A>(<CODE>$paramURI</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$paramQName</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:QName</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-QName">11.1.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-QName-equal"><CODE>op:QName-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:QName</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:QName</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-QName-equal">11.2.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-remove"><CODE>fn:remove</CODE></A>(<CODE>$target</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$position</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-remove">15.1.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-replace"><CODE>fn:replace</CODE></A>(<CODE>$input</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
<CODE>$replacement</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-replace">7.6.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-replace"><CODE>fn:replace</CODE></A>(<CODE>$input</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
<CODE>$replacement</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
<CODE>$flags</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-replace">7.6.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-resolve-QName"><CODE>fn:resolve-QName</CODE></A>(<CODE>$qname</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$element</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>element()</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:QName?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-resolve-QName">11.1.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-resolve-uri"><CODE>fn:resolve-uri</CODE></A>(<CODE>$relative</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-resolve-uri">8.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-resolve-uri"><CODE>fn:resolve-uri</CODE></A>(<CODE>$relative</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$base</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-resolve-uri">8.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-reverse"><CODE>fn:reverse</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-reverse">15.1.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-root"><CODE>fn:root</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
node()</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-root">14.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-root"><CODE>fn:root</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
node()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>node()?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-root">14.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-round"><CODE>fn:round</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-round">6.4.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-round-half-to-even"><CODE>fn:round-half-to-even</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
numeric?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-round-half-to-even">6.4.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-round-half-to-even"><CODE>fn:round-half-to-even</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE>, 
<CODE>$precision</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>numeric?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-round-half-to-even">6.4.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-dateTime"><CODE>fn:seconds-from-dateTime</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:decimal?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-dateTime">10.5.12</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-duration"><CODE>fn:seconds-from-duration</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:decimal?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-duration">10.5.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-time"><CODE>fn:seconds-from-time</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:decimal?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-seconds-from-time">10.5.20</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-starts-with"><CODE>fn:starts-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-starts-with">7.5.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-starts-with"><CODE>fn:starts-with</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-starts-with">7.5.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-static-base-uri"><CODE>fn:static-base-uri</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyURI?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-static-base-uri">16.8</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-string">2.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-string"><CODE>fn:string</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-string">2.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-string-join"><CODE>fn:string-join</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-string-join">7.4.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-string-length"><CODE>fn:string-length</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-string-length">7.4.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-string-length"><CODE>fn:string-length</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-string-length">7.4.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-string-to-codepoints"><CODE>fn:string-to-codepoints</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-string-to-codepoints">7.2.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subsequence"><CODE>fn:subsequence</CODE></A>(<CODE>$sourceSeq</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subsequence">15.1.10</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subsequence"><CODE>fn:subsequence</CODE></A>(<CODE>$sourceSeq</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>, 
<CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>, 
<CODE>$length</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subsequence">15.1.10</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-substring"><CODE>fn:substring</CODE></A>(<CODE>$sourceString</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-substring">7.4.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-substring"><CODE>fn:substring</CODE></A>(<CODE>$sourceString</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$startingLoc</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>, 
<CODE>$length</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:double</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-substring">7.4.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-substring-after"><CODE>fn:substring-after</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-substring-after">7.5.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-substring-after"><CODE>fn:substring-after</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-substring-after">7.5.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-substring-before"><CODE>fn:substring-before</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-substring-before">7.5.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-substring-before"><CODE>fn:substring-before</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$collation</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-substring-before">7.5.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-dates"><CODE>op:subtract-dates</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dates">10.8.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-dateTimes"><CODE>op:subtract-dateTimes</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dateTimes">10.8.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-date"><CODE>op:subtract-dayTimeDuration-from-date</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-date">10.8.11</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-dateTime"><CODE>op:subtract-dayTimeDuration-from-dateTime</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-dateTime">10.8.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-time"><CODE>op:subtract-dayTimeDuration-from-time</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDuration-from-time">10.8.13</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDurations"><CODE>op:subtract-dayTimeDurations</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-dayTimeDurations">10.6.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-times"><CODE>op:subtract-times</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-times">10.8.3</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-date"><CODE>op:subtract-yearMonthDuration-from-date</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-date">10.8.10</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-dateTime"><CODE>op:subtract-yearMonthDuration-from-dateTime</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dateTime</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDuration-from-dateTime">10.8.6</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDurations"><CODE>op:subtract-yearMonthDurations</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-subtract-yearMonthDurations">10.6.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-sum"><CODE>fn:sum</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType</CODE> 
(§<A 
href="REC-xpath-functions-20070123.htm#func-sum">15.4.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-sum"><CODE>fn:sum</CODE></A>(<CODE>$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:anyAtomicType*</CODE>, 
<CODE>$zero</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:anyAtomicType?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-sum">15.4.5</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-time-equal"><CODE>op:time-equal</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-time-equal">10.4.12</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-time-greater-than"><CODE>op:time-greater-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-time-greater-than">10.4.14</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-time-less-than"><CODE>op:time-less-than</CODE></A>(<CODE>$arg1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-time-less-than">10.4.13</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-date"><CODE>fn:timezone-from-date</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:dayTimeDuration?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-date">10.5.17</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-dateTime"><CODE>fn:timezone-from-dateTime</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:dayTimeDuration?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-dateTime">10.5.13</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-time"><CODE>fn:timezone-from-time</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:time?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:dayTimeDuration?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-timezone-from-time">10.5.21</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-to"><CODE>op:to</CODE></A>(<CODE>$firstval</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer</CODE>, 
<CODE>$lastval</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:integer</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-to">15.5.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-tokenize"><CODE>fn:tokenize</CODE></A>(<CODE>$input</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-tokenize">7.6.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-tokenize"><CODE>fn:tokenize</CODE></A>(<CODE>$input</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$pattern</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
<CODE>$flags</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-tokenize">7.6.4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-trace"><CODE>fn:trace</CODE></A>(<CODE>$value</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE>, 
<CODE>$label</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-trace">4</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-translate"><CODE>fn:translate</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>, 
<CODE>$mapString</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>, 
<CODE>$transString</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-translate">7.4.9</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-true"><CODE>fn:true</CODE></A>()<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-true">9.1.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-union"><CODE>op:union</CODE></A>(<CODE>$parameter1</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>, 
<CODE>$parameter2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>node()*</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>node()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-union">15.3.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-unordered"><CODE>fn:unordered</CODE></A>(<CODE>$sourceSeq</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()*</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-unordered">15.1.11</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-upper-case"><CODE>fn:upper-case</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:string?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:string</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-upper-case">7.4.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-year-from-date"><CODE>fn:year-from-date</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:date?</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-year-from-date">10.5.14</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-year-from-dateTime"><CODE>fn:year-from-dateTime</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:dateTime?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-year-from-dateTime">10.5.7</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-greater-than"><CODE>op:yearMonthDuration-greater-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-greater-than">10.4.2</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-less-than"><CODE>op:yearMonthDuration-less-than</CODE></A>(<CODE> 
$arg1</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>, 
<CODE>$arg2</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:yearMonthDuration</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:boolean</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-yearMonthDuration-less-than">10.4.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-years-from-duration"><CODE>fn:years-from-duration</CODE></A>(<CODE> 
$arg</CODE><CODE>&nbsp;as&nbsp;</CODE><CODE>xs:duration?</CODE>)<CODE> 
&nbsp;as&nbsp;</CODE><CODE>xs:integer?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-years-from-duration">10.5.1</A>)</DIV>
<DIV class=protoref><A 
href="REC-xpath-functions-20070123.htm#func-zero-or-one"><CODE>fn:zero-or-one</CODE></A>(<CODE>$arg</CODE><CODE> 
&nbsp;as&nbsp;</CODE><CODE>item()*</CODE>)<CODE>&nbsp;as&nbsp;</CODE><CODE> 
item()?</CODE> (§<A 
href="REC-xpath-functions-20070123.htm#func-zero-or-one">15.2.1</A>)</DIV></DIV></DIV></DIV></BODY></HTML>
